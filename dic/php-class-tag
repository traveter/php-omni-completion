AMQPChannel	commitTransaction	public void commitTransaction ( void )	未確定のトランザクションをコミットする
	__construct	__construct ( AMQPConnection $amqp_connection )	AMQPChannel オブジェクトのインスタンスを作成する
	isConnected	public void isConnected ( void )	チャネルの接続を確認する
	qos	public void qos ( int $size , int $count )	指定したチャネルの Quality Of Service を設定する
	rollbackTransaction	public void rollbackTransaction ( void )	トランザクションをロールバックする
	setPrefetchCount	public void setPrefetchCount ( int $count )	ブローカからプリフェッチするメッセージの数を設定する
	setPrefetchSize	public void setPrefetchSize ( int $size )	ブローカからプリフェッチするウィンドウサイズを設定する
	startTransaction	public void startTransaction ( void )	トランザクションを開始する
AMQPConnection	connect	public bool connect ( void )	AMQP ブローカとの接続を確立する
	__construct	public __construct ([ array $credentials = array() ] )	AMQPConnection のインスタンスを作成する
	disconnect	public bool disconnect ( void )	AMQP ブローカとの接続を閉じる
	getHost	public string getHost ( void )	設定されたホストを取得する
	getLogin	public string getLogin ( void )	設定されたログインを取得する
	getPassword	public string getPassword ( void )	設定されたパスワードを取得する
	getPort	public int getPort ( void )	設定されたポートを取得する
	getTimeout	public int getTimeout ( void )	タイムアウトを取得する
	getVhost	public string getVhost ( void )	設定された仮想ホストを取得する
	isConnected	public bool isConnected ( void )	AMQPConnection オブジェクトがブローカと接続しているかどうかを調べる
	reconnect	public bool reconnect ( void )	開いている接続をすべて閉じ、AMQP ブローカへの新しい接続を作成する
	setHost	public bool setHost ( string $host )	amqp ホストを設定する
	setLogin	public bool setLogin ( string $login )	ログイン文字列を設定する
	setPassword	public bool setPassword ( string $password )	パスワードを設定する
	setPort	public bool setPort ( int $port )	ポートを設定する
	setTimeout	public bool setTimeout ( float $timeout )	タイムアウトを設定する
	setVhost	public bool setVhost ( string $vhost )	AMQP 仮想ホストを設定する
AMQPEnvelope	getAppId	public string getAppId ( void )	メッセージのアプリケーション ID を取得する
	getBody	public string getBody ( void )	メッセージの本文を取得する
	getContentEncoding	public string getContentEncoding ( void )	メッセージのエンコーディングを取得する
	getContentType	public string getContentType ( void )	メッセージのコンテンツタイプを取得する
	getCorrelationId	public string getCorrelationId ( void )	メッセージの相関 ID を取得する
	getDeliveryTag	public string getDeliveryTag ( void )	メッセージの配送タグを取得する
	getExchange	public string getExchange ( void )	メッセージの exchange を取得する
	getExpiration	public string getExpiration ( void )	メッセージの有効期限を取得する
	getHeader	public string getHeader ( string $header_key )	メッセージのヘッダを取得する
	getHeaders	public array getHeaders ( void )	メッセージのヘッダを取得する
	getMessageId	public string getMessageId ( void )	メッセージの ID を取得する
	getPriority	public string getPriority ( void )	メッセージの優先度を取得する
	getReplyTo	public string getReplyTo ( void )	メッセージの返信先を取得する
	getRoutingKey	public string getRoutingKey ( void )	メッセージのルーティングキーを取得する
	getTimeStamp	public string getTimeStamp ( void )	メッセージのタイムスタンプを取得する
	getType	public string getType ( void )	メッセージの型を取得する
	getUserId	public string getUserId ( void )	メッセージのユーザー ID を取得する
	isRedelivery	public bool isRedelivery ( void )	メッセージの再送かどうかを取得する
AMQPExchange	bind	public bool bind ( string $destination_exchange_name , string $source_exchange_name , string $routing_key )	別の exchange にバインドする
	__construct	public __construct ( AMQPChannel $amqp_channel )	AMQPExchange のインスタンスを作成する
	declare	public int declare ( void )	新しい exchange をブローカ上で宣言する
	delete	public bool delete ([ int $flags = AMQP_NOPARAM ] )	exchange をブローカから削除する
	getArgument	public mixed getArgument ( string $key )	指定したキーに関連づけられた引数を取得する
	getArguments	public array getArguments ( void )	指定したキュー上で設定されたすべての引数を取得する
	getFlags	public int getFlags ( void )	フラグのビットマスクを取得する
	getName	public string getName ( void )	設定された名前を取得する
	getType	public string getType ( void )	設定された型を取得する
	publish	public bool publish ( string $message , string $routing_key [, int $flags = AMQP_NOPARAM [, array $attributes = array() ]] )	メッセージを exchange に発行する
	setArgument	public void setArgument ( string $key , mixed $value )	指定したキーの値を設定する
	setArguments	public void setArguments ( array $arguments )	exchange 上のすべての引数を設定する
	setFlags	public void setFlags ( int $flags )	exchange のフラグを設定する
	setName	public void setName ( string $exchange_name )	exchange の名前を設定する
	setType	public string setType ( string $exchange_type )	exchange の型を設定する
AMQPQueue	ack	public bool ack ( int $delivery_tag [, int $flags = AMQP_NOPARAM ] )	メッセージの受信を受け付ける
	bind	public bool bind ( string $exchange_name , string $routing_key )	指定したキューを、exchange 上のルーティングキーにバインドする
	cancel	public bool cancel ([ string $consumer_tag = "" ] )	キューのバインドをキャンセルする
	__construct	public __construct ( AMQPChannel $amqp_channel )	AMQPQueue オブジェクトのインスタンスを作成する
	consume	public void consume ( callable $callback [, int $flags = AMQP_NOPARAM ] )	メッセージをキューから取得する
	declare	public int declare ( void )	新しいキューを宣言する
	delete	public bool delete ( void )	キューとその中身を削除する
	get	public mixed get ([ int $flags = ini_get("amqp.auto_ack") ] )	次のメッセージをキューから取得する
	getArgument	public mixed getArgument ( string $key )	指定したキーに関連づけられた引数を取得する
	getArguments	public array getArguments ( void )	指定したキュー上で設定されたすべての引数を取得する
	getFlags	public int getFlags ( void )	フラグのビットマスクを取得する
	getName	public string getName ( void )	設定された名前を取得する
	nack	public void nack ( string $delivery_tag [, string $flags = AMQP_NOPARAM ] )	メッセージを明示的に受付前の状態にする
	purge	public bool purge ( void )	キューの中身をパージする
	setArgument	public void setArgument ( string $key , mixed $value )	指定したキーの値を設定する
	setArguments	public void setArguments ( array $arguments )	キュー上のすべての引数を設定する
	setFlags	public void setFlags ( int $flags )	キューのフラグを設定する
	setName	public void setName ( string $queue_name )	キューの名前を設定する
	unbind	public bool unbind ( string $exchange_name , string $routing_key )	キューをルーティングキーから削除する
APCIterator	__construct	public __construct ( string $cache [, mixed $search = null [, int $format = APC_ITER_ALL [, int $chunk_size = 100 [, int $list = APC_LIST_ACTIVE ]]]] )	APCIterator イテレータオブジェクトを作成する
	current	public mixed current ( void )	現在の項目を取得する
	getTotalCount	public int getTotalCount ( void )	総数を取得する
	getTotalHits	public int getTotalHits ( void )	キャッシュヒットの総数を取得する
	getTotalSize	public int getTotalSize ( void )	キャッシュのサイズの合計を取得する
	key	public string key ( void )	イテレータのキーを取得する
	next	public void next ( void )	ポインタを次の項目に移動させる
	rewind	public void rewind ( void )	イテレータを巻き戻す
	valid	public void valid ( void )	現在位置が有効かどうかを調べる
AppendIterator	__construct	public __construct ( void )	AppendIterator を作成する
	append	public void append ( Iterator $iterator )	イテレータを追加する
	current	public mixed current ( void )	現在の値を取得する
	getArrayIterator	public void getArrayIterator ( void )	ArrayIterator を取得する
	getInnerIterator	public Iterator getInnerIterator ( void )	内部イテレータを取得する
	getIteratorIndex	public int getIteratorIndex ( void )	イテレータのインデックスを取得する
	key	public scalar key ( void )	現在のキーを取得する
	next	public void next ( void )	次の要素に移動する
	rewind	public void rewind ( void )	イテレータを巻き戻す
	valid	public bool valid ( void )	現在の要素が有効かどうかを調べる
	IteratorIterator::__construct	public IteratorIterator::__construct ( Traversable $iterator )
	IteratorIterator::current	public mixed IteratorIterator::current ( void )
	IteratorIterator::getInnerIterator	public Traversable IteratorIterator::getInnerIterator ( void )
	IteratorIterator::key	public scalar IteratorIterator::key ( void )
	IteratorIterator::next	public void IteratorIterator::next ( void )
	IteratorIterator::rewind	public void IteratorIterator::rewind ( void )
	IteratorIterator::valid	public bool IteratorIterator::valid ( void )
ArrayAccess	offsetExists	abstract public boolean offsetExists ( mixed $offset )	オフセットが存在するかどうか
	offsetGet	abstract public mixed offsetGet ( mixed $offset )	オフセットを取得する
	offsetSet	abstract public void offsetSet ( mixed $offset , mixed $value )	オフセットを設定する
	offsetUnset	abstract public void offsetUnset ( mixed $offset )	オフセットの設定を解除する
ArrayIterator	append	public void append ( mixed $value )	要素を追加する
	asort	public void asort ( void )	値で配列をソートする
	__construct	public __construct ([ mixed $array = array() [, int $flags = 0 ]] )	ArrayIterator を作成する
	count	public int count ( void )	要素を数える
	current	public mixed current ( void )	現在の配列エントリを返す
	getArrayCopy	public array getArrayCopy ( void )	配列のコピーを取得する
	getFlags	public void getFlags ( void )	フラグを取得する
	key	public mixed key ( void )	現在の配列キーを返す
	ksort	public void ksort ( void )	キーで配列をソートする
	natcasesort	public void natcasesort ( void )	大文字小文字を区別せずに自然順で配列をソートする
	natsort	public void natsort ( void )	自然順で配列をソートする
	next	public void next ( void )	次のエントリに移動する
	offsetExists	public void offsetExists ( string $index )	オフセットが存在するかどうかを調べる
	offsetGet	public mixed offsetGet ( string $index )	オフセットの値を取得する
	offsetSet	public void offsetSet ( string $index , string $newval )	オフセットの値を設定する
	offsetUnset	public void offsetUnset ( string $index )	オフセットの値を削除する
	rewind	public void rewind ( void )	配列を最初に巻き戻す
	seek	public void seek ( int $position )	位置を移動する
	serialize	public string serialize ( void )	シリアライズする
	setFlags	public void setFlags ( string $flags )	振る舞いのフラグを設定する
	uasort	public void uasort ( string $cmp_function )	ユーザー定義のソート
	uksort	public void uksort ( string $cmp_function )	ユーザー定義のソート
	unserialize	public string unserialize ( string $serialized )	アンシリアライズする
	valid	public bool valid ( void )	配列がまだエントリを持っているかどうかチェックする
ArrayObject	STD_PROP_LIST	 const integer STD_PROP_LIST = 1 ;
	ARRAY_AS_PROPS	 const integer ARRAY_AS_PROPS = 2 ;
	__construct	public __construct ([ mixed $input = [] [, int $flags = 0 [, string $iterator_class = "ArrayIterator" ]]] )	新規配列オブジェクトを生成する
	append	public void append ( mixed $value )	値を追加する
	asort	public void asort ( void )	値でエントリをソートする
	count	public int count ( void )	ArrayObject の public プロパティの数を取得する
	exchangeArray	public array exchangeArray ( mixed $input )	配列を別の配列と交換する
	getArrayCopy	public array getArrayCopy ( void )	ArrayObject のコピーを作成する
	getFlags	public int getFlags ( void )	振る舞いのフラグを取得する
	getIterator	public ArrayIterator getIterator ( void )	ArrayObject インスタンスから新規イテレータを生成する
	getIteratorClass	public string getIteratorClass ( void )	ArrayObject のイテレータクラス名を取得する
	ksort	public void ksort ( void )	キーでエントリをソートする
	natcasesort	public void natcasesort ( void )	大文字小文字を区別しない "自然順" アルゴリズムでエントリをソートする
	natsort	public void natsort ( void )	"自然順" アルゴリズムでエントリをソートする
	offsetExists	public bool offsetExists ( mixed $index )	要求されたインデックスが存在するかどうかを返す
	offsetGet	public mixed offsetGet ( mixed $index )	指定したインデックスの値を返す
	offsetSet	public void offsetSet ( mixed $index , mixed $newval )	指定したインデックスに新しい値をセットする
	offsetUnset	public void offsetUnset ( mixed $index )	指定したインデックスの値を解除する
	serialize	public void serialize ( void )	ArrayObject をシリアライズする
	setFlags	public void setFlags ( int $flags )	処理フラグを設定する
	setIteratorClass	public void setIteratorClass ( string $iterator_class )	ArrayObject のイテレータクラス名を設定する
	uasort	public void uasort ( callable $cmp_function )	ユーザー定義の比較関数でエントリをソートし、キーとの対応は保持する
	uksort	public void uksort ( callable $cmp_function )	ユーザー定義の比較関数を使って、キーでエントリをソートする
	unserialize	public void unserialize ( string $serialized )	ArrayObject をアンシリアライズする
BadFunctionCallException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
BadMethodCallException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
CachingIterator	CALL_TOSTRING	 const integer CALL_TOSTRING = 1 ;
	CATCH_GET_CHILD	 const integer CATCH_GET_CHILD = 16 ;
	TOSTRING_USE_KEY	 const integer TOSTRING_USE_KEY = 2 ;
	TOSTRING_USE_CURRENT	 const integer TOSTRING_USE_CURRENT = 4 ;
	TOSTRING_USE_INNER	 const integer TOSTRING_USE_INNER = 8 ;
	FULL_CACHE	 const integer FULL_CACHE = 256 ;
	__construct	public __construct ( Iterator $iterator [, string $flags = self::CALL_TOSTRING ] )	新しい CachingIterator オブジェクトを作成する
	count	public int count ( void )	イテレータ内の要素の数
	current	public void current ( void )	現在の要素を返す
	getCache	public void getCache ( void )	The getCache purpose
	getFlags	public void getFlags ( void )	使用しているフラグを取得する
	getInnerIterator	public Iterator getInnerIterator ( void )	内部イテレータを返す
	hasNext	public void hasNext ( void )	内部イテレータが有効な次の要素を持つかどうかをチェックする
	key	public scalar key ( void )	現在の要素のキーを返す
	next	public void next ( void )	イテレータを前方に移動する
	offsetExists	public void offsetExists ( string $index )	The offsetExists purpose
	offsetGet	public void offsetGet ( string $index )	The offsetGet purpose
	offsetSet	public void offsetSet ( string $index , string $newval )	The offsetSet purpose
	offsetUnset	public void offsetUnset ( string $index )	The offsetUnset purpose
	rewind	public void rewind ( void )	イテレータを巻き戻す
	setFlags	public void setFlags ( bitmask $flags )	The setFlags purpose
	__toString	public void __toString ( void )	現在の要素の文字列表現を返す
	valid	public void valid ( void )	現在の要素が有効かどうかをチェックする
Cairo	availableFonts	public static array availableFonts ( void )	Retrieves the availables font types
	availableSurfaces	public static array availableSurfaces ( void )	Retrieves all available surfaces
	statusToString	public static string statusToString ( int $status )	Retrieves the current status as string
	version	public static int version ( void )	Retrives cairo's library version
	versionString	public static string versionString ( void )	Retrieves cairo version as string
CairoAntialias	MODE_DEFAULT	 const integer MODE_DEFAULT = 0 ;
	MODE_NONE	 const integer MODE_NONE = 1 ;
	MODE_GRAY	 const integer MODE_GRAY = 2 ;
	MODE_SUBPIXEL	 const integer MODE_SUBPIXEL = 3 ;
CairoContent	COLOR	 const integer COLOR = 4096 ;
	ALPHA	 const integer ALPHA = 8192 ;
	COLOR_ALPHA	 const integer COLOR_ALPHA = 12288 ;
CairoContext	appendPath	public void appendPath ( CairoPath $path )	Appends a path to current path
	arc	public void arc ( float $x , float $y , float $radius , float $angle1 , float $angle2 )	Adds a circular arc
	arcNegative	public void arcNegative ( float $x , float $y , float $radius , float $angle1 , float $angle2 )	Adds a negative arc
	clip	public void clip ( void )	Establishes a new clip region
	clipExtents	public array clipExtents ( void )	Computes the area inside the current clip
	clipPreserve	public void clipPreserve ( void )	Establishes a new clip region from the current clip
	clipRectangleList	public array clipRectangleList ( void )	Retrieves the current clip as a list of rectangles
	closePath	public void closePath ( void )	Closes the current path
	__construct	public __construct ( CairoSurface $surface )	Creates a new CairoContext
	copyPage	public void copyPage ( void )	Emits the current page
	copyPath	public CairoPath copyPath ( void )	Creates a copy of the current path
	copyPathFlat	public CairoPath copyPathFlat ( void )	Gets a flattened copy of the current path
	curveTo	public void curveTo ( float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )	Adds a curve
	deviceToUser	public array deviceToUser ( float $x , float $y )	Transform a coordinate
	deviceToUserDistance	public array deviceToUserDistance ( float $x , float $y )	Transform a distance
	fill	public void fill ( void )	Fills the current path
	fillExtents	public array fillExtents ( void )	Computes the filled area
	fillPreserve	public void fillPreserve ( void )	Fills and preserve the current path
	fontExtents	public array fontExtents ( void )	Get the font extents
	getAntialias	public int getAntialias ( void )	Retrives the current antialias mode
	getCurrentPoint	public array getCurrentPoint ( void )	The getCurrentPoint purpose
	getDash	public array getDash ( void )	The getDash purpose
	getDashCount	public int getDashCount ( void )	The getDashCount purpose
	getFillRule	public int getFillRule ( void )	The getFillRule purpose
	getFontFace	public void getFontFace ( void )	The getFontFace purpose
	getFontMatrix	public void getFontMatrix ( void )	The getFontMatrix purpose
	getFontOptions	public void getFontOptions ( void )	The getFontOptions purpose
	getGroupTarget	public void getGroupTarget ( void )	The getGroupTarget purpose
	getLineCap	public int getLineCap ( void )	The getLineCap purpose
	getLineJoin	public int getLineJoin ( void )	The getLineJoin purpose
	getLineWidth	public float getLineWidth ( void )	The getLineWidth purpose
	getMatrix	public void getMatrix ( void )	The getMatrix purpose
	getMiterLimit	public float getMiterLimit ( void )	The getMiterLimit purpose
	getOperator	public int getOperator ( void )	The getOperator purpose
	getScaledFont	public void getScaledFont ( void )	The getScaledFont purpose
	getSource	public void getSource ( void )	The getSource purpose
	getTarget	public void getTarget ( void )	The getTarget purpose
	getTolerance	public float getTolerance ( void )	The getTolerance purpose
	glyphPath	public void glyphPath ( array $glyphs )	The glyphPath purpose
	hasCurrentPoint	public bool hasCurrentPoint ( void )	The hasCurrentPoint purpose
	identityMatrix	public void identityMatrix ( void )	The identityMatrix purpose
	inFill	public bool inFill ( string $x , string $y )	The inFill purpose
	inStroke	public bool inStroke ( string $x , string $y )	The inStroke purpose
	lineTo	public void lineTo ( string $x , string $y )	The lineTo purpose
	mask	public void mask ( string $pattern )	The mask purpose
	maskSurface	public void maskSurface ( string $surface [, string $x [, string $y ]] )	The maskSurface purpose
	moveTo	public void moveTo ( string $x , string $y )	The moveTo purpose
	newPath	public void newPath ( void )	The newPath purpose
	newSubPath	public void newSubPath ( void )	The newSubPath purpose
	paint	public void paint ( void )	The paint purpose
	paintWithAlpha	public void paintWithAlpha ( string $alpha )	The paintWithAlpha purpose
	pathExtents	public array pathExtents ( void )	The pathExtents purpose
	popGroup	public void popGroup ( void )	The popGroup purpose
	popGroupToSource	public void popGroupToSource ( void )	The popGroupToSource purpose
	pushGroup	public void pushGroup ( void )	The pushGroup purpose
	pushGroupWithContent	public void pushGroupWithContent ( string $content )	The pushGroupWithContent purpose
	rectangle	public void rectangle ( string $x , string $y , string $width , string $height )	The rectangle purpose
	relCurveTo	public void relCurveTo ( string $x1 , string $y1 , string $x2 , string $y2 , string $x3 , string $y3 )	The relCurveTo purpose
	relLineTo	public void relLineTo ( string $x , string $y )	The relLineTo purpose
	relMoveTo	public void relMoveTo ( string $x , string $y )	The relMoveTo purpose
	resetClip	public void resetClip ( void )	The resetClip purpose
	restore	public void restore ( void )	The restore purpose
	rotate	public void rotate ( string $angle )	The rotate purpose
	save	public void save ( void )	The save purpose
	scale	public void scale ( string $x , string $y )	The scale purpose
	selectFontFace	public void selectFontFace ( string $family [, string $slant [, string $weight ]] )	The selectFontFace purpose
	setAntialias	public void setAntialias ([ string $antialias ] )	The setAntialias purpose
	setDash	public void setDash ( string $dashes [, string $offset ] )	The setDash purpose
	setFillRule	public void setFillRule ( string $setting )	The setFillRule purpose
	setFontFace	public void setFontFace ( CairoFontFace $fontface )	The setFontFace purpose
	setFontMatrix	public void setFontMatrix ( string $matrix )	The setFontMatrix purpose
	setFontOptions	public void setFontOptions ( string $fontoptions )	The setFontOptions purpose
	setFontSize	public void setFontSize ( string $size )	The setFontSize purpose
	setLineCap	public void setLineCap ( string $setting )	The setLineCap purpose
	setLineJoin	public void setLineJoin ( string $setting )	The setLineJoin purpose
	setLineWidth	public void setLineWidth ( string $width )	The setLineWidth purpose
	setMatrix	public void setMatrix ( string $matrix )	The setMatrix purpose
	setMiterLimit	public void setMiterLimit ( string $limit )	The setMiterLimit purpose
	setOperator	public void setOperator ( string $setting )	The setOperator purpose
	setScaledFont	public void setScaledFont ( string $scaledfont )	The setScaledFont purpose
	setSource	public void setSource ( string $pattern )	The setSource purpose
	setSourceRGB	public void setSourceRGB ( string $red , string $green , string $blue )	The setSourceRGB purpose
	setSourceRGBA	public void setSourceRGBA ( string $red , string $green , string $blue , string $alpha )	The setSourceRGBA purpose
	setSourceSurface	public void setSourceSurface ( string $surface [, string $x [, string $y ]] )	The setSourceSurface purpose
	setTolerance	public void setTolerance ( string $tolerance )	The setTolerance purpose
	showPage	public void showPage ( void )	The showPage purpose
	showText	public void showText ( string $text )	The showText purpose
	status	public int status ( void )	The status purpose
	stroke	public void stroke ( void )	The stroke purpose
	strokeExtents	public array strokeExtents ( void )	The strokeExtents purpose
	strokePreserve	public void strokePreserve ( void )	The strokePreserve purpose
	textExtents	public array textExtents ( string $text )	The textExtents purpose
	textPath	public void textPath ( string $string )	The textPath purpose
	transform	public void transform ( string $matrix )	The transform purpose
	translate	public void translate ( string $x , string $y )	The translate purpose
	userToDevice	public array userToDevice ( string $x , string $y )	The userToDevice purpose
	userToDeviceDistance	public array userToDeviceDistance ( string $x , string $y )	The userToDeviceDistance purpose
CairoException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
CairoExtend	NONE	 const integer NONE = 0 ;
	REPEAT	 const integer REPEAT = 1 ;
	REFLECT	 const integer REFLECT = 2 ;
	PAD	 const integer PAD = 3 ;
CairoFillRule	WINDING	 const integer WINDING = 0 ;
	EVEN_ODD	 const integer EVEN_ODD = 1 ;
CairoFilter	FAST	 const integer FAST = 0 ;
	GOOD	 const integer GOOD = 1 ;
	BEST	 const integer BEST = 2 ;
	NEAREST	 const integer NEAREST = 3 ;
	BILINEAR	 const integer BILINEAR = 4 ;
	GAUSSIAN	 const integer GAUSSIAN = 5 ;
CairoFontFace	__construct	public __construct ( void )	Creates a new CairoFontFace object
	getType	public int getType ( void )	Retrieves the font face type
	status	public int status ( void )	Check for CairoFontFace errors
CairoFontOptions	__construct	public __construct ( void )	The __construct purpose
	equal	public bool equal ( string $other )	The equal purpose
	getAntialias	public int getAntialias ( void )	The getAntialias purpose
	getHintMetrics	public int getHintMetrics ( void )	The getHintMetrics purpose
	getHintStyle	public int getHintStyle ( void )	The getHintStyle purpose
	getSubpixelOrder	public int getSubpixelOrder ( void )	The getSubpixelOrder purpose
	hash	public int hash ( void )	The hash purpose
	merge	public void merge ( string $other )	The merge purpose
	setAntialias	public void setAntialias ( string $antialias )	The setAntialias purpose
	setHintMetrics	public void setHintMetrics ( string $hint_metrics )	The setHintMetrics purpose
	setHintStyle	public void setHintStyle ( string $hint_style )	The setHintStyle purpose
	setSubpixelOrder	public void setSubpixelOrder ( string $subpixel_order )	The setSubpixelOrder purpose
	status	public int status ( void )	The status purpose
CairoFontSlant	NORMAL	 const integer NORMAL = 0 ;
	ITALIC	 const integer ITALIC = 1 ;
	OBLIQUE	 const integer OBLIQUE = 2 ;
CairoFontType	TOY	 const integer TOY = 0 ;
	FT	 const integer FT = 1 ;
	WIN32	 const integer WIN32 = 2 ;
	QUARTZ	 const integer QUARTZ = 3 ;
CairoFontWeight	NORMAL	 const integer NORMAL = 0 ;
	BOLD	 const integer BOLD = 1 ;
CairoFormat	ARGB32	 const integer ARGB32 = 0 ;
	RGB24	 const integer RGB24 = 1 ;
	A8	 const integer A8 = 2 ;
	A1	 const integer A1 = 3 ;
	strideForWidth	public static int strideForWidth ( int $format , int $width )	Provides an appropiate stride to use
CairoGradientPattern	addColorStopRgb	public void addColorStopRgb ( string $offset , string $red , string $green , string $blue )	The addColorStopRgb purpose
	addColorStopRgba	public void addColorStopRgba ( string $offset , string $red , string $green , string $blue , string $alpha )	The addColorStopRgba purpose
	getColorStopCount	public int getColorStopCount ( void )	The getColorStopCount purpose
	getColorStopRgba	public array getColorStopRgba ( string $index )	The getColorStopRgba purpose
	getExtend	public int getExtend ( void )	The getExtend purpose
	setExtend	public void setExtend ( int $extend )	The setExtend purpose
	CairoPattern::__construct	public CairoPattern::__construct ( void )
	CairoPattern::getMatrix	public void CairoPattern::getMatrix ( void )
	CairoPattern::getType	public int CairoPattern::getType ( void )
	CairoPattern::setMatrix	public void CairoPattern::setMatrix ( string $matrix )
	CairoPattern::status	public int CairoPattern::status ( void )
CairoHintMetrics	METRICS_DEFAULT	 const integer METRICS_DEFAULT = 0 ;
	METRICS_OFF	 const integer METRICS_OFF = 1 ;
	METRICS_ON	 const integer METRICS_ON = 2 ;
CairoHintStyle	STYLE_DEFAULT	 const integer STYLE_DEFAULT = 0 ;
	STYLE_NONE	 const integer STYLE_NONE = 1 ;
	STYLE_SLIGHT	 const integer STYLE_SLIGHT = 2 ;
	STYLE_MEDIUM	 const integer STYLE_MEDIUM = 3 ;
	STYLE_FULL	 const integer STYLE_FULL = 4 ;
CairoImageSurface	__construct	public __construct ( int $format , int $width , int $height )	Creates a new CairoImageSurface
	createForData	public static void createForData ( string $data , int $format , int $width , int $height [, int $stride = -1 ] )	The createForData purpose
	createFromPng	public static CairoImageSurface createFromPng ( string $file )	Creates a new CairoImageSurface form a png image file
	getData	public string getData ( void )	Gets the image data as string
	getFormat	public int getFormat ( void )	Get the image format
	getHeight	public int getHeight ( void )	Retrieves the height of the CairoImageSurface
	getStride	public int getStride ( void )	The getStride purpose
	getWidth	public int getWidth ( void )	Retrieves the width of the CairoImageSurface
	CairoSurface::__construct	public CairoSurface::__construct ( void )
	CairoSurface::copyPage	public void CairoSurface::copyPage ( void )
	CairoSurface::createSimilar	public void CairoSurface::createSimilar ( CairoSurface $other , int $content , string $width , string $height )
	CairoSurface::finish	public void CairoSurface::finish ( void )
	CairoSurface::flush	public void CairoSurface::flush ( void )
	CairoSurface::getContent	public int CairoSurface::getContent ( void )
	CairoSurface::getDeviceOffset	public array CairoSurface::getDeviceOffset ( void )
	CairoSurface::getFontOptions	public void CairoSurface::getFontOptions ( void )
	CairoSurface::getType	public int CairoSurface::getType ( void )
	CairoSurface::markDirty	public void CairoSurface::markDirty ( void )
	CairoSurface::markDirtyRectangle	public void CairoSurface::markDirtyRectangle ( string $x , string $y , string $width , string $height )
	CairoSurface::setDeviceOffset	public void CairoSurface::setDeviceOffset ( string $x , string $y )
	CairoSurface::setFallbackResolution	public void CairoSurface::setFallbackResolution ( string $x , string $y )
	CairoSurface::showPage	public void CairoSurface::showPage ( void )
	CairoSurface::status	public int CairoSurface::status ( void )
	CairoSurface::writeToPng	public void CairoSurface::writeToPng ( string $file )
CairoLinearGradient	__construct	public __construct ( float $x0 , float $y0 , float $x1 , float $y1 )	The __construct purpose
	getPoints	public array getPoints ( void )	The getPoints purpose
	CairoGradientPattern::addColorStopRgb	public void CairoGradientPattern::addColorStopRgb ( string $offset , string $red , string $green , string $blue )
	CairoGradientPattern::addColorStopRgba	public void CairoGradientPattern::addColorStopRgba ( string $offset , string $red , string $green , string $blue , string $alpha )
	CairoGradientPattern::getColorStopCount	public int CairoGradientPattern::getColorStopCount ( void )
	CairoGradientPattern::getColorStopRgba	public array CairoGradientPattern::getColorStopRgba ( string $index )
	CairoGradientPattern::getExtend	public int CairoGradientPattern::getExtend ( void )
	CairoGradientPattern::setExtend	public void CairoGradientPattern::setExtend ( int $extend )
CairoLineCap	BUTT	 const integer BUTT = 0 ;
	ROUND	 const integer ROUND = 1 ;
	SQUARE	 const integer SQUARE = 2 ;
CairoLineJoin	MITER	 const integer MITER = 0 ;
	ROUND	 const integer ROUND = 1 ;
	BEVEL	 const integer BEVEL = 2 ;
CairoMatrix	__construct	public __construct ([ float $xx = 1.0 [, float $yx = 0.0 [, float $xy = 0.0 [, float $yy = 1.0 [, float $x0 = 0.0 [, float $y0 = 0.0 ]]]]]] )	Creates a new CairoMatrix object
	initIdentity	public static void initIdentity ( void )	Creates a new identity matrix
	initRotate	public static void initRotate ( float $radians )	Creates a new rotated matrix
	initScale	public static void initScale ( float $sx , float $sy )	Creates a new scaling matrix
	initTranslate	public static void initTranslate ( float $tx , float $ty )	Creates a new translation matrix
	invert	public void invert ( void )	The invert purpose
	multiply	public static CairoMatrix multiply ( CairoMatrix $matrix1 , CairoMatrix $matrix2 )	The multiply purpose
	rotate	public void rotate ( string $sx , string $sy )	The rotate purpose
	scale	public void scale ( float $sx , float $sy )	Applies scaling to a matrix
	transformDistance	public array transformDistance ( string $dx , string $dy )	The transformDistance purpose
	transformPoint	public array transformPoint ( string $dx , string $dy )	The transformPoint purpose
	translate	public void translate ( string $tx , string $ty )	The translate purpose
CairoOperator	CLEAR	 const integer CLEAR = 0 ;
	SOURCE	 const integer SOURCE = 1 ;
	OVER	 const integer OVER = 2 ;
	IN	 const integer IN = 3 ;
	OUT	 const integer OUT = 4 ;
	ATOP	 const integer ATOP = 5 ;
	DEST	 const integer DEST = 6 ;
	DEST_OVER	 const integer DEST_OVER = 7 ;
	DEST_IN	 const integer DEST_IN = 8 ;
	DEST_OUT	 const integer DEST_OUT = 9 ;
	DEST_ATOP	 const integer DEST_ATOP = 10 ;
	XOR	 const integer XOR = 11 ;
	ADD	 const integer ADD = 12 ;
	SATURATE	 const integer SATURATE = 13 ;
CairoPattern	__construct	public __construct ( void )	The __construct purpose
	getMatrix	public void getMatrix ( void )	The getMatrix purpose
	getType	public int getType ( void )	The getType purpose
	setMatrix	public void setMatrix ( string $matrix )	The setMatrix purpose
	status	public int status ( void )	The status purpose
CairoPatternType	SOLID	 const integer SOLID = 0 ;
	SURFACE	 const integer SURFACE = 1 ;
	LINEAR	 const integer LINEAR = 2 ;
	RADIAL	 const integer RADIAL = 3 ;
CairoPdfSurface	__construct	public __construct ( string $file , float $width , float $height )	The __construct purpose
	setSize	public void setSize ( string $width , string $height )	The setSize purpose
	CairoSurface::__construct	public CairoSurface::__construct ( void )
	CairoSurface::copyPage	public void CairoSurface::copyPage ( void )
	CairoSurface::createSimilar	public void CairoSurface::createSimilar ( CairoSurface $other , int $content , string $width , string $height )
	CairoSurface::finish	public void CairoSurface::finish ( void )
	CairoSurface::flush	public void CairoSurface::flush ( void )
	CairoSurface::getContent	public int CairoSurface::getContent ( void )
	CairoSurface::getDeviceOffset	public array CairoSurface::getDeviceOffset ( void )
	CairoSurface::getFontOptions	public void CairoSurface::getFontOptions ( void )
	CairoSurface::getType	public int CairoSurface::getType ( void )
	CairoSurface::markDirty	public void CairoSurface::markDirty ( void )
	CairoSurface::markDirtyRectangle	public void CairoSurface::markDirtyRectangle ( string $x , string $y , string $width , string $height )
	CairoSurface::setDeviceOffset	public void CairoSurface::setDeviceOffset ( string $x , string $y )
	CairoSurface::setFallbackResolution	public void CairoSurface::setFallbackResolution ( string $x , string $y )
	CairoSurface::showPage	public void CairoSurface::showPage ( void )
	CairoSurface::status	public int CairoSurface::status ( void )
	CairoSurface::writeToPng	public void CairoSurface::writeToPng ( string $file )
CairoPsLevel	LEVEL_2	 const integer LEVEL_2 = 0 ;
	LEVEL_3	 const integer LEVEL_3 = 1 ;
CairoPsSurface	__construct	public __construct ( string $file , float $width , float $height )	The __construct purpose
	dscBeginPageSetup	public void dscBeginPageSetup ( void )	The dscBeginPageSetup purpose
	dscBeginSetup	public void dscBeginSetup ( void )	The dscBeginSetup purpose
	dscComment	public void dscComment ( string $comment )	The dscComment purpose
	getEps	public bool getEps ( void )	The getEps purpose
	getLevels	public static array getLevels ( void )	The getLevels purpose
	levelToString	public static string levelToString ( int $level )	The levelToString purpose
	restrictToLevel	public void restrictToLevel ( string $level )	The restrictToLevel purpose
	setEps	public void setEps ( string $level )	The setEps purpose
	setSize	public void setSize ( string $width , string $height )	The setSize purpose
	CairoSurface::__construct	public CairoSurface::__construct ( void )
	CairoSurface::copyPage	public void CairoSurface::copyPage ( void )
	CairoSurface::createSimilar	public void CairoSurface::createSimilar ( CairoSurface $other , int $content , string $width , string $height )
	CairoSurface::finish	public void CairoSurface::finish ( void )
	CairoSurface::flush	public void CairoSurface::flush ( void )
	CairoSurface::getContent	public int CairoSurface::getContent ( void )
	CairoSurface::getDeviceOffset	public array CairoSurface::getDeviceOffset ( void )
	CairoSurface::getFontOptions	public void CairoSurface::getFontOptions ( void )
	CairoSurface::getType	public int CairoSurface::getType ( void )
	CairoSurface::markDirty	public void CairoSurface::markDirty ( void )
	CairoSurface::markDirtyRectangle	public void CairoSurface::markDirtyRectangle ( string $x , string $y , string $width , string $height )
	CairoSurface::setDeviceOffset	public void CairoSurface::setDeviceOffset ( string $x , string $y )
	CairoSurface::setFallbackResolution	public void CairoSurface::setFallbackResolution ( string $x , string $y )
	CairoSurface::showPage	public void CairoSurface::showPage ( void )
	CairoSurface::status	public int CairoSurface::status ( void )
	CairoSurface::writeToPng	public void CairoSurface::writeToPng ( string $file )
CairoRadialGradient	__construct	public __construct ( float $x0 , float $y0 , float $r0 , float $x1 , float $y1 , float $r1 )	The __construct purpose
	getCircles	public array getCircles ( void )	The getCircles purpose
	CairoGradientPattern::addColorStopRgb	public void CairoGradientPattern::addColorStopRgb ( string $offset , string $red , string $green , string $blue )
	CairoGradientPattern::addColorStopRgba	public void CairoGradientPattern::addColorStopRgba ( string $offset , string $red , string $green , string $blue , string $alpha )
	CairoGradientPattern::getColorStopCount	public int CairoGradientPattern::getColorStopCount ( void )
	CairoGradientPattern::getColorStopRgba	public array CairoGradientPattern::getColorStopRgba ( string $index )
	CairoGradientPattern::getExtend	public int CairoGradientPattern::getExtend ( void )
	CairoGradientPattern::setExtend	public void CairoGradientPattern::setExtend ( int $extend )
CairoScaledFont	__construct	public __construct ( CairoFontFace $font_face , CairoMatrix $matrix , CairoMatrix $ctm , CairoFontOptions $options )	The __construct purpose
	extents	public array extents ( void )	The extents purpose
	getCtm	public CairoMatrix getCtm ( void )	The getCtm purpose
	getFontFace	public void getFontFace ( void )	The getFontFace purpose
	getFontMatrix	public void getFontMatrix ( void )	The getFontMatrix purpose
	getFontOptions	public void getFontOptions ( void )	The getFontOptions purpose
	getScaleMatrix	public void getScaleMatrix ( void )	The getScaleMatrix purpose
	getType	public int getType ( void )	The getType purpose
	glyphExtents	public array glyphExtents ( string $glyphs )	The glyphExtents purpose
	status	public int status ( void )	The status purpose
	textExtents	public array textExtents ( string $text )	The textExtents purpose
CairoSolidPattern	__construct	public __construct ( float $red , float $green , float $blue [, float $alpha = 0 ] )	The __construct purpose
	getRgba	public array getRgba ( void )	The getRgba purpose
	CairoPattern::__construct	public CairoPattern::__construct ( void )
	CairoPattern::getMatrix	public void CairoPattern::getMatrix ( void )
	CairoPattern::getType	public int CairoPattern::getType ( void )
	CairoPattern::setMatrix	public void CairoPattern::setMatrix ( string $matrix )
	CairoPattern::status	public int CairoPattern::status ( void )
CairoStatus	SUCCESS	 const integer SUCCESS = 0 ;
	NO_MEMORY	 const integer NO_MEMORY = 1 ;
	INVALID_RESTORE	 const integer INVALID_RESTORE = 2 ;
	INVALID_POP_GROUP	 const integer INVALID_POP_GROUP = 3 ;
	NO_CURRENT_POINT	 const integer NO_CURRENT_POINT = 4 ;
	INVALID_MATRIX	 const integer INVALID_MATRIX = 5 ;
	INVALID_STATUS	 const integer INVALID_STATUS = 6 ;
	NULL_POINTER	 const integer NULL_POINTER = 7 ;
	INVALID_STRING	 const integer INVALID_STRING = 8 ;
	INVALID_PATH_DATA	 const integer INVALID_PATH_DATA = 9 ;
	READ_ERROR	 const integer READ_ERROR = 10 ;
	WRITE_ERROR	 const integer WRITE_ERROR = 11 ;
	SURFACE_FINISHED	 const integer SURFACE_FINISHED = 12 ;
	SURFACE_TYPE_MISMATCH	 const integer SURFACE_TYPE_MISMATCH = 13 ;
	PATTERN_TYPE_MISMATCH	 const integer PATTERN_TYPE_MISMATCH = 14 ;
	INVALID_CONTENT	 const integer INVALID_CONTENT = 15 ;
	INVALID_FORMAT	 const integer INVALID_FORMAT = 16 ;
	INVALID_VISUAL	 const integer INVALID_VISUAL = 17 ;
	FILE_NOT_FOUND	 const integer FILE_NOT_FOUND = 18 ;
	INVALID_DASH	 const integer INVALID_DASH = 19 ;
	INVALID_DSC_COMMENT	 const integer INVALID_DSC_COMMENT = 20 ;
	INVALID_INDEX	 const integer INVALID_INDEX = 21 ;
	CLIP_NOT_REPRESENTABLE	 const integer CLIP_NOT_REPRESENTABLE = 22 ;
	TEMP_FILE_ERROR	 const integer TEMP_FILE_ERROR = 23 ;
	INVALID_STRIDE	 const integer INVALID_STRIDE = 24 ;
CairoSubpixelOrder	ORDER_DEFAULT	 const integer ORDER_DEFAULT = 0 ;
	ORDER_RGB	 const integer ORDER_RGB = 1 ;
	ORDER_BGR	 const integer ORDER_BGR = 2 ;
	ORDER_VRGB	 const integer ORDER_VRGB = 3 ;
	ORDER_VBGR	 const integer ORDER_VBGR = 4 ;
CairoSurface	__construct	public __construct ( void )	The __construct purpose
	copyPage	public void copyPage ( void )	The copyPage purpose
	createSimilar	public void createSimilar ( CairoSurface $other , int $content , string $width , string $height )	The createSimilar purpose
	finish	public void finish ( void )	The finish purpose
	flush	public void flush ( void )	The flush purpose
	getContent	public int getContent ( void )	The getContent purpose
	getDeviceOffset	public array getDeviceOffset ( void )	The getDeviceOffset purpose
	getFontOptions	public void getFontOptions ( void )	The getFontOptions purpose
	getType	public int getType ( void )	The getType purpose
	markDirty	public void markDirty ( void )	The markDirty purpose
	markDirtyRectangle	public void markDirtyRectangle ( string $x , string $y , string $width , string $height )	The markDirtyRectangle purpose
	setDeviceOffset	public void setDeviceOffset ( string $x , string $y )	The setDeviceOffset purpose
	setFallbackResolution	public void setFallbackResolution ( string $x , string $y )	The setFallbackResolution purpose
	showPage	public void showPage ( void )	The showPage purpose
	status	public int status ( void )	The status purpose
	writeToPng	public void writeToPng ( string $file )	The writeToPng purpose
CairoSurfacePattern	__construct	public __construct ( CairoSurface $surface )	The __construct purpose
	getExtend	public int getExtend ( void )	The getExtend purpose
	getFilter	public int getFilter ( void )	The getFilter purpose
	getSurface	public void getSurface ( void )	The getSurface purpose
	setExtend	public void setExtend ( int $extend )	The setExtend purpose
	setFilter	public void setFilter ( string $filter )	The setFilter purpose
	CairoPattern::__construct	public CairoPattern::__construct ( void )
	CairoPattern::getMatrix	public void CairoPattern::getMatrix ( void )
	CairoPattern::getType	public int CairoPattern::getType ( void )
	CairoPattern::setMatrix	public void CairoPattern::setMatrix ( string $matrix )
	CairoPattern::status	public int CairoPattern::status ( void )
CairoSurfaceType	IMAGE	 const integer IMAGE = 0 ;
	PDF	 const integer PDF = 1 ;
	PS	 const integer PS = 2 ;
	XLIB	 const integer XLIB = 3 ;
	XCB	 const integer XCB = 4 ;
	GLITZ	 const integer GLITZ = 5 ;
	QUARTZ	 const integer QUARTZ = 6 ;
	WIN32	 const integer WIN32 = 7 ;
	BEOS	 const integer BEOS = 8 ;
	DIRECTFB	 const integer DIRECTFB = 9 ;
	SVG	 const integer SVG = 10 ;
	OS2	 const integer OS2 = 11 ;
	WIN32_PRINTING	 const integer WIN32_PRINTING = 12 ;
	QUARTZ_IMAGE	 const integer QUARTZ_IMAGE = 13 ;
CairoSvgSurface	__construct	public __construct ( string $file , float $width , float $height )	The __construct purpose
	getVersions	public static array getVersions ( void )	Used to retrieve a list of supported SVG versions
	restrictToVersion	public void restrictToVersion ( string $version )	The restrictToVersion purpose
	versionToString	public static string versionToString ( int $version )	The versionToString purpose
	CairoSurface::__construct	public CairoSurface::__construct ( void )
	CairoSurface::copyPage	public void CairoSurface::copyPage ( void )
	CairoSurface::createSimilar	public void CairoSurface::createSimilar ( CairoSurface $other , int $content , string $width , string $height )
	CairoSurface::finish	public void CairoSurface::finish ( void )
	CairoSurface::flush	public void CairoSurface::flush ( void )
	CairoSurface::getContent	public int CairoSurface::getContent ( void )
	CairoSurface::getDeviceOffset	public array CairoSurface::getDeviceOffset ( void )
	CairoSurface::getFontOptions	public void CairoSurface::getFontOptions ( void )
	CairoSurface::getType	public int CairoSurface::getType ( void )
	CairoSurface::markDirty	public void CairoSurface::markDirty ( void )
	CairoSurface::markDirtyRectangle	public void CairoSurface::markDirtyRectangle ( string $x , string $y , string $width , string $height )
	CairoSurface::setDeviceOffset	public void CairoSurface::setDeviceOffset ( string $x , string $y )
	CairoSurface::setFallbackResolution	public void CairoSurface::setFallbackResolution ( string $x , string $y )
	CairoSurface::showPage	public void CairoSurface::showPage ( void )
	CairoSurface::status	public int CairoSurface::status ( void )
	CairoSurface::writeToPng	public void CairoSurface::writeToPng ( string $file )
CairoSvgVersion	VERSION_1_1	 const integer VERSION_1_1 = 0 ;
	VERSION_1_2	 const integer VERSION_1_2 = 1 ;
CallbackFilterIterator	__construct	public __construct ( Iterator $iterator , callable $callback )	フィルタリングしたイテレータを別のイテレータから作成する
	accept	public string accept ( void )	現在の値、現在のキー、そして内部イテレータを引数としてでコールバックを呼び出す
	FilterIterator::accept	public abstract bool FilterIterator::accept ( void )
	FilterIterator::__construct	public FilterIterator::__construct ( Iterator $iterator )
	FilterIterator::current	public mixed FilterIterator::current ( void )
	FilterIterator::getInnerIterator	public Iterator FilterIterator::getInnerIterator ( void )
	FilterIterator::key	public mixed FilterIterator::key ( void )
	FilterIterator::next	public void FilterIterator::next ( void )
	FilterIterator::rewind	public void FilterIterator::rewind ( void )
	FilterIterator::valid	public bool FilterIterator::valid ( void )
chdb	__construct	public __construct ( string $pathname )	chdb クラスのインスタンスを生成します。
	get	public string get ( string $key )	キーに対応した値を取得する
Closure	__construct	__construct ( void )	インスタンス作成を無効化したコンストラクタ
	bind	public static Closure bind ( Closure $closure , object $newthis [, mixed $newscope = 'static' ] )	バインドされたオブジェクトとクラスのスコープでクロージャを複製する
	bindTo	public Closure bindTo ( object $newthis [, mixed $newscope = 'static' ] )	新しくバインドしたオブジェクトとクラスのスコープで、クロージャを複製する
Collator	__construct	public __construct ( string $locale )	collator を作成する
	asort	public bool asort ( array &$arr [, int $sort_flag ] )	インデックスの情報を保持しつつ配列を並べ替える
	compare	public int compare ( string $str1 , string $str2 )	ふたつの Unicode 文字列を比較する
	create	public static Collator create ( string $locale )	collator を作成する
	getAttribute	public int getAttribute ( int $attr )	照合用の属性の値を取得する
	getErrorCode	public int getErrorCode ( void )	collator の直近のエラーコードを取得する
	getErrorMessage	public string getErrorMessage ( void )	collator の直近のエラーコードのテキストを取得する
	getLocale	public string getLocale ( int $type )	collator のロケール名を取得する
	getSortKey	public string getSortKey ( string $str )	文字列のソート用のキーを取得する
	getStrength	public int getStrength ( void )	現在の照合強度を取得する
	setAttribute	public bool setAttribute ( int $attr , int $val )	照合用の属性を設定する
	setStrength	public bool setStrength ( int $strength )	照合強度を設定する
	sortWithSortKeys	public bool sortWithSortKeys ( array &$arr )	指定した collator とキーで配列を並べ替える
	sort	public bool sort ( array &$arr [, int $sort_flag ] )	指定した collator で配列を並べ替える
Cond	broadcast	final public static boolean broadcast ( long $condition )	条件をブロードキャストする
	create	final public static long create ( void )	条件を作る
	destroy	final public static boolean destroy ( long $condition )	条件を破棄する
	signal	final public static boolean signal ( long $condition )	条件を通知する
	wait	final public static boolean wait ( long $condition , long $mutex [, long $timeout ] )	条件を待つ
Countable	count	abstract public int count ( void )	オブジェクトの要素数を数える
CURLFile	$name	 public $name ;
	$mime	 public $mime ;
	$postname	 public $postname ;
	__construct	public __construct ( string $filename [, string $mimetype [, string $postname ]] )	CURLFile オブジェクトを作る
	getFilename	public string getFilename ( void )	ファイル名を取得する
	getMimeType	public string getMimeType ( void )	MIME タイプを取得する
	getPostFilename	public string getPostFilename ( void )	POST 用のファイル名を取得する
	setMimeType	public void setMimeType ( string $mime )	MIME タイプを設定する
	setPostFilename	public void setPostFilename ( string $postname )	POST 用のファイル名を設定する
	__wakeup	public void __wakeup ( void )	アンシリアライズ用ハンドラ
DateInterval	$y	 public integer $y ;
	$m	 public integer $m ;
	$d	 public integer $d ;
	$h	 public integer $h ;
	$i	 public integer $i ;
	$s	 public integer $s ;
	$invert	 public integer $invert ;
	$days	 public mixed $days ;
	__construct	public __construct ( string $interval_spec )	新しい DateInterval オブジェクトを作成する
	createFromDateString	public static DateInterval createFromDateString ( string $time )	相対指定文字列から DateInterval を作成する
	format	public string format ( string $format )	間隔をフォーマットする
DatePeriod	EXCLUDE_START_DATE	 const integer EXCLUDE_START_DATE = 1 ;
	__construct	public __construct ( DateTime $start , DateInterval $interval , int $recurrences [, int $options ] )	新しい DatePeriod オブジェクトを作成する
	__construct	public __construct ( DateTime $start , DateInterval $interval , DateTime $end [, int $options ] )	新しい DatePeriod オブジェクトを作成する
	__construct	public __construct ( string $isostr [, int $options ] )	新しい DatePeriod オブジェクトを作成する
DateTime	ATOM	 const string ATOM = "Y-m-d\TH:i:sP" ;
	COOKIE	 const string COOKIE = "l, d-M-y H:i:s T" ;
	ISO8601	 const string ISO8601 = "Y-m-d\TH:i:sO" ;
	RFC822	 const string RFC822 = "D, d M y H:i:s O" ;
	RFC850	 const string RFC850 = "l, d-M-y H:i:s T" ;
	RFC1036	 const string RFC1036 = "D, d M y H:i:s O" ;
	RFC1123	 const string RFC1123 = "D, d M Y H:i:s O" ;
	RFC2822	 const string RFC2822 = "D, d M Y H:i:s O" ;
	RFC3339	 const string RFC3339 = "Y-m-d\TH:i:sP" ;
	RSS	 const string RSS = "D, d M Y H:i:s O" ;
	W3C	 const string W3C = "Y-m-d\TH:i:sP" ;
	__construct	public __construct ([ string $time = "now" [, DateTimeZone $timezone = NULL ]] )	新しい DateTime オブジェクトを返す
	add	public DateTime add ( DateInterval $interval )	年月日時分秒の値を DateTime オブジェクトに加える
	createFromFormat	public static DateTime createFromFormat ( string $format , string $time [, DateTimeZone $timezone ] )	指定した書式でフォーマットした新しい DateTime オブジェクトを返す
	getLastErrors	public static array getLastErrors ( void )	警告およびエラーを返す
	modify	public DateTime modify ( string $modify )	タイムスタンプを変更する
	__set_state	public static DateTime __set_state ( array $array )	__set_state ハンドラ
	setDate	public DateTime setDate ( int $year , int $month , int $day )	日付を設定する
	setISODate	public DateTime setISODate ( int $year , int $week [, int $day = 1 ] )	ISO 日付を設定する
	setTime	public DateTime setTime ( int $hour , int $minute [, int $second = 0 ] )	時刻を設定する
	setTimestamp	public DateTime setTimestamp ( int $unixtimestamp )	Unix タイムスタンプを用いて日付と時刻を設定する
	setTimezone	public DateTime setTimezone ( DateTimeZone $timezone )	DateTime オブジェクトのタイムゾーンを設定する
	sub	public DateTime sub ( DateInterval $interval )	年月日時分秒の値を DateTime オブジェクトから引く
	diff	public DateInterval diff ( DateTimeInterface $datetime2 [, bool $absolute = false ] )
	format	public string format ( string $format )
	getOffset	public int getOffset ( void )
	getTimestamp	public int getTimestamp ( void )
	getTimezone	public DateTimeZone getTimezone ( void )
	__wakeup	public __wakeup ( void )
DateTimeImmutable	__construct	public __construct ([ string $time = "now" [, DateTimeZone $timezone = NULL ]] )	新しい DateTimeImmutable オブジェクトを返す
	add	public DateTimeImmutable add ( DateInterval $interval )	年月日時分秒の値を加える
	createFromFormat	public static DateTimeImmutable createFromFormat ( string $format , string $time [, DateTimeZone $timezone ] )	指定した書式でフォーマットした新しい DateTimeImmutable オブジェクトを返す
	getLastErrors	public static array getLastErrors ( void )	警告およびエラーを返す
	modify	public DateTimeImmutable modify ( string $modify )	タイムスタンプを変更する
	__set_state	public static DateTimeImmutable __set_state ( array $array )	__set_state ハンドラ
	setDate	public DateTimeImmutable setDate ( int $year , int $month , int $day )	日付を設定する
	setISODate	public DateTimeImmutable setISODate ( int $year , int $week [, int $day = 1 ] )	ISO 日付を設定する
	setTime	public DateTimeImmutable setTime ( int $hour , int $minute [, int $second = 0 ] )	時刻を設定する
	setTimestamp	public DateTimeImmutable setTimestamp ( int $unixtimestamp )	Unix タイムスタンプを用いて日付と時刻を設定する
	setTimezone	public DateTimeImmutable setTimezone ( DateTimeZone $timezone )	タイムゾーンを設定する
	sub	public DateTimeImmutable sub ( DateInterval $interval )	年月日時分秒の値を引く
	diff	public DateInterval diff ( DateTimeInterface $datetime2 [, bool $absolute = false ] )
	format	public string format ( string $format )
	getOffset	public int getOffset ( void )
	getTimestamp	public int getTimestamp ( void )
	getTimezone	public DateTimeZone getTimezone ( void )
	__wakeup	public __wakeup ( void )
DateTimeInterface	diff	public DateInterval diff ( DateTimeInterface $datetime2 [, bool $absolute = false ] )
	format	public string format ( string $format )
	getOffset	public int getOffset ( void )
	getTimestamp	public int getTimestamp ( void )
	getTimezone	public DateTimeZone getTimezone ( void )
	__wakeup	public __wakeup ( void )
DateTimeZone	AFRICA	 const integer AFRICA = 1 ;
	AMERICA	 const integer AMERICA = 2 ;
	ANTARCTICA	 const integer ANTARCTICA = 4 ;
	ARCTIC	 const integer ARCTIC = 8 ;
	ASIA	 const integer ASIA = 16 ;
	ATLANTIC	 const integer ATLANTIC = 32 ;
	AUSTRALIA	 const integer AUSTRALIA = 64 ;
	EUROPE	 const integer EUROPE = 128 ;
	INDIAN	 const integer INDIAN = 256 ;
	PACIFIC	 const integer PACIFIC = 512 ;
	UTC	 const integer UTC = 1024 ;
	ALL	 const integer ALL = 2047 ;
	ALL_WITH_BC	 const integer ALL_WITH_BC = 4095 ;
	PER_COUNTRY	 const integer PER_COUNTRY = 4096 ;
	__construct	public __construct ( string $timezone )	新しい DateTimeZone オブジェクトを作成する
	getLocation	public array getLocation ( void )	タイムゾーンの位置情報を返す
	getName	public string getName ( void )	タイムゾーンの名前を返す
	getOffset	public int getOffset ( DateTime $datetime )	GMT からのタイムゾーンのオフセットを返す
	getTransitions	public array getTransitions ([ int $timestamp_begin [, int $timestamp_end ]] )	タイムゾーンの変遷を返す
	listAbbreviations	public static array listAbbreviations ( void )	夏時間、オフセットおよびタイムゾーン名を含む連想配列を返す
	listIdentifiers	public static array listIdentifiers ([ int $what = DateTimeZone::ALL [, string $country = NULL ]] )	すべてのタイムゾーン識別子を含む配列を返す
Directory	$path	 public string $path ;
	$handle	 public resource $handle ;
	close	public void close ([ resource $dir_handle ] )	ディレクトリハンドルをクローズする
	read	public string read ([ resource $dir_handle ] )	ディレクトリハンドルからエントリを読み込む
	rewind	public void rewind ([ resource $dir_handle ] )	ディレクトリハンドルを元に戻す
DirectoryIterator	__construct	public __construct ( string $path )	パスから新規ディレクトリイテレータを生成する
	current	public DirectoryIterator current ( void )	現在の DirectoryIterator アイテムを返す
	getATime	public int getATime ( void )	現在の DirectoryIterator アイテムの最終アクセス時刻を取得する
	getBasename	public string getBasename ([ string $suffix ] )	現在の DirectoryIterator のアイテムのベース名を取得する
	getCTime	public int getCTime ( void )	現在の DirectoryIterator アイテムの inode 修正時刻を取得する
	getExtension	public string getExtension ( void )	ファイルの拡張子を取得する
	getFilename	public string getFilename ( void )	現在の DirectoryIterator アイテムのファイル名を返す
	getGroup	public int getGroup ( void )	現在の DirectoryIterator アイテムのグループを取得する
	getInode	public int getInode ( void )	現在の DirectoryIterator アイテムの inode を取得する
	getMTime	public int getMTime ( void )	現在の DirectoryIterator アイテムの最終修正時刻を取得する
	getOwner	public int getOwner ( void )	現在の DirectoryIterator アイテムの所有者を取得する
	getPath	public string getPath ( void )	現在の Iterator アイテムのパスをファイル名抜きで返す
	getPathname	public string getPathname ( void )	現在の DirectoryIterator アイテムのパスとファイル名を返す
	getPerms	public int getPerms ( void )	現在の DirectoryIterator アイテムのパーミッションを取得する
	getSize	public int getSize ( void )	現在の DirectoryIterator アイテムのサイズを取得する
	getType	public string getType ( void )	現在の DirectoryIterator アイテムのタイプを判定する
	isDir	public bool isDir ( void )	現在の DirectoryIterator アイテムがディレクトリであるかどうかを調べる
	isDot	public bool isDot ( void )	現在の DirectoryIterator アイテムが '.' もしくは '..' であるかどうかを調べる
	isExecutable	public bool isExecutable ( void )	現在の DirectoryIterator アイテムが実行可能であるかどうかを調べる
	isFile	public bool isFile ( void )	現在の DirectoryIterator アイテムが通常のファイルであるかどうかを調べる
	isLink	public bool isLink ( void )	現在の DirectoryIterator アイテムがシンボリックリンクであるかどうかを調べる
	isReadable	public bool isReadable ( void )	現在の DirectoryIterator アイテムが読込可能であるかどうかを調べる
	isWritable	public bool isWritable ( void )	現在の DirectoryIterator アイテムが書き込み可能であるかどうかを調べる
	key	public string key ( void )	現在の DirectoryIterator アイテムのキーを返す
	next	public void next ( void )	次の DirectoryIterator アイテムに移動する
	rewind	public void rewind ( void )	DirectoryIterator を最初に巻き戻す
	seek	public void seek ( int $position )	DirectoryIterator のアイテムを移動する
	__toString	public string __toString ( void )	ファイル名を文字列として取得する
	valid	public bool valid ( void )	現在の DirectoryIterator の位置が有効なファイルであるかどうかチェックする
DomainException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
DOMAttr	$name	 public readonly string $name ;
	$ownerElement	 public readonly DOMElement $ownerElement ;
	$schemaTypeInfo	 public readonly bool $schemaTypeInfo ;
	$specified	 public readonly bool $specified ;
	$value	 public string $value ;
	__construct	public __construct ( string $name [, string $value ] )	新しい DOMAttr オブジェクトを作成する
	isId	public bool isId ( void )	属性が定義済みの ID かどうかを調べる
	DOMNode::appendChild	public DOMNode DOMNode::appendChild ( DOMNode $newnode )
	DOMNode::C14N	public string DOMNode::C14N ([ bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::C14NFile	public int DOMNode::C14NFile ( string $uri [, bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::cloneNode	public DOMNode DOMNode::cloneNode ([ bool $deep ] )
	DOMNode::getLineNo	public int DOMNode::getLineNo ( void )
	DOMNode::getNodePath	public string DOMNode::getNodePath ( void )
	DOMNode::hasAttributes	public bool DOMNode::hasAttributes ( void )
	DOMNode::hasChildNodes	public bool DOMNode::hasChildNodes ( void )
	DOMNode::insertBefore	public DOMNode DOMNode::insertBefore ( DOMNode $newnode [, DOMNode $refnode ] )
	DOMNode::isDefaultNamespace	public bool DOMNode::isDefaultNamespace ( string $namespaceURI )
	DOMNode::isSameNode	public bool DOMNode::isSameNode ( DOMNode $node )
	DOMNode::isSupported	public bool DOMNode::isSupported ( string $feature , string $version )
	DOMNode::lookupNamespaceURI	public string DOMNode::lookupNamespaceURI ( string $prefix )
	DOMNode::lookupPrefix	public string DOMNode::lookupPrefix ( string $namespaceURI )
	DOMNode::normalize	public void DOMNode::normalize ( void )
	DOMNode::removeChild	public DOMNode DOMNode::removeChild ( DOMNode $oldnode )
	DOMNode::replaceChild	public DOMNode DOMNode::replaceChild ( DOMNode $newnode , DOMNode $oldnode )
DOMCdataSection	__construct	public __construct ( string $value )	新しい DOMCdataSection オブジェクトを作成する
	DOMText::isWhitespaceInElementContent	public bool DOMText::isWhitespaceInElementContent ( void )
	DOMText::splitText	public DOMText DOMText::splitText ( int $offset )
DOMCharacterData	$data	 public string $data ;
	$length	 readonly public int $length ;
	appendData	void appendData ( string $data )	ノードの文字データの最後に文字列を追加する
	deleteData	void deleteData ( int $offset , int $count )	指定した範囲の文字列をノードから削除する
	insertData	void insertData ( int $offset , string $data )	指定した 16 ビット単位のオフセットに、文字列を挿入する
	replaceData	void replaceData ( int $offset , int $count , string $data )	DOMCharacterData ノードの文字列の一部を置換する
	substringData	string substringData ( int $offset , int $count )	ノードから指定した範囲のデータを抽出する
	DOMNode::appendChild	public DOMNode DOMNode::appendChild ( DOMNode $newnode )
	DOMNode::C14N	public string DOMNode::C14N ([ bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::C14NFile	public int DOMNode::C14NFile ( string $uri [, bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::cloneNode	public DOMNode DOMNode::cloneNode ([ bool $deep ] )
	DOMNode::getLineNo	public int DOMNode::getLineNo ( void )
	DOMNode::getNodePath	public string DOMNode::getNodePath ( void )
	DOMNode::hasAttributes	public bool DOMNode::hasAttributes ( void )
	DOMNode::hasChildNodes	public bool DOMNode::hasChildNodes ( void )
	DOMNode::insertBefore	public DOMNode DOMNode::insertBefore ( DOMNode $newnode [, DOMNode $refnode ] )
	DOMNode::isDefaultNamespace	public bool DOMNode::isDefaultNamespace ( string $namespaceURI )
	DOMNode::isSameNode	public bool DOMNode::isSameNode ( DOMNode $node )
	DOMNode::isSupported	public bool DOMNode::isSupported ( string $feature , string $version )
	DOMNode::lookupNamespaceURI	public string DOMNode::lookupNamespaceURI ( string $prefix )
	DOMNode::lookupPrefix	public string DOMNode::lookupPrefix ( string $namespaceURI )
	DOMNode::normalize	public void DOMNode::normalize ( void )
	DOMNode::removeChild	public DOMNode DOMNode::removeChild ( DOMNode $oldnode )
	DOMNode::replaceChild	public DOMNode DOMNode::replaceChild ( DOMNode $newnode , DOMNode $oldnode )
DOMComment	__construct	public __construct ([ string $value ] )	新しい DOMComment オブジェクトを作成する
	DOMCharacterData::appendData	void DOMCharacterData::appendData ( string $data )
	DOMCharacterData::deleteData	void DOMCharacterData::deleteData ( int $offset , int $count )
	DOMCharacterData::insertData	void DOMCharacterData::insertData ( int $offset , string $data )
	DOMCharacterData::replaceData	void DOMCharacterData::replaceData ( int $offset , int $count , string $data )
	DOMCharacterData::substringData	string DOMCharacterData::substringData ( int $offset , int $count )
	DOMNode::appendChild	public DOMNode DOMNode::appendChild ( DOMNode $newnode )
	DOMNode::C14N	public string DOMNode::C14N ([ bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::C14NFile	public int DOMNode::C14NFile ( string $uri [, bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::cloneNode	public DOMNode DOMNode::cloneNode ([ bool $deep ] )
	DOMNode::getLineNo	public int DOMNode::getLineNo ( void )
	DOMNode::getNodePath	public string DOMNode::getNodePath ( void )
	DOMNode::hasAttributes	public bool DOMNode::hasAttributes ( void )
	DOMNode::hasChildNodes	public bool DOMNode::hasChildNodes ( void )
	DOMNode::insertBefore	public DOMNode DOMNode::insertBefore ( DOMNode $newnode [, DOMNode $refnode ] )
	DOMNode::isDefaultNamespace	public bool DOMNode::isDefaultNamespace ( string $namespaceURI )
	DOMNode::isSameNode	public bool DOMNode::isSameNode ( DOMNode $node )
	DOMNode::isSupported	public bool DOMNode::isSupported ( string $feature , string $version )
	DOMNode::lookupNamespaceURI	public string DOMNode::lookupNamespaceURI ( string $prefix )
	DOMNode::lookupPrefix	public string DOMNode::lookupPrefix ( string $namespaceURI )
	DOMNode::normalize	public void DOMNode::normalize ( void )
	DOMNode::removeChild	public DOMNode DOMNode::removeChild ( DOMNode $oldnode )
	DOMNode::replaceChild	public DOMNode DOMNode::replaceChild ( DOMNode $newnode , DOMNode $oldnode )
DOMDocument	$actualEncoding	 readonly public string $actualEncoding ;
	$config	 readonly public DOMConfiguration $config ;
	$doctype	 readonly public DOMDocumentType $doctype ;
	$documentElement	 readonly public DOMElement $documentElement ;
	$documentURI	 public string $documentURI ;
	$encoding	 public string $encoding ;
	$formatOutput	 public bool $formatOutput ;
	$implementation	 readonly public DOMImplementation $implementation ;
	$preserveWhiteSpace	 public bool $preserveWhiteSpace = true ;
	$recover	 public bool $recover ;
	$resolveExternals	 public bool $resolveExternals ;
	$standalone	 public bool $standalone ;
	$strictErrorChecking	 public bool $strictErrorChecking = true ;
	$substituteEntities	 public bool $substituteEntities ;
	$validateOnParse	 public bool $validateOnParse = false ;
	$version	 public string $version ;
	$xmlEncoding	 readonly public string $xmlEncoding ;
	$xmlStandalone	 public bool $xmlStandalone ;
	$xmlVersion	 public string $xmlVersion ;
	__construct	public __construct ([ string $version [, string $encoding ]] )	新しい DOMDocument オブジェクトを作成する
	createAttribute	public DOMAttr createAttribute ( string $name )	新しい属性を作成する
	createAttributeNS	public DOMAttr createAttributeNS ( string $namespaceURI , string $qualifiedName )	関連付けられた名前空間に新しい属性を作成する
	createCDATASection	public DOMCDATASection createCDATASection ( string $data )	新しい cdata ノードを作成する
	createComment	public DOMComment createComment ( string $data )	新しい comment ノードを作成する
	createDocumentFragment	public DOMDocumentFragment createDocumentFragment ( void )	新しい文書片を作成する
	createElement	public DOMElement createElement ( string $name [, string $value ] )	新しい要素ノードを作成する
	createElementNS	public DOMElement createElementNS ( string $namespaceURI , string $qualifiedName [, string $value ] )	関連付けられた名前空間に新しい要素を作成する
	createEntityReference	public DOMEntityReference createEntityReference ( string $name )	新しいエンティティ参照ノードを作成する
	createProcessingInstruction	public DOMProcessingInstruction createProcessingInstruction ( string $target [, string $data ] )	新しい PI ノードを作成する
	createTextNode	public DOMText createTextNode ( string $content )	新しいテキストノードを作成する
	getElementById	public DOMElement getElementById ( string $elementId )	id に対応する要素を検索する
	getElementsByTagName	public DOMNodeList getElementsByTagName ( string $name )	指定したローカルタグ名に対応するすべての要素を検索する
	getElementsByTagNameNS	public DOMNodeList getElementsByTagNameNS ( string $namespaceURI , string $localName )	指定した名前空間で、タグ名に対応するすべての要素を検索する
	importNode	public DOMNode importNode ( DOMNode $importedNode [, bool $deep ] )	現在のドキュメントにノードをインポートする
	load	public mixed load ( string $filename [, int $options = 0 ] )	ファイルから XML を読み込む
	loadHTML	public bool loadHTML ( string $source [, int $options = 0 ] )	文字列から HTML を読み込む
	loadHTMLFile	public bool loadHTMLFile ( string $filename [, int $options = 0 ] )	ファイルから HTML を読み込む
	loadXML	public mixed loadXML ( string $source [, int $options = 0 ] )	文字列から XML を読み込む
	normalizeDocument	public void normalizeDocument ( void )	ドキュメントを正規化する
	registerNodeClass	public bool registerNodeClass ( string $baseclass , string $extendedclass )	基底ノード型を作成する際に使用する拡張クラスを登録する
	relaxNGValidate	public bool relaxNGValidate ( string $filename )	ドキュメントを relaxNG で検証する
	relaxNGValidateSource	public bool relaxNGValidateSource ( string $source )	ドキュメントを relaxNG で検証する
	save	public int save ( string $filename [, int $options ] )	内部の XML ツリーをファイルに出力する
	saveHTML	public string saveHTML ([ DOMNode $node = NULL ] )	内部のドキュメントを HTML 形式の文字列として出力する
	saveHTMLFile	public int saveHTMLFile ( string $filename )	内部のドキュメントを HTML 形式でファイルに出力する
	saveXML	public string saveXML ([ DOMNode $node [, int $options ]] )	内部の XML ツリーを文字列として出力する
	schemaValidate	public bool schemaValidate ( string $filename [, int $flags ] )	スキーマに基づいてドキュメントを検証する
	schemaValidateSource	public bool schemaValidateSource ( string $source [, int $flags ] )	スキーマに基づいてドキュメントを検証する
	validate	public bool validate ( void )	DTD に基づいてドキュメントを検証する
	xinclude	public int xinclude ([ int $options ] )	DOMDocument オブジェクト内の XIncludes を置換する
	DOMNode::appendChild	public DOMNode DOMNode::appendChild ( DOMNode $newnode )
	DOMNode::C14N	public string DOMNode::C14N ([ bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::C14NFile	public int DOMNode::C14NFile ( string $uri [, bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::cloneNode	public DOMNode DOMNode::cloneNode ([ bool $deep ] )
	DOMNode::getLineNo	public int DOMNode::getLineNo ( void )
	DOMNode::getNodePath	public string DOMNode::getNodePath ( void )
	DOMNode::hasAttributes	public bool DOMNode::hasAttributes ( void )
	DOMNode::hasChildNodes	public bool DOMNode::hasChildNodes ( void )
	DOMNode::insertBefore	public DOMNode DOMNode::insertBefore ( DOMNode $newnode [, DOMNode $refnode ] )
	DOMNode::isDefaultNamespace	public bool DOMNode::isDefaultNamespace ( string $namespaceURI )
	DOMNode::isSameNode	public bool DOMNode::isSameNode ( DOMNode $node )
	DOMNode::isSupported	public bool DOMNode::isSupported ( string $feature , string $version )
	DOMNode::lookupNamespaceURI	public string DOMNode::lookupNamespaceURI ( string $prefix )
	DOMNode::lookupPrefix	public string DOMNode::lookupPrefix ( string $namespaceURI )
	DOMNode::normalize	public void DOMNode::normalize ( void )
	DOMNode::removeChild	public DOMNode DOMNode::removeChild ( DOMNode $oldnode )
	DOMNode::replaceChild	public DOMNode DOMNode::replaceChild ( DOMNode $newnode , DOMNode $oldnode )
DOMDocumentFragment	appendXML	public bool appendXML ( string $data )	生の XML データを追加する
	DOMNode::appendChild	public DOMNode DOMNode::appendChild ( DOMNode $newnode )
	DOMNode::C14N	public string DOMNode::C14N ([ bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::C14NFile	public int DOMNode::C14NFile ( string $uri [, bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::cloneNode	public DOMNode DOMNode::cloneNode ([ bool $deep ] )
	DOMNode::getLineNo	public int DOMNode::getLineNo ( void )
	DOMNode::getNodePath	public string DOMNode::getNodePath ( void )
	DOMNode::hasAttributes	public bool DOMNode::hasAttributes ( void )
	DOMNode::hasChildNodes	public bool DOMNode::hasChildNodes ( void )
	DOMNode::insertBefore	public DOMNode DOMNode::insertBefore ( DOMNode $newnode [, DOMNode $refnode ] )
	DOMNode::isDefaultNamespace	public bool DOMNode::isDefaultNamespace ( string $namespaceURI )
	DOMNode::isSameNode	public bool DOMNode::isSameNode ( DOMNode $node )
	DOMNode::isSupported	public bool DOMNode::isSupported ( string $feature , string $version )
	DOMNode::lookupNamespaceURI	public string DOMNode::lookupNamespaceURI ( string $prefix )
	DOMNode::lookupPrefix	public string DOMNode::lookupPrefix ( string $namespaceURI )
	DOMNode::normalize	public void DOMNode::normalize ( void )
	DOMNode::removeChild	public DOMNode DOMNode::removeChild ( DOMNode $oldnode )
	DOMNode::replaceChild	public DOMNode DOMNode::replaceChild ( DOMNode $newnode , DOMNode $oldnode )
DOMDocumentType	$publicId	 readonly public string $publicId ;
	$systemId	 readonly public string $systemId ;
	$name	 readonly public string $name ;
	$entities	 readonly public DOMNamedNodeMap $entities ;
	$notations	 readonly public DOMNamedNodeMap $notations ;
	$internalSubset	 readonly public string $internalSubset ;
	DOMNode::appendChild	public DOMNode DOMNode::appendChild ( DOMNode $newnode )
	DOMNode::C14N	public string DOMNode::C14N ([ bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::C14NFile	public int DOMNode::C14NFile ( string $uri [, bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::cloneNode	public DOMNode DOMNode::cloneNode ([ bool $deep ] )
	DOMNode::getLineNo	public int DOMNode::getLineNo ( void )
	DOMNode::getNodePath	public string DOMNode::getNodePath ( void )
	DOMNode::hasAttributes	public bool DOMNode::hasAttributes ( void )
	DOMNode::hasChildNodes	public bool DOMNode::hasChildNodes ( void )
	DOMNode::insertBefore	public DOMNode DOMNode::insertBefore ( DOMNode $newnode [, DOMNode $refnode ] )
	DOMNode::isDefaultNamespace	public bool DOMNode::isDefaultNamespace ( string $namespaceURI )
	DOMNode::isSameNode	public bool DOMNode::isSameNode ( DOMNode $node )
	DOMNode::isSupported	public bool DOMNode::isSupported ( string $feature , string $version )
	DOMNode::lookupNamespaceURI	public string DOMNode::lookupNamespaceURI ( string $prefix )
	DOMNode::lookupPrefix	public string DOMNode::lookupPrefix ( string $namespaceURI )
	DOMNode::normalize	public void DOMNode::normalize ( void )
	DOMNode::removeChild	public DOMNode DOMNode::removeChild ( DOMNode $oldnode )
	DOMNode::replaceChild	public DOMNode DOMNode::replaceChild ( DOMNode $newnode , DOMNode $oldnode )
DOMElement	$schemaTypeInfo	 readonly public bool $schemaTypeInfo ;
	$tagName	 readonly public string $tagName ;
	__construct	public __construct ( string $name [, string $value [, string $namespaceURI ]] )	新しい DOMElement オブジェクトを作成する
	getAttribute	public string getAttribute ( string $name )	属性の値を返す
	getAttributeNode	public DOMAttr getAttributeNode ( string $name )	属性ノードを返す
	getAttributeNodeNS	public DOMAttr getAttributeNodeNS ( string $namespaceURI , string $localName )	属性ノードを返す
	getAttributeNS	public string getAttributeNS ( string $namespaceURI , string $localName )	属性の値を返す
	getElementsByTagName	public DOMNodeList getElementsByTagName ( string $name )	タグ名から要素を取得する
	getElementsByTagNameNS	public DOMNodeList getElementsByTagNameNS ( string $namespaceURI , string $localName )	名前空間 URI とローカル名から要素を取得する
	hasAttribute	public bool hasAttribute ( string $name )	属性が存在するかどうかを調べる
	hasAttributeNS	public bool hasAttributeNS ( string $namespaceURI , string $localName )	属性が存在するかどうかを調べる
	removeAttribute	public bool removeAttribute ( string $name )	属性を削除する
	removeAttributeNode	public bool removeAttributeNode ( DOMAttr $oldnode )	属性を削除する
	removeAttributeNS	public bool removeAttributeNS ( string $namespaceURI , string $localName )	属性を削除する
	setAttribute	public DOMAttr setAttribute ( string $name , string $value )	新しい属性を追加する
	setAttributeNode	public DOMAttr setAttributeNode ( DOMAttr $attr )	新しい属性ノードを要素に追加する
	setAttributeNodeNS	public DOMAttr setAttributeNodeNS ( DOMAttr $attr )	新しい属性ノードを要素に追加する
	setAttributeNS	public void setAttributeNS ( string $namespaceURI , string $qualifiedName , string $value )	新しい属性を追加する
	setIdAttribute	public void setIdAttribute ( string $name , bool $isId )	ID 型の属性を名前で宣言する
	setIdAttributeNode	public void setIdAttributeNode ( DOMAttr $attr , bool $isId )	ID 型の属性をノードで宣言する
	setIdAttributeNS	public void setIdAttributeNS ( string $namespaceURI , string $localName , bool $isId )	ID 型の属性をローカル名および名前空間 URI で宣言する
	DOMNode::appendChild	public DOMNode DOMNode::appendChild ( DOMNode $newnode )
	DOMNode::C14N	public string DOMNode::C14N ([ bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::C14NFile	public int DOMNode::C14NFile ( string $uri [, bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::cloneNode	public DOMNode DOMNode::cloneNode ([ bool $deep ] )
	DOMNode::getLineNo	public int DOMNode::getLineNo ( void )
	DOMNode::getNodePath	public string DOMNode::getNodePath ( void )
	DOMNode::hasAttributes	public bool DOMNode::hasAttributes ( void )
	DOMNode::hasChildNodes	public bool DOMNode::hasChildNodes ( void )
	DOMNode::insertBefore	public DOMNode DOMNode::insertBefore ( DOMNode $newnode [, DOMNode $refnode ] )
	DOMNode::isDefaultNamespace	public bool DOMNode::isDefaultNamespace ( string $namespaceURI )
	DOMNode::isSameNode	public bool DOMNode::isSameNode ( DOMNode $node )
	DOMNode::isSupported	public bool DOMNode::isSupported ( string $feature , string $version )
	DOMNode::lookupNamespaceURI	public string DOMNode::lookupNamespaceURI ( string $prefix )
	DOMNode::lookupPrefix	public string DOMNode::lookupPrefix ( string $namespaceURI )
	DOMNode::normalize	public void DOMNode::normalize ( void )
	DOMNode::removeChild	public DOMNode DOMNode::removeChild ( DOMNode $oldnode )
	DOMNode::replaceChild	public DOMNode DOMNode::replaceChild ( DOMNode $newnode , DOMNode $oldnode )
DOMEntity	$publicId	 readonly public string $publicId ;
	$systemId	 readonly public string $systemId ;
	$notationName	 readonly public string $notationName ;
	$actualEncoding	 public string $actualEncoding ;
	$encoding	 readonly public string $encoding ;
	$version	 readonly public string $version ;
	DOMNode::appendChild	public DOMNode DOMNode::appendChild ( DOMNode $newnode )
	DOMNode::C14N	public string DOMNode::C14N ([ bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::C14NFile	public int DOMNode::C14NFile ( string $uri [, bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::cloneNode	public DOMNode DOMNode::cloneNode ([ bool $deep ] )
	DOMNode::getLineNo	public int DOMNode::getLineNo ( void )
	DOMNode::getNodePath	public string DOMNode::getNodePath ( void )
	DOMNode::hasAttributes	public bool DOMNode::hasAttributes ( void )
	DOMNode::hasChildNodes	public bool DOMNode::hasChildNodes ( void )
	DOMNode::insertBefore	public DOMNode DOMNode::insertBefore ( DOMNode $newnode [, DOMNode $refnode ] )
	DOMNode::isDefaultNamespace	public bool DOMNode::isDefaultNamespace ( string $namespaceURI )
	DOMNode::isSameNode	public bool DOMNode::isSameNode ( DOMNode $node )
	DOMNode::isSupported	public bool DOMNode::isSupported ( string $feature , string $version )
	DOMNode::lookupNamespaceURI	public string DOMNode::lookupNamespaceURI ( string $prefix )
	DOMNode::lookupPrefix	public string DOMNode::lookupPrefix ( string $namespaceURI )
	DOMNode::normalize	public void DOMNode::normalize ( void )
	DOMNode::removeChild	public DOMNode DOMNode::removeChild ( DOMNode $oldnode )
	DOMNode::replaceChild	public DOMNode DOMNode::replaceChild ( DOMNode $newnode , DOMNode $oldnode )
DOMEntityReference	__construct	public __construct ( string $name )	新しい DOMEntityReference オブジェクトを作成する
	DOMNode::appendChild	public DOMNode DOMNode::appendChild ( DOMNode $newnode )
	DOMNode::C14N	public string DOMNode::C14N ([ bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::C14NFile	public int DOMNode::C14NFile ( string $uri [, bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::cloneNode	public DOMNode DOMNode::cloneNode ([ bool $deep ] )
	DOMNode::getLineNo	public int DOMNode::getLineNo ( void )
	DOMNode::getNodePath	public string DOMNode::getNodePath ( void )
	DOMNode::hasAttributes	public bool DOMNode::hasAttributes ( void )
	DOMNode::hasChildNodes	public bool DOMNode::hasChildNodes ( void )
	DOMNode::insertBefore	public DOMNode DOMNode::insertBefore ( DOMNode $newnode [, DOMNode $refnode ] )
	DOMNode::isDefaultNamespace	public bool DOMNode::isDefaultNamespace ( string $namespaceURI )
	DOMNode::isSameNode	public bool DOMNode::isSameNode ( DOMNode $node )
	DOMNode::isSupported	public bool DOMNode::isSupported ( string $feature , string $version )
	DOMNode::lookupNamespaceURI	public string DOMNode::lookupNamespaceURI ( string $prefix )
	DOMNode::lookupPrefix	public string DOMNode::lookupPrefix ( string $namespaceURI )
	DOMNode::normalize	public void DOMNode::normalize ( void )
	DOMNode::removeChild	public DOMNode DOMNode::removeChild ( DOMNode $oldnode )
	DOMNode::replaceChild	public DOMNode DOMNode::replaceChild ( DOMNode $newnode , DOMNode $oldnode )
DOMException	$code	 readonly public int $code ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
DOMImplementation	__construct	__construct ( void )	新しい DOMImplementation オブジェクトを作成する
	createDocument	public DOMDocument createDocument ([ string $namespaceURI = NULL [, string $qualifiedName = NULL [, DOMDocumentType $doctype = NULL ]]] )	指定した型とドキュメント要素の DOMDocument オブジェクトを作成する
	createDocumentType	public DOMDocumentType createDocumentType ([ string $qualifiedName = NULL [, string $publicId = NULL [, string $systemId = NULL ]]] )	空の DOMDocumentType オブジェクトを作成する
	hasFeature	public bool hasFeature ( string $feature , string $version )	DOM 実装が、指定した機能を実装しているかどうかを調べる
DOMNamedNodeMap	$length	 readonly public int $length ;
	getNamedItem	DOMNode getNamedItem ( string $name )	名前で指定されたノードを取得する
	getNamedItemNS	DOMNode getNamedItemNS ( string $namespaceURI , string $localName )	ローカル名および名前空間 URI で指定したノードを取得する
	item	DOMNode item ( int $index )	インデックスで指定したノードを取得する
DOMNode	$nodeName	 public readonly string $nodeName ;
	$nodeValue	 public string $nodeValue ;
	$nodeType	 public readonly int $nodeType ;
	$parentNode	 public readonly DOMNode $parentNode ;
	$childNodes	 public readonly DOMNodeList $childNodes ;
	$firstChild	 public readonly DOMNode $firstChild ;
	$lastChild	 public readonly DOMNode $lastChild ;
	$previousSibling	 public readonly DOMNode $previousSibling ;
	$nextSibling	 public readonly DOMNode $nextSibling ;
	$attributes	 public readonly DOMNamedNodeMap $attributes ;
	$ownerDocument	 public readonly DOMDocument $ownerDocument ;
	$namespaceURI	 public readonly string $namespaceURI ;
	$prefix	 public string $prefix ;
	$localName	 public readonly string $localName ;
	$baseURI	 public readonly string $baseURI ;
	$textContent	 public readonly string $textContent ;
	appendChild	public DOMNode appendChild ( DOMNode $newnode )	子要素群の最後に新しい子要素を追加する
	C14N	public string C14N ([ bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )	ノードを文字列に正規化する
	C14NFile	public int C14NFile ( string $uri [, bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )	ノードをファイルに正規化する
	cloneNode	public DOMNode cloneNode ([ bool $deep ] )	ノードを複製する
	getLineNo	public int getLineNo ( void )	ノードが存在する行の番号を取得します。
	getNodePath	public string getNodePath ( void )	ノードの XPath を取得する
	hasAttributes	public bool hasAttributes ( void )	ノードが属性を保持しているかどうかを調べる
	hasChildNodes	public bool hasChildNodes ( void )	ノードが子を保持しているかどうかを調べる
	insertBefore	public DOMNode insertBefore ( DOMNode $newnode [, DOMNode $refnode ] )	参照しているノードの前に新しい子を追加する
	isDefaultNamespace	public bool isDefaultNamespace ( string $namespaceURI )	指定した namespaceURI がデフォルトの名前空間かどうかを調べる
	isSameNode	public bool isSameNode ( DOMNode $node )	2 つのノードが等しいかどうかを調べる
	isSupported	public bool isSupported ( string $feature , string $version )	指定したバージョンで機能がサポートされているかどうかを調べる
	lookupNamespaceURI	public string lookupNamespaceURI ( string $prefix )	プレフィックスに基づいて、ノードの名前空間 URI を取得する
	lookupPrefix	public string lookupPrefix ( string $namespaceURI )	名前空間 URI に基づいて、ノードの名前空間プレフィックスを取得する
	normalize	public void normalize ( void )	ノードを正規化する
	removeChild	public DOMNode removeChild ( DOMNode $oldnode )	子要素群から子要素を削除する
	replaceChild	public DOMNode replaceChild ( DOMNode $newnode , DOMNode $oldnode )	子を置き換える
DOMNodeList	$length	 readonly public int $length ;
	DOMNodelist::item	DOMNode DOMNodelist::item ( int $index )
DOMNotation	$publicId	 readonly public string $publicId ;
	$systemId	 readonly public string $systemId ;
	DOMNode::appendChild	public DOMNode DOMNode::appendChild ( DOMNode $newnode )
	DOMNode::C14N	public string DOMNode::C14N ([ bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::C14NFile	public int DOMNode::C14NFile ( string $uri [, bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::cloneNode	public DOMNode DOMNode::cloneNode ([ bool $deep ] )
	DOMNode::getLineNo	public int DOMNode::getLineNo ( void )
	DOMNode::getNodePath	public string DOMNode::getNodePath ( void )
	DOMNode::hasAttributes	public bool DOMNode::hasAttributes ( void )
	DOMNode::hasChildNodes	public bool DOMNode::hasChildNodes ( void )
	DOMNode::insertBefore	public DOMNode DOMNode::insertBefore ( DOMNode $newnode [, DOMNode $refnode ] )
	DOMNode::isDefaultNamespace	public bool DOMNode::isDefaultNamespace ( string $namespaceURI )
	DOMNode::isSameNode	public bool DOMNode::isSameNode ( DOMNode $node )
	DOMNode::isSupported	public bool DOMNode::isSupported ( string $feature , string $version )
	DOMNode::lookupNamespaceURI	public string DOMNode::lookupNamespaceURI ( string $prefix )
	DOMNode::lookupPrefix	public string DOMNode::lookupPrefix ( string $namespaceURI )
	DOMNode::normalize	public void DOMNode::normalize ( void )
	DOMNode::removeChild	public DOMNode DOMNode::removeChild ( DOMNode $oldnode )
	DOMNode::replaceChild	public DOMNode DOMNode::replaceChild ( DOMNode $newnode , DOMNode $oldnode )
DOMProcessingInstruction	$target	 readonly public string $target ;
	$data	 public string $data ;
	__construct	public __construct ( string $name [, string $value ] )	新しい DOMProcessingInstruction オブジェクトを作成する
	DOMNode::appendChild	public DOMNode DOMNode::appendChild ( DOMNode $newnode )
	DOMNode::C14N	public string DOMNode::C14N ([ bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::C14NFile	public int DOMNode::C14NFile ( string $uri [, bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::cloneNode	public DOMNode DOMNode::cloneNode ([ bool $deep ] )
	DOMNode::getLineNo	public int DOMNode::getLineNo ( void )
	DOMNode::getNodePath	public string DOMNode::getNodePath ( void )
	DOMNode::hasAttributes	public bool DOMNode::hasAttributes ( void )
	DOMNode::hasChildNodes	public bool DOMNode::hasChildNodes ( void )
	DOMNode::insertBefore	public DOMNode DOMNode::insertBefore ( DOMNode $newnode [, DOMNode $refnode ] )
	DOMNode::isDefaultNamespace	public bool DOMNode::isDefaultNamespace ( string $namespaceURI )
	DOMNode::isSameNode	public bool DOMNode::isSameNode ( DOMNode $node )
	DOMNode::isSupported	public bool DOMNode::isSupported ( string $feature , string $version )
	DOMNode::lookupNamespaceURI	public string DOMNode::lookupNamespaceURI ( string $prefix )
	DOMNode::lookupPrefix	public string DOMNode::lookupPrefix ( string $namespaceURI )
	DOMNode::normalize	public void DOMNode::normalize ( void )
	DOMNode::removeChild	public DOMNode DOMNode::removeChild ( DOMNode $oldnode )
	DOMNode::replaceChild	public DOMNode DOMNode::replaceChild ( DOMNode $newnode , DOMNode $oldnode )
DOMText	$wholeText	 readonly public string $wholeText ;
	__construct	public __construct ([ string $value ] )	新しい DOMText オブジェクトを作成する
	isWhitespaceInElementContent	public bool isWhitespaceInElementContent ( void )	このテキストノードが空白を含むかどうかを示す
	splitText	public DOMText splitText ( int $offset )	指定したオフセットでノードを 2 つに分割する
	DOMNode::appendChild	public DOMNode DOMNode::appendChild ( DOMNode $newnode )
	DOMNode::C14N	public string DOMNode::C14N ([ bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::C14NFile	public int DOMNode::C14NFile ( string $uri [, bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )
	DOMNode::cloneNode	public DOMNode DOMNode::cloneNode ([ bool $deep ] )
	DOMNode::getLineNo	public int DOMNode::getLineNo ( void )
	DOMNode::getNodePath	public string DOMNode::getNodePath ( void )
	DOMNode::hasAttributes	public bool DOMNode::hasAttributes ( void )
	DOMNode::hasChildNodes	public bool DOMNode::hasChildNodes ( void )
	DOMNode::insertBefore	public DOMNode DOMNode::insertBefore ( DOMNode $newnode [, DOMNode $refnode ] )
	DOMNode::isDefaultNamespace	public bool DOMNode::isDefaultNamespace ( string $namespaceURI )
	DOMNode::isSameNode	public bool DOMNode::isSameNode ( DOMNode $node )
	DOMNode::isSupported	public bool DOMNode::isSupported ( string $feature , string $version )
	DOMNode::lookupNamespaceURI	public string DOMNode::lookupNamespaceURI ( string $prefix )
	DOMNode::lookupPrefix	public string DOMNode::lookupPrefix ( string $namespaceURI )
	DOMNode::normalize	public void DOMNode::normalize ( void )
	DOMNode::removeChild	public DOMNode DOMNode::removeChild ( DOMNode $oldnode )
	DOMNode::replaceChild	public DOMNode DOMNode::replaceChild ( DOMNode $newnode , DOMNode $oldnode )
DOMXPath	$document	 public DOMDocument $document ;
	__construct	public __construct ( DOMDocument $doc )	新しい DOMXPath オブジェクトを作成する
	evaluate	public mixed evaluate ( string $expression [, DOMNode $contextnode [, bool $registerNodeNS = true ]] )	与えられた XPath 式を評価し、可能であれば結果を返す
	query	public DOMNodeList query ( string $expression [, DOMNode $contextnode [, bool $registerNodeNS = true ]] )	与えられた XPath 式を評価する
	registerNamespace	public bool registerNamespace ( string $prefix , string $namespaceURI )	DOMXPath オブジェクトの名前空間を登録する
	registerPhpFunctions	public void registerPhpFunctions ([ mixed $restrict ] )	PHP の関数を XPath 関数として登録する
EmptyIterator	current	public void current ( void )	current() メソッド
	key	public void key ( void )	key() メソッド
	next	public void next ( void )	next() メソッド
	rewind	public void rewind ( void )	rewind() メソッド
	valid	public void valid ( void )	valid() メソッド
ErrorException	$severity	 protected int $severity ;
	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	__construct	public __construct ([ string $message = "" [, int $code = 0 [, int $severity = 1 [, string $filename = __FILE__ [, int $lineno = __LINE__ [, Exception $previous = NULL ]]]]]] )	例外を作成する
	getSeverity	final public int getSeverity ( void )	例外の深刻度を取得する
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
Ev	FLAG_AUTO	 const integer FLAG_AUTO = 0 ;
	FLAG_NOENV	 const integer FLAG_NOENV = 16777216 ;
	FLAG_FORKCHECK	 const integer FLAG_FORKCHECK = 33554432 ;
	FLAG_NOINOTIFY	 const integer FLAG_NOINOTIFY = 1048576 ;
	FLAG_SIGNALFD	 const integer FLAG_SIGNALFD = 2097152 ;
	FLAG_NOSIGMASK	 const integer FLAG_NOSIGMASK = 4194304 ;
	RUN_NOWAIT	 const integer RUN_NOWAIT = 1 ;
	RUN_ONCE	 const integer RUN_ONCE = 2 ;
	BREAK_CANCEL	 const integer BREAK_CANCEL = 0 ;
	BREAK_ONE	 const integer BREAK_ONE = 1 ;
	BREAK_ALL	 const integer BREAK_ALL = 2 ;
	MINPRI	 const integer MINPRI = -2 ;
	MAXPRI	 const integer MAXPRI = 2 ;
	READ	 const integer READ = 1 ;
	WRITE	 const integer WRITE = 2 ;
	TIMER	 const integer TIMER = 256 ;
	PERIODIC	 const integer PERIODIC = 512 ;
	SIGNAL	 const integer SIGNAL = 1024 ;
	CHILD	 const integer CHILD = 2048 ;
	STAT	 const integer STAT = 4096 ;
	IDLE	 const integer IDLE = 8192 ;
	PREPARE	 const integer PREPARE = 16384 ;
	CHECK	 const integer CHECK = 32768 ;
	EMBED	 const integer EMBED = 65536 ;
	CUSTOM	 const integer CUSTOM = 16777216 ;
	ERROR	 const integer ERROR = 2147483648 ;
	BACKEND_SELECT	 const integer BACKEND_SELECT = 1 ;
	BACKEND_POLL	 const integer BACKEND_POLL = 2 ;
	BACKEND_EPOLL	 const integer BACKEND_EPOLL = 4 ;
	BACKEND_KQUEUE	 const integer BACKEND_KQUEUE = 8 ;
	BACKEND_DEVPOLL	 const integer BACKEND_DEVPOLL = 16 ;
	BACKEND_PORT	 const integer BACKEND_PORT = 32 ;
	BACKEND_ALL	 const integer BACKEND_ALL = 63 ;
	BACKEND_MASK	 const integer BACKEND_MASK = 65535 ;
	backend	final public static int backend ( void )	libev が使うバックエンドを表す整数値を返す
	depth	final public static int depth ( void )	再帰の深さを返す
	embeddableBackends	final public static void embeddableBackends ( void )	他のイベントループに埋め込めるバックエンド群を返す
	feedSignal	final public static void feedSignal ( int $signum )	シグナルイベントを Ev に送る
	feedSignalEvent	final public static void feedSignalEvent ( int $signum )	シグナルイベントの情報をデフォルトループに送る
	iteration	final public static int iteration ( void )	デフォルトのイベントループが新しいイベントをポーリングした回数を返す
	now	final public static double now ( void )	デフォルトのイベントループで直近の処理が始まった時刻を返す
	nowUpdate	final public static void nowUpdate ( void )	カーネルに問い合わせて現在時刻を確認し、処理中の Ev::now が返す時刻を更新する
	recommendedBackends	final public static void recommendedBackends ( void )	Returns a bit mask of recommended backends for current   platform.
	resume	final public static void resume ( void )	一時停止していたデフォルトのイベントループを再開させる
	run	final public static void run ([ int $flags ] )	イベントのチェックとデフォルトループのコールバックの呼び出しを開始する
	sleep	final public static void sleep ( double $seconds )	指定した秒数だけプロセスをブロックする
	stop	final public static void stop ([ int $how ] )	デフォルトのイベントループを止める
	supportedBackends	final public static void supportedBackends ( void )	現在の libev の構成でサポートするバックエンド群を返す
	suspend	final public static void suspend ( void )	デフォルトのイベントループを一時停止する
	time	final public static double time ( void )	epoch から現在時刻までの秒数を返す
	verify	final public static void verify ( void )	内部の整合性をチェックする (デバッグ用)
EvCheck	$is_active	 public $is_active ;
	$data	 public $data ;
	$is_pending	 public $is_pending ;
	$priority	 public $priority ;
	__construct	public __construct ( callable $callback [, mixed $data [, int $priority ]] )	EvCheck ウォッチャーオブジェクトを作る
	createStopped	final public static object createStopped ( string $callback [, string $data [, string $priority ]] )	停止した EvCheck ウォッチャーのインスタンスを作る
	EvWatcher::clear	public int EvWatcher::clear ( void )
	EvWatcher::__construct	abstract public EvWatcher::__construct ( void )
	EvWatcher::feed	public void EvWatcher::feed ( int $revents )
	EvWatcher::getLoop	public EvLoop EvWatcher::getLoop ( void )
	EvWatcher::invoke	public void EvWatcher::invoke ( int $revents )
	EvWatcher::keepalive	public bool EvWatcher::keepalive ([ bool $value ] )
	EvWatcher::setCallback	public void EvWatcher::setCallback ( callable $callback )
	EvWatcher::start	public void EvWatcher::start ( void )
	EvWatcher::stop	public void EvWatcher::stop ( void )
EvChild	$pid	 public $pid ;
	$rpid	 public $rpid ;
	$rstatus	 public $rstatus ;
	$is_active	 public $is_active ;
	$data	 public $data ;
	$is_pending	 public $is_pending ;
	$priority	 public $priority ;
	__construct	public __construct ( int $pid , bool $trace , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	EvChild ウォッチャーオブジェクトを作る
	createStopped	final public static object createStopped ( int $pid , bool $trace , callable $callback [, mixed $data [, int $priority ]] )	停止した EvChild ウォッチャーのインスタンスを作る
	set	public void set ( int $pid , bool $trace )	ウォッチャーを設定する
	EvWatcher::clear	public int EvWatcher::clear ( void )
	EvWatcher::__construct	abstract public EvWatcher::__construct ( void )
	EvWatcher::feed	public void EvWatcher::feed ( int $revents )
	EvWatcher::getLoop	public EvLoop EvWatcher::getLoop ( void )
	EvWatcher::invoke	public void EvWatcher::invoke ( int $revents )
	EvWatcher::keepalive	public bool EvWatcher::keepalive ([ bool $value ] )
	EvWatcher::setCallback	public void EvWatcher::setCallback ( callable $callback )
	EvWatcher::start	public void EvWatcher::start ( void )
	EvWatcher::stop	public void EvWatcher::stop ( void )
EvEmbed	$embed	 public $embed ;
	__construct	public __construct ( object $other [, callable $callback [, mixed $data [, int $priority ]]] )	EvEmbed オブジェクトを作る
	createStopped	final public static void createStopped ( object $other [, callable $callback [, mixed $data [, int $priority ]]] )	停止した EvEmbed ウォッチャーのインスタンスを作る
	set	public void set ( object $other )	ウォッチャーを設定する
	sweep	public void sweep ( void )	埋め込んだループに対して単一の非ブロックスイープを行う
	EvWatcher::clear	public int EvWatcher::clear ( void )
	EvWatcher::__construct	abstract public EvWatcher::__construct ( void )
	EvWatcher::feed	public void EvWatcher::feed ( int $revents )
	EvWatcher::getLoop	public EvLoop EvWatcher::getLoop ( void )
	EvWatcher::invoke	public void EvWatcher::invoke ( int $revents )
	EvWatcher::keepalive	public bool EvWatcher::keepalive ([ bool $value ] )
	EvWatcher::setCallback	public void EvWatcher::setCallback ( callable $callback )
	EvWatcher::start	public void EvWatcher::start ( void )
	EvWatcher::stop	public void EvWatcher::stop ( void )
Event	ET	 const integer ET = 32 ;
	PERSIST	 const integer PERSIST = 16 ;
	READ	 const integer READ = 2 ;
	WRITE	 const integer WRITE = 4 ;
	SIGNAL	 const integer SIGNAL = 8 ;
	TIMEOUT	 const integer TIMEOUT = 1 ;
	$pending	 public readonly bool $pending ;
	add	public void add ([ double $timeout ] )	Makes event pending
	addSignal	public bool addSignal ([ double $timeout ] )	Makes signal event pending
	addTimer	public bool addTimer ([ double $timeout ] )	Makes timer event pending
	__construct	public __construct ( EventBase $base , mixed $fd , int $what , callable $cb [, mixed $arg = NULL ] )	Constructs Event object
	del	public void del ( void )	Makes event non-pending
	delSignal	public bool delSignal ( void )	Makes signal event non-pending
	delTimer	public bool delTimer ( void )	Makes timer event non-pending
	free	public void free ( void )	Make event non-pending and free resources allocated for this   event.
	getSupportedMethods	public static void getSupportedMethods ( void )	Returns array with of the names of the methods supported in this version of Libevent
	pending	public bool pending ( int $flags )	Detects whether event is pending or scheduled
	set	public bool set ( EventBase $base , mixed $fd [, int $what [, callable $cb [, mixed $arg ]]] )	Re-configures event
	setPriority	public bool setPriority ( int $priority )	Set event priority
	setTimer	public bool setTimer ( EventBase $base , callable $cb [, mixed $arg ] )	Re-configures timer event
	signal	public static Event signal ( EventBase $base , int $signum , callable $cb [, mixed $arg ] )	Constructs signal event object
	timer	public static Event timer ( EventBase $base , callable $cb [, mixed $arg ] )	Constructs timer event object
EventBase	LOOP_ONCE	 const integer LOOP_ONCE = 1 ;
	LOOP_NONBLOCK	 const integer LOOP_NONBLOCK = 2 ;
	NOLOCK	 const integer NOLOCK = 1 ;
	STARTUP_IOCP	 const integer STARTUP_IOCP = 4 ;
	NO_CACHE_TIME	 const integer NO_CACHE_TIME = 8 ;
	EPOLL_USE_CHANGELIST	 const integer EPOLL_USE_CHANGELIST = 16 ;
	__construct	public __construct ([ EventConfig $cfg ] )	Constructs EventBase object
	dispatch	public void dispatch ( void )	Dispatch pending events
	exit	public void exit ([ double $timeout ] )	Stop dispatching events
	getFeatures	public int getFeatures ( void )	Returns bitmask of features supported
	getMethod	public string getMethod ([ EventConfig $cfg ] )	Returns event method in use
	getTimeOfDayCached	public double getTimeOfDayCached ( void )	Returns the current event base time
	gotExit	public void gotExit ( void )	Checks if the event loop was told to exit
	gotStop	public void gotStop ( void )	Checks if the event loop was told to exit
	loop	public bool loop ([ int $flags ] )	Dispatch pending events
	priorityInit	public bool priorityInit ( string $n_priorities )	Sets number of priorities per event base
	reInit	public void reInit ( string $base )	Re-initialize event base(after a fork).
	stop	public bool stop ( void )	Tells event_base to stop dispatching events
EventBuffer	EOL_ANY	 const integer EOL_ANY = 0 ;
	EOL_CRLF	 const integer EOL_CRLF = 1 ;
	EOL_CRLF_STRICT	 const integer EOL_CRLF_STRICT = 2 ;
	EOL_LF	 const integer EOL_LF = 3 ;
	PTR_SET	 const integer PTR_SET = 0 ;
	PTR_ADD	 const integer PTR_ADD = 1 ;
	$length	 public readonly int $length ;
	$contiguous_space	 public readonly int $contiguous_space ;
	add	public bool add ( string $data )	Append data to the end of an event buffer
	addBuffer	public bool addBuffer ( EventBuffer $buf )	Move all data from a buffer provided to the current instance of EventBuffer
	appendFrom	public int appendFrom ( EventBuffer $buf , int $len )	Moves the specified number of bytes from a source buffer to the   end of the current buffer
	__construct	public __construct ( void )	Constructs EventBuffer object
	copyout	public int copyout ( string &$data , int $max_bytes )	Copies out specified number of bytes from the front of the buffer
	drain	public void drain ( int $len )	Removes specified number of bytes from the front of the buffer   without copying it anywhere
	enableLocking	public void enableLocking ( void )	説明
	expand	public bool expand ( int $len )	Reserves space in buffer
	freeze	public bool freeze ( bool $at_front )	Prevent calls that modify an event buffer from succeeding
	lock	public void lock ( void )	Acquires a lock on buffer
	prepend	public bool prepend ( string $data )	Prepend data to the front of the buffer
	prependBuffer	public bool prependBuffer ( EventBuffer $buf )	Moves all data from source buffer to the front of current buffer
	pullup	public void pullup ( string $size )	Linearizes data within buffer   and returns it's contents as a string
	read	public string read ( int $max_bytes )	Read data from an evbuffer and drain the bytes read
	read	public string read ( mixed $fd , int $howmuch )	Read data from an evbuffer and drain the bytes read
	readLine	public void readLine ( string $eol_style )	Extracts a line from the front of the buffer
	search	public mixed search ( string $what [, int $start = -1 [, int $end = -1 ]] )	Scans the buffer for an occurrence of a string
	searchEol	public mixed searchEol ([ int $start = -1 [, int $eol_style = EventBuffer::EOL_ANY ]] )	Scans the buffer for an occurrence of an end of line
	substr	public string substr ( int $start [, int $length ] )	Substracts a portion of the buffer data
	unfreeze	public bool unfreeze ( bool $at_front )	Re-enable calls that modify an event buffer
	unlock	public bool unlock ( void )	Releases lock acquired by EventBuffer::lock
	write	public void write ( mixed $fd [, int $howmuch ] )	Write contents of the buffer to a file or socket
EventBufferEvent	READING	 const integer READING = 1 ;
	WRITING	 const integer WRITING = 2 ;
	EOF	 const integer EOF = 16 ;
	ERROR	 const integer ERROR = 32 ;
	TIMEOUT	 const integer TIMEOUT = 64 ;
	CONNECTED	 const integer CONNECTED = 128 ;
	OPT_CLOSE_ON_FREE	 const integer OPT_CLOSE_ON_FREE = 1 ;
	OPT_THREADSAFE	 const integer OPT_THREADSAFE = 2 ;
	OPT_DEFER_CALLBACKS	 const integer OPT_DEFER_CALLBACKS = 4 ;
	OPT_UNLOCK_CALLBACKS	 const integer OPT_UNLOCK_CALLBACKS = 8 ;
	SSL_OPEN	 const integer SSL_OPEN = 0 ;
	SSL_CONNECTING	 const integer SSL_CONNECTING = 1 ;
	SSL_ACCEPTING	 const integer SSL_ACCEPTING = 2 ;
	$fd	 public integer $fd ;
	$priority	 public integer $priority ;
	$input	 public readonly EventBuffer $input ;
	$output	 public readonly EventBuffer $output ;
	connect	public bool connect ( string $addr )	Connect buffer event's file descriptor to given address or   UNIX socket
	connectHost	public bool connectHost ( EventDnsBase $dns_base , string $hostname , int $port [, int $family = EventUtil::AF_UNSPEC ] )	Connects to a hostname with optionally asyncronous DNS resolving
	__construct	public __construct ( EventBase $base [, mixed $socket = NULL [, int $options = 0 [, callable $readcb = NULL [, callable $writecb = NULL [, callable $eventcb = NULL ]]]]] )	Constructs EventBufferEvent object
	createPair	public array createPair ( EventBase $base [, int $options = 0 ] )	Creates two buffer events connected to each other
	disable	public bool disable ( int $events )	Disable events read, write, or both on a buffer event.
	enable	public bool enable ( string $events )	Enable events read, write, or both on a buffer event.
	free	public void free ( void )	Free a buffer event
	getDnsErrorString	public string getDnsErrorString ( void )	Returns string describing the last failed DNS lookup attempt
	getEnabled	public int getEnabled ( void )	Returns bitmask of events currently enabled on the buffer event
	getInput	public EventBuffer getInput ( void )	Returns underlying input buffer associated with current buffer   event
	getOutput	public EventBuffer getOutput ( void )	Returns underlying output buffer associated with current buffer   event
	read	public int read ( string &$data , int $size )	Read buffer's data
	readBuffer	public bool readBuffer ( EventBuffer $buf )	Drains the entire contents of the input buffer and places them into buf
	setCallbacks	public void setCallbacks ( callable $readcb , callable $writecb , callable $eventcb [, string $arg ] )	Assigns read, write and event(status) callbacks
	setPriority	public bool setPriority ( int $priority )	Assign a priority to a bufferevent
	setTimeouts	public bool setTimeouts ( int $timeout_read , int $timeout_write )	Set the read and write timeout for a buffer event
	setWatermark	public void setWatermark ( int $events , int $lowmark , int $highmark )	Adjusts read and/or write watermarks
	sslError	public void sslError ( void )	Returns most recent OpenSSL error reported on the buffer event
	sslFilter	public static EventBufferEvent sslFilter ( EventBase $base , EventBufferEvent $underlying , EventSslContext $ctx , int $state [, int $options = 0 ] )	Create a new SSL buffer event to send its data over another buffer event
	sslRenegotiate	public void sslRenegotiate ( void )	Tells a bufferevent to begin SSL renegotiation.
	sslSocket	public static EventBufferEvent sslSocket ( EventBase $base , mixed $socket , EventSslContext $ctx , int $state [, int $options ] )	Creates a new SSL buffer event to send its data over an SSL on a socket
	write	public bool write ( string $data )	Adds data to a buffer event's output buffer
	writeBuffer	public bool writeBuffer ( EventBuffer $buf )	Adds contents of the entire buffer to a buffer event's output   buffer
EventConfig	FEATURE_ET	 const integer FEATURE_ET = 1 ;
	FEATURE_O1	 const integer FEATURE_O1 = 2 ;
	FEATURE_FDS	 const integer FEATURE_FDS = 4 ;
	avoidMethod	public bool avoidMethod ( int $method )	Tells libevent to avoid specific event method
	__construct	public __construct ( void )	Constructs EventConfig object
	requireFeatures	public bool requireFeatures ( int $feature )	Enters a required event method feature that the application demands
	setMaxDispatchInterval	public void setMaxDispatchInterval ( int $max_interval , int $max_callbacks , int $min_priority )	Prevents priority inversion
EventDnsBase	OPTION_SEARCH	 const integer OPTION_SEARCH = 1 ;
	OPTION_NAMESERVERS	 const integer OPTION_NAMESERVERS = 2 ;
	OPTION_MISC	 const integer OPTION_MISC = 4 ;
	OPTION_HOSTSFILE	 const integer OPTION_HOSTSFILE = 8 ;
	OPTIONS_ALL	 const integer OPTIONS_ALL = 15 ;
	addNameserverIp	public bool addNameserverIp ( string $ip )	Adds a nameserver to the DNS base
	addSearch	public void addSearch ( string $domain )	Adds a domain to the list of search domains
	clearSearch	public void clearSearch ( void )	Removes all current search suffixes
	__construct	public __construct ( EventBase $base , bool $initialize )	Constructs EventDnsBase object
	countNameservers	public void countNameservers ( void )	Gets the number of configured nameservers
	loadHosts	public bool loadHosts ( string $hosts )	Loads a hosts file (in the same format as /etc/hosts) from hosts file
	parseResolvConf	public bool parseResolvConf ( int $flags , string $filename )	Scans the resolv.conf-formatted file
	setOption	public bool setOption ( string $option , string $value )	Set the value of a configuration option
	setSearchNdots	public bool setSearchNdots ( int $ndots )	Set the 'ndots' parameter for searches
EventHttp	accept	public bool accept ( mixed $socket )	Makes an HTTP server accept connections on the specified socket stream or resource
	addServerAlias	public bool addServerAlias ( string $alias )	Adds a server alias to the HTTP server object
	bind	public void bind ( string $address , int $port )	Binds an HTTP server on the specified address and port
	__construct	public __construct ( EventBase $base )	Constructs EventHttp object(the HTTP server)
	removeServerAlias	public bool removeServerAlias ( string $alias )	Removes server alias
	setAllowedMethods	public void setAllowedMethods ( int $methods )	Sets the what HTTP methods are supported in requests accepted by this server, and passed to user callbacks
	setCallback	public void setCallback ( string $path , string $cb [, string $arg ] )	Sets a callback for specified URI
	setDefaultCallback	public void setDefaultCallback ( string $cb [, string $arg ] )	Sets default callback to handle requests that are not caught by specific callbacks
	setMaxBodySize	public void setMaxBodySize ( int $value )	Sets maximum request body size
	setMaxHeadersSize	public void setMaxHeadersSize ( int $value )	Sets maximum HTTP header size
	setTimeout	public void setTimeout ( int $value )	Sets the timeout for an HTTP request
EventHttpConnection	__construct	public __construct ( EventBase $base , EventDnsBase $dns_base , string $address , int $port )	Constructs EventHttpConnection object
	getBase	public EventBase getBase ( void )	Returns event base associated with the connection
	getPeer	public void getPeer ( string &$address , int &$port )	Gets the remote address and port associated with the connection
	makeRequest	public bool makeRequest ( EventHttpRequest $req , int $type , string $uri )	Makes an HTTP request over the specified connection
	setLocalAddress	public void setLocalAddress ( string $address )	Sets the IP address from which HTTP connections are made
	setLocalPort	public void setLocalPort ( int $port )	Sets the local port from which connections are made
	setMaxBodySize	public void setMaxBodySize ( string $max_size )	Sets maximum body size for the connection
	setMaxHeadersSize	public void setMaxHeadersSize ( string $max_size )	Sets maximum header size
	setRetries	public void setRetries ( int $retries )	Sets the retry limit for the connection
	setTimeout	public void setTimeout ( int $timeout )	Sets the timeout for the connection
EventHttpRequest	CMD_GET	 const integer CMD_GET = 1 ;
	CMD_POST	 const integer CMD_POST = 2 ;
	CMD_HEAD	 const integer CMD_HEAD = 4 ;
	CMD_PUT	 const integer CMD_PUT = 8 ;
	CMD_DELETE	 const integer CMD_DELETE = 16 ;
	CMD_OPTIONS	 const integer CMD_OPTIONS = 32 ;
	CMD_TRACE	 const integer CMD_TRACE = 64 ;
	CMD_CONNECT	 const integer CMD_CONNECT = 128 ;
	CMD_PATCH	 const integer CMD_PATCH = 256 ;
	INPUT_HEADER	 const integer INPUT_HEADER = 1 ;
	OUTPUT_HEADER	 const integer OUTPUT_HEADER = 2 ;
	addHeader	public bool addHeader ( string $key , string $value , int $type )	Adds an HTTP header to the headers of the request
	cancel	public void cancel ( void )	Cancels a pending HTTP request
	clearHeaders	public void clearHeaders ( void )	Removes all output headers from the header list of the request
	__construct	public __construct ( callable $callback [, mixed $data = NULL ] )	Constructs EventHttpRequest object
	findHeader	public void findHeader ( string $key , string $type )	Finds the value belonging a header
	free	public void free ( void )	Frees the object and removes associated events
	getCommand	public void getCommand ( void )	Returns the request command(method)
	getHost	public string getHost ( void )	Returns the request host
	getInputBuffer	public EventBuffer getInputBuffer ( void )	Returns the input buffer
	getInputHeaders	public array getInputHeaders ( void )	Returns associative array of the input headers
	getOutputBuffer	public EventBuffer getOutputBuffer ( void )	Returns the output buffer of the request
	getOutputHeaders	public void getOutputHeaders ( void )	Returns associative array of the input headers
	getResponseCode	public int getResponseCode ( void )	Returns the the response code
	getUri	public string getUri ( void )	Returns the request URI
	removeHeader	public void removeHeader ( string $key , string $type )	Removes an HTTP header from the headers of the request
	sendError	public void sendError ( int $error [, string $reason = NULL ] )	Send an HTML error message to the client
	sendReply	public void sendReply ( int $code , string $reason [, EventBuffer $buf ] )	Send an HTML reply to the client
	sendReplyChunk	public void sendReplyChunk ( EventBuffer $buf )	Send another data chunk as part of an ongoing chunked reply
	sendReplyEnd	public void sendReplyEnd ( void )	Complete a chunked reply, freeing the request as appropriate
	sendReplyStart	public void sendReplyStart ( int $code , string $reason )	Initiate a chunked reply
EventListener	OPT_LEAVE_SOCKETS_BLOCKING	 const integer OPT_LEAVE_SOCKETS_BLOCKING = 1 ;
	OPT_CLOSE_ON_FREE	 const integer OPT_CLOSE_ON_FREE = 2 ;
	OPT_CLOSE_ON_EXEC	 const integer OPT_CLOSE_ON_EXEC = 4 ;
	OPT_REUSEABLE	 const integer OPT_REUSEABLE = 8 ;
	OPT_THREADSAFE	 const integer OPT_THREADSAFE = 16 ;
	$fd	 public readonly int $fd ;
	__construct	public __construct ( EventBase $base , callable $cb , mixed $data , int $flags , int $backlog , mixed $target )	Creates new connection listener associated with an event base
	disable	public bool disable ( void )	Disables an event connect listener object
	enable	public bool enable ( void )	Enables an event connect listener object
	getBase	public void getBase ( void )	Returns event base associated with the event listener
	getSocketName	public static bool getSocketName ( string &$address [, mixed &$port ] )	Retreives the current address to which the   listener's socket is bound.
	setCallback	public void setCallback ( callable $cb [, mixed $arg = NULL ] )	The setCallback purpose
	setErrorCallback	public void setErrorCallback ( string $cb )	Set event listener's error callback
EventSslContext	SSLv2_CLIENT_METHOD	 const integer SSLv2_CLIENT_METHOD = 1 ;
	SSLv3_CLIENT_METHOD	 const integer SSLv3_CLIENT_METHOD = 2 ;
	SSLv23_CLIENT_METHOD	 const integer SSLv23_CLIENT_METHOD = 3 ;
	TLS_CLIENT_METHOD	 const integer TLS_CLIENT_METHOD = 4 ;
	SSLv2_SERVER_METHOD	 const integer SSLv2_SERVER_METHOD = 5 ;
	SSLv3_SERVER_METHOD	 const integer SSLv3_SERVER_METHOD = 6 ;
	SSLv23_SERVER_METHOD	 const integer SSLv23_SERVER_METHOD = 7 ;
	TLS_SERVER_METHOD	 const integer TLS_SERVER_METHOD = 8 ;
	OPT_LOCAL_CERT	 const integer OPT_LOCAL_CERT = 1 ;
	OPT_LOCAL_PK	 const integer OPT_LOCAL_PK = 2 ;
	OPT_PASSPHRASE	 const integer OPT_PASSPHRASE = 3 ;
	OPT_CA_FILE	 const integer OPT_CA_FILE = 4 ;
	OPT_CA_PATH	 const integer OPT_CA_PATH = 5 ;
	OPT_ALLOW_SELF_SIGNED	 const integer OPT_ALLOW_SELF_SIGNED = 6 ;
	OPT_VERIFY_PEER	 const integer OPT_VERIFY_PEER = 7 ;
	OPT_VERIFY_DEPTH	 const integer OPT_VERIFY_DEPTH = 8 ;
	OPT_CIPHERS	 const integer OPT_CIPHERS = 9 ;
	$local_cert	 public string $local_cert ;
	$local_pk	 public string $local_pk ;
	__construct	public __construct ( string $method , string $options )	Constructs an OpenSSL context for use with Event classes
EventUtil	AF_INET	 const integer AF_INET = 2 ;
	AF_INET6	 const integer AF_INET6 = 10 ;
	AF_UNSPEC	 const integer AF_UNSPEC = 0 ;
	LIBEVENT_VERSION_NUMBER	 const integer LIBEVENT_VERSION_NUMBER = 33559808 ;
	SO_DEBUG	 const integer SO_DEBUG = 1 ;
	SO_REUSEADDR	 const integer SO_REUSEADDR = 2 ;
	SO_KEEPALIVE	 const integer SO_KEEPALIVE = 9 ;
	SO_DONTROUTE	 const integer SO_DONTROUTE = 5 ;
	SO_LINGER	 const integer SO_LINGER = 13 ;
	SO_BROADCAST	 const integer SO_BROADCAST = 6 ;
	SO_OOBINLINE	 const integer SO_OOBINLINE = 10 ;
	SO_SNDBUF	 const integer SO_SNDBUF = 7 ;
	SO_RCVBUF	 const integer SO_RCVBUF = 8 ;
	SO_SNDLOWAT	 const integer SO_SNDLOWAT = 19 ;
	SO_RCVLOWAT	 const integer SO_RCVLOWAT = 18 ;
	SO_SNDTIMEO	 const integer SO_SNDTIMEO = 21 ;
	SO_RCVTIMEO	 const integer SO_RCVTIMEO = 20 ;
	SO_TYPE	 const integer SO_TYPE = 3 ;
	SO_ERROR	 const integer SO_ERROR = 4 ;
	SOL_SOCKET	 const integer SOL_SOCKET = 1 ;
	SOL_TCP	 const integer SOL_TCP = 6 ;
	SOL_UDP	 const integer SOL_UDP = 17 ;
	IPPROTO_IP	 const integer IPPROTO_IP = 0 ;
	IPPROTO_IPV6	 const integer IPPROTO_IPV6 = 41 ;
	__construct	abstract public __construct ( void )	The abstract constructor
	getLastSocketErrno	public static int getLastSocketErrno ([ mixed $socket = NULL ] )	Returns the most recent socket error number
	getLastSocketError	public static string getLastSocketError ([ mixed $socket ] )	Returns the most recent socket error
	getSocketFd	public static int getSocketFd ( mixed $socket )	Returns numeric file descriptor of a socket, or stream
	getSocketName	public static bool getSocketName ( mixed $socket , string &$address [, mixed &$port ] )	Retreives the current address to which the   socket is bound.
	setSocketOption	public static bool setSocketOption ( mixed $socket , int $level , int $optname , mixed $optval )	Sets socket options
	sslRandPoll	public static void sslRandPoll ( void )	Generates entropy by means of OpenSSL's RAND_poll()
EvFork	$is_active	 public $is_active ;
	$data	 public $data ;
	$is_pending	 public $is_pending ;
	$priority	 public $priority ;
	__construct	public __construct ( callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	EvFork ウォッチャーオブジェクトを作る
	createStopped	final public static object createStopped ( string $callback [, string $data [, string $priority ]] )	停止した EvFork ウォッチャーのインスタンスを作る
	EvWatcher::clear	public int EvWatcher::clear ( void )
	EvWatcher::__construct	abstract public EvWatcher::__construct ( void )
	EvWatcher::feed	public void EvWatcher::feed ( int $revents )
	EvWatcher::getLoop	public EvLoop EvWatcher::getLoop ( void )
	EvWatcher::invoke	public void EvWatcher::invoke ( int $revents )
	EvWatcher::keepalive	public bool EvWatcher::keepalive ([ bool $value ] )
	EvWatcher::setCallback	public void EvWatcher::setCallback ( callable $callback )
	EvWatcher::start	public void EvWatcher::start ( void )
	EvWatcher::stop	public void EvWatcher::stop ( void )
EvIdle	$is_active	 public $is_active ;
	$data	 public $data ;
	$is_pending	 public $is_pending ;
	$priority	 public $priority ;
	__construct	public __construct ( callable $callback [, mixed $data [, int $priority ]] )	Constructs the EvIdle watcher object
	createStopped	final public static object createStopped ( string $callback [, mixed $data [, int $priority ]] )	Creates instance of a stopped EvIdle watcher object
	EvWatcher::clear	public int EvWatcher::clear ( void )
	EvWatcher::__construct	abstract public EvWatcher::__construct ( void )
	EvWatcher::feed	public void EvWatcher::feed ( int $revents )
	EvWatcher::getLoop	public EvLoop EvWatcher::getLoop ( void )
	EvWatcher::invoke	public void EvWatcher::invoke ( int $revents )
	EvWatcher::keepalive	public bool EvWatcher::keepalive ([ bool $value ] )
	EvWatcher::setCallback	public void EvWatcher::setCallback ( callable $callback )
	EvWatcher::start	public void EvWatcher::start ( void )
	EvWatcher::stop	public void EvWatcher::stop ( void )
EvIo	$fd	 public $fd ;
	$events	 public $events ;
	$is_active	 public $is_active ;
	$data	 public $data ;
	$is_pending	 public $is_pending ;
	$priority	 public $priority ;
	__construct	public __construct ( mixed $fd , int $events , callable $callback [, mixed $data [, int $priority ]] )	Constructs EvIo watcher object
	createStopped	final public static EvIo createStopped ( mixed $fd , int $events , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Create stopped EvIo watcher object
	set	public void set ( mixed $fd , int $events )	Configures the watcher
	EvWatcher::clear	public int EvWatcher::clear ( void )
	EvWatcher::__construct	abstract public EvWatcher::__construct ( void )
	EvWatcher::feed	public void EvWatcher::feed ( int $revents )
	EvWatcher::getLoop	public EvLoop EvWatcher::getLoop ( void )
	EvWatcher::invoke	public void EvWatcher::invoke ( int $revents )
	EvWatcher::keepalive	public bool EvWatcher::keepalive ([ bool $value ] )
	EvWatcher::setCallback	public void EvWatcher::setCallback ( callable $callback )
	EvWatcher::start	public void EvWatcher::start ( void )
	EvWatcher::stop	public void EvWatcher::stop ( void )
EvLoop	$data	 public $data ;
	$backend	 public $backend ;
	$is_default_loop	 public $is_default_loop ;
	$iteration	 public $iteration ;
	$pending	 public $pending ;
	$io_interval	 public $io_interval ;
	$timeout_interval	 public $timeout_interval ;
	$depth	 public $depth ;
	backend	public int backend ( void )	Returns an integer describing the backend used by libev.
	check	final public EvCheck check ( string $callback [, string $data [, string $priority ]] )	Creates EvCheck object associated with the current event loop   instance
	child	final public EvChild child ( string $pid , string $trace , string $callback [, string $data [, string $priority ]] )	Creates EvChild object associated with the current event loop
	__construct	public __construct ([ int $flags [, mixed $data = NULL [, double $io_interval = 0.0 [, double $timeout_interval = 0.0 ]]]] )	Constructs the event loop object
	defaultLoop	public static EvLoop defaultLoop ([ int $flags = Ev::FLAG_AUTO [, mixed $data = NULL [, double $io_interval = 0. [, double $timeout_interval = 0. ]]]] )	Returns or creates the default event loop.
	embed	final public EvEmbed embed ( string $other [, string $callback [, string $data [, string $priority ]]] )	Creates an instance of EvEmbed watcher associated   with the current EvLoop object.
	fork	final public EvFork fork ( callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Creates EvFork watcher object associated with the current event   loop instance
	idle	final public EvIdle idle ( callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Creates EvIdle watcher object associated with the current event   loop instance
	invokePending	public void invokePending ( void )	Invoke all pending watchers while resetting their pending state
	io	final public EvIo io ( mixed $fd , int $events , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Create EvIo watcher object associated with the current event   loop instance
	loopFork	public void loopFork ( void )	Must be called after a fork
	now	public double now ( void )	Returns the current "event loop time"
	nowUpdate	public void nowUpdate ( void )	Establishes the current time by querying the kernel, updating the time     returned by EvLoop::now in the progress.
	periodic	final public EvPeriodic periodic ( double $offset , double $interval , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Creates EvPeriodic watcher object associated with the current   event loop instance
	prepare	final public EvPrepare prepare ( callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Creates EvPrepare watcher object associated with the current   event loop instance
	resume	public void resume ( void )	Resume previously suspended default event loop
	run	public void run ([ int $flags = 0 ] )	Begin checking for events and calling callbacks for the loop
	signal	final public EvSignal signal ( int $signum , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Creates EvSignal watcher object associated with the current   event loop instance
	stat	final public EvStat stat ( string $path , double $interval , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Creates EvStat watcher object associated with the current event   loop instance
	stop	public void stop ([ int $how ] )	Stops the event loop
	suspend	public void suspend ( void )	Suspend the loop
	timer	final public EvTimer timer ( double $after , double $repeat , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Creates EvTimer watcher object associated with the current event   loop instance
	verify	public void verify ( void )	Performs internal consistency checks(for debugging)
EvPeriodic	$offset	 public $offset ;
	$interval	 public $interval ;
	$is_active	 public $is_active ;
	$data	 public $data ;
	$is_pending	 public $is_pending ;
	$priority	 public $priority ;
	again	public void again ( void )	Simply stops and restarts the periodic watcher again.
	at	public double at ( void )	Returns the absolute time that this   watcher is supposed to trigger next
	__construct	public __construct ( double $offset , string $interval , callable $reschedule_cb , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Constructs EvPeriodic watcher object
	createStopped	final public static EvPeriodic createStopped ( double $offset , double $interval , callable $reschedule_cb , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Create a stopped EvPeriodic watcher
	set	public void set ( double $offset , double $interval )	Configures the watcher
	EvWatcher::clear	public int EvWatcher::clear ( void )
	EvWatcher::__construct	abstract public EvWatcher::__construct ( void )
	EvWatcher::feed	public void EvWatcher::feed ( int $revents )
	EvWatcher::getLoop	public EvLoop EvWatcher::getLoop ( void )
	EvWatcher::invoke	public void EvWatcher::invoke ( int $revents )
	EvWatcher::keepalive	public bool EvWatcher::keepalive ([ bool $value ] )
	EvWatcher::setCallback	public void EvWatcher::setCallback ( callable $callback )
	EvWatcher::start	public void EvWatcher::start ( void )
	EvWatcher::stop	public void EvWatcher::stop ( void )
EvPrepare	$is_active	 public $is_active ;
	$data	 public $data ;
	$is_pending	 public $is_pending ;
	$priority	 public $priority ;
	__construct	public __construct ( string $callback [, string $data [, string $priority ]] )	EvPrepare ウォッチャーオブジェクトを作る
	createStopped	final public static EvPrepare createStopped ( callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	停止した EvPrepare ウォッチャーのインスタンスを作る
	EvWatcher::clear	public int EvWatcher::clear ( void )
	EvWatcher::__construct	abstract public EvWatcher::__construct ( void )
	EvWatcher::feed	public void EvWatcher::feed ( int $revents )
	EvWatcher::getLoop	public EvLoop EvWatcher::getLoop ( void )
	EvWatcher::invoke	public void EvWatcher::invoke ( int $revents )
	EvWatcher::keepalive	public bool EvWatcher::keepalive ([ bool $value ] )
	EvWatcher::setCallback	public void EvWatcher::setCallback ( callable $callback )
	EvWatcher::start	public void EvWatcher::start ( void )
	EvWatcher::stop	public void EvWatcher::stop ( void )
EvSignal	$signum	 public $signum ;
	$is_active	 public $is_active ;
	$data	 public $data ;
	$is_pending	 public $is_pending ;
	$priority	 public $priority ;
	__construct	public __construct ( int $signum , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Constructs EvPeriodic watcher object
	createStopped	final public static EvSignal createStopped ( int $signum , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Create stopped EvSignal watcher object
	set	public void set ( int $signum )	Configures the watcher
	EvWatcher::clear	public int EvWatcher::clear ( void )
	EvWatcher::__construct	abstract public EvWatcher::__construct ( void )
	EvWatcher::feed	public void EvWatcher::feed ( int $revents )
	EvWatcher::getLoop	public EvLoop EvWatcher::getLoop ( void )
	EvWatcher::invoke	public void EvWatcher::invoke ( int $revents )
	EvWatcher::keepalive	public bool EvWatcher::keepalive ([ bool $value ] )
	EvWatcher::setCallback	public void EvWatcher::setCallback ( callable $callback )
	EvWatcher::start	public void EvWatcher::start ( void )
	EvWatcher::stop	public void EvWatcher::stop ( void )
EvStat	$path	 public $path ;
	$interval	 public $interval ;
	$is_active	 public $is_active ;
	$data	 public $data ;
	$is_pending	 public $is_pending ;
	$priority	 public $priority ;
	attr	public array attr ( void )	Returns the values most recently detected by Ev
	__construct	public __construct ( string $path , double $interval , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Constructs EvStat watcher object
	createStopped	final public static void createStopped ( string $path , double $interval , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Create a stopped EvStat watcher object
	prev	public void prev ( void )	Returns the previous set of values returned by EvStat::attr
	set	public void set ( string $path , double $interval )	Configures the watcher
	stat	public bool stat ( void )	Initiates the stat call
	EvWatcher::clear	public int EvWatcher::clear ( void )
	EvWatcher::__construct	abstract public EvWatcher::__construct ( void )
	EvWatcher::feed	public void EvWatcher::feed ( int $revents )
	EvWatcher::getLoop	public EvLoop EvWatcher::getLoop ( void )
	EvWatcher::invoke	public void EvWatcher::invoke ( int $revents )
	EvWatcher::keepalive	public bool EvWatcher::keepalive ([ bool $value ] )
	EvWatcher::setCallback	public void EvWatcher::setCallback ( callable $callback )
	EvWatcher::start	public void EvWatcher::start ( void )
	EvWatcher::stop	public void EvWatcher::stop ( void )
EvTimer	$repeat	 public $repeat ;
	$remaining	 public $remaining ;
	$is_active	 public $is_active ;
	$data	 public $data ;
	$is_pending	 public $is_pending ;
	$priority	 public $priority ;
	again	public void again ( void )	Restarts the timer watcher
	__construct	public __construct ( double $after , double $repeat , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Constructs an EvTimer watcher object
	createStopped	final public static EvTimer createStopped ( double $after , double $repeat , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )	Creates EvTimer stopped watcher object
	set	public void set ( double $after , double $repeat )	Configures the watcher
	EvWatcher::clear	public int EvWatcher::clear ( void )
	EvWatcher::__construct	abstract public EvWatcher::__construct ( void )
	EvWatcher::feed	public void EvWatcher::feed ( int $revents )
	EvWatcher::getLoop	public EvLoop EvWatcher::getLoop ( void )
	EvWatcher::invoke	public void EvWatcher::invoke ( int $revents )
	EvWatcher::keepalive	public bool EvWatcher::keepalive ([ bool $value ] )
	EvWatcher::setCallback	public void EvWatcher::setCallback ( callable $callback )
	EvWatcher::start	public void EvWatcher::start ( void )
	EvWatcher::stop	public void EvWatcher::stop ( void )
EvWatcher	$is_active	 public $is_active ;
	$data	 public $data ;
	$is_pending	 public $is_pending ;
	$priority	 public $priority ;
	clear	public int clear ( void )	Clear watcher pending status
	__construct	abstract public __construct ( void )	Abstract constructor of a watcher object
	feed	public void feed ( int $revents )	Feeds the given revents set into the event loop
	getLoop	public EvLoop getLoop ( void )	Returns the loop responsible for the watcher
	invoke	public void invoke ( int $revents )	Invokes the watcher callback with the given received events bit   mask
	keepalive	public bool keepalive ([ bool $value ] )	Configures whether to keep the loop from returning
	setCallback	public void setCallback ( callable $callback )	Sets new callback for the watcher
	start	public void start ( void )	Starts the watcher
	stop	public void stop ( void )	Stops the watcher
Exception	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	__construct	public __construct ([ string $message = "" [, int $code = 0 [, Exception $previous = NULL ]]] )	例外を作成する
	getMessage	final public string getMessage ( void )	例外メッセージを取得する
	getPrevious	final public Exception getPrevious ( void )	前の例外を返す
	getCode	final public mixed getCode ( void )	例外コードを取得する
	getFile	final public string getFile ( void )	例外が発生したファイルを取得する
	getLine	final public int getLine ( void )	例外が発生した行を取得する
	getTrace	final public array getTrace ( void )	スタックトレースを取得する
	getTraceAsString	final public string getTraceAsString ( void )	スタックトレースを文字列で取得する
	__toString	public string __toString ( void )	例外の文字列表現
	__clone	final private void __clone ( void )	例外をコピーする
FANNConnection	$from_neuron	 public $from_neuron ;
	$to_neuron	 public $to_neuron ;
	$weight	 public $weight ;
	__construct	public __construct ( int $from_neuron , int $to_neuron , float $weight )	The connection constructor
	getFromNeuron	public int getFromNeuron ( void )	Returns the postions of starting neuron.
	getToNeuron	public int getToNeuron ( void )	Returns the postions of terminating neuron
	getWeight	public void getWeight ( void )	Returns the connection weight
	setWeight	public bool setWeight ( float $weight )	Sets the connections weight
FilesystemIterator	CURRENT_AS_PATHNAME	 const integer CURRENT_AS_PATHNAME = 32 ;
	CURRENT_AS_FILEINFO	 const integer CURRENT_AS_FILEINFO = 0 ;
	CURRENT_AS_SELF	 const integer CURRENT_AS_SELF = 16 ;
	CURRENT_MODE_MASK	 const integer CURRENT_MODE_MASK = 240 ;
	KEY_AS_PATHNAME	 const integer KEY_AS_PATHNAME = 0 ;
	KEY_AS_FILENAME	 const integer KEY_AS_FILENAME = 256 ;
	FOLLOW_SYMLINKS	 const integer FOLLOW_SYMLINKS = 512 ;
	KEY_MODE_MASK	 const integer KEY_MODE_MASK = 3840 ;
	NEW_CURRENT_AND_KEY	 const integer NEW_CURRENT_AND_KEY = 256 ;
	SKIP_DOTS	 const integer SKIP_DOTS = 4096 ;
	UNIX_PATHS	 const integer UNIX_PATHS = 8192 ;
	__construct	public __construct ( string $path [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS ] )	新しい filesystem イテレータを作成する
	current	public mixed current ( void )	現在のファイル
	getFlags	public int getFlags ( void )	処理フラグを取得する
	key	public string key ( void )	現在のファイルのキーを取得する
	next	public void next ( void )	次のファイルに移動する
	rewind	public void rewind ( void )	先頭に巻き戻す
	setFlags	public void setFlags ([ int $flags ] )	処理フラグを設定する
	DirectoryIterator::current	public DirectoryIterator DirectoryIterator::current ( void )
	DirectoryIterator::getATime	public int DirectoryIterator::getATime ( void )
	DirectoryIterator::getBasename	public string DirectoryIterator::getBasename ([ string $suffix ] )
	DirectoryIterator::getCTime	public int DirectoryIterator::getCTime ( void )
	DirectoryIterator::getExtension	public string DirectoryIterator::getExtension ( void )
	DirectoryIterator::getFilename	public string DirectoryIterator::getFilename ( void )
	DirectoryIterator::getGroup	public int DirectoryIterator::getGroup ( void )
	DirectoryIterator::getInode	public int DirectoryIterator::getInode ( void )
	DirectoryIterator::getMTime	public int DirectoryIterator::getMTime ( void )
	DirectoryIterator::getOwner	public int DirectoryIterator::getOwner ( void )
	DirectoryIterator::getPath	public string DirectoryIterator::getPath ( void )
	DirectoryIterator::getPathname	public string DirectoryIterator::getPathname ( void )
	DirectoryIterator::getPerms	public int DirectoryIterator::getPerms ( void )
	DirectoryIterator::getSize	public int DirectoryIterator::getSize ( void )
	DirectoryIterator::getType	public string DirectoryIterator::getType ( void )
	DirectoryIterator::isDir	public bool DirectoryIterator::isDir ( void )
	DirectoryIterator::isDot	public bool DirectoryIterator::isDot ( void )
	DirectoryIterator::isExecutable	public bool DirectoryIterator::isExecutable ( void )
	DirectoryIterator::isFile	public bool DirectoryIterator::isFile ( void )
	DirectoryIterator::isLink	public bool DirectoryIterator::isLink ( void )
	DirectoryIterator::isReadable	public bool DirectoryIterator::isReadable ( void )
	DirectoryIterator::isWritable	public bool DirectoryIterator::isWritable ( void )
	DirectoryIterator::key	public string DirectoryIterator::key ( void )
	DirectoryIterator::next	public void DirectoryIterator::next ( void )
	DirectoryIterator::rewind	public void DirectoryIterator::rewind ( void )
	DirectoryIterator::seek	public void DirectoryIterator::seek ( int $position )
	DirectoryIterator::__toString	public string DirectoryIterator::__toString ( void )
	DirectoryIterator::valid	public bool DirectoryIterator::valid ( void )
FilterIterator	accept	public abstract bool accept ( void )	イテレータの現在の要素がフィルタを満たすかどうかを調べる
	__construct	public __construct ( Iterator $iterator )	filterIterator を作成する
	current	public mixed current ( void )	現在の要素の値を取得する
	getInnerIterator	public Iterator getInnerIterator ( void )	内部イテレータを取得する
	key	public mixed key ( void )	現在のキーを取得する
	next	public void next ( void )	イテレータを前に移動する
	rewind	public void rewind ( void )	イテレータを巻き戻す
	valid	public bool valid ( void )	現在の要素が有効かどうかをチェックする
GearmanClient	addOptions	public bool addOptions ( int $options )	Add client options
	addServer	public bool addServer ([ string $host = 127.0.0.1 [, int $port = 4730 ]] )	Add a job server to the client
	addServers	public bool addServers ([ string $servers = 127.0.0.1:4730 ] )	Add a list of job servers to the client
	addTask	public GearmanTask addTask ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )	Add a task to be run in parallel
	addTaskBackground	public GearmanTask addTaskBackground ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )	Add a background task to be run in parallel
	addTaskHigh	public GearmanTask addTaskHigh ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )	Add a high priority task to run in parallel
	addTaskHighBackground	public GearmanTask addTaskHighBackground ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )	Add a high priority background task to be run in parallel
	addTaskLow	public GearmanTask addTaskLow ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )	Add a low priority task to run in parallel
	addTaskLowBackground	public GearmanTask addTaskLowBackground ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )	Add a low priority background task to be run in parallel
	addTaskStatus	public GearmanTask addTaskStatus ( string $job_handle [, string &$context ] )	Add a task to get status
	clearCallbacks	public bool clearCallbacks ( void )	Clear all task callback functions
	clone	public GearmanClient clone ( void )	Create a copy of a GearmanClient object
	__construct	public __construct ( void )	Create a GearmanClient instance
	context	public string context ( void )	Get the application context
	data	public string data ( void )	Get the application data (deprecated)
	do	public string do ( string $function_name , string $workload [, string $unique ] )	Run a single task and return a result [deprecated]
	doBackground	public string doBackground ( string $function_name , string $workload [, string $unique ] )	Run a task in the background
	doHigh	public string doHigh ( string $function_name , string $workload [, string $unique ] )	Run a single high priority task
	doHighBackground	public string doHighBackground ( string $function_name , string $workload [, string $unique ] )	Run a high priority task in the background
	doJobHandle	public string doJobHandle ( void )	Get the job handle for the running task
	doLow	public string doLow ( string $function_name , string $workload [, string $unique ] )	Run a single low priority task
	doLowBackground	public string doLowBackground ( string $function_name , string $workload [, string $unique ] )	Run a low priority task in the background
	doNormal	public string doNormal ( string $function_name , string $workload [, string $unique ] )	Run a single task and return a result
	doStatus	public array doStatus ( void )	Get the status for the running task
	echo	public bool echo ( string $workload )	Send data to all job servers to see if they echo it back [deprecated]
	error	public string error ( void )	Returns an error string for the last error encountered.
	getErrno	public int getErrno ( void )	Get an errno value
	jobStatus	public array jobStatus ( string $job_handle )	Get the status of a background job
	ping	public bool ping ( string $workload )	Send data to all job servers to see if they echo it back
	removeOptions	public bool removeOptions ( int $options )	Remove client options
	returnCode	public int returnCode ( void )	Get the last Gearman return code
	runTasks	public bool runTasks ( void )	Run a list of tasks in parallel
	setClientCallback	public void setClientCallback ( callable $callback )	Callback function when there is a data packet for a task (deprecated)
	setCompleteCallback	public bool setCompleteCallback ( callable $callback )	Set a function to be called on task completion
	setContext	public bool setContext ( string $context )	Set application context
	setCreatedCallback	public bool setCreatedCallback ( string $callback )	Set a callback for when a task is queued
	setData	public bool setData ( string $data )	Set application data (deprecated)
	setDataCallback	public bool setDataCallback ( callable $callback )	Callback function when there is a data packet for a task
	setExceptionCallback	public bool setExceptionCallback ( callable $callback )	Set a callback for worker exceptions
	setFailCallback	public bool setFailCallback ( callable $callback )	Set callback for job failure
	setOptions	public bool setOptions ( int $options )	Set client options
	setStatusCallback	public bool setStatusCallback ( callable $callback )	Set a callback for collecting task status
	setTimeout	public bool setTimeout ( int $timeout )	Set socket I/O activity timeout
	setWarningCallback	public bool setWarningCallback ( callable $callback )	Set a callback for worker warnings
	setWorkloadCallback	public bool setWorkloadCallback ( callable $callback )	Set a callback for accepting incremental data updates
	timeout	public int timeout ( void )	Get current socket I/O activity timeout value
GearmanException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
GearmanJob	complete	public bool complete ( string $result )	Send the result and complete status (deprecated)
	__construct	public __construct ( void )	Create a GearmanJob instance
	data	public bool data ( string $data )	Send data for a running job (deprecated)
	exception	public bool exception ( string $exception )	Send exception for running job (deprecated)
	fail	public bool fail ( void )	Send fail status (deprecated)
	functionName	public string functionName ( void )	Get function name
	handle	public string handle ( void )	Get the job handle
	returnCode	public int returnCode ( void )	Get last return code
	sendComplete	public bool sendComplete ( string $result )	Send the result and complete status
	sendData	public bool sendData ( string $data )	Send data for a running job
	sendException	public bool sendException ( string $exception )	Send exception for running job (exception)
	sendFail	public bool sendFail ( void )	Send fail status
	sendStatus	public bool sendStatus ( int $numerator , int $denominator )	Send status
	sendWarning	public bool sendWarning ( string $warning )	Send a warning
	setReturn	public bool setReturn ( int $gearman_return_t )	Set a return value
	status	public bool status ( int $numerator , int $denominator )	Send status (deprecated)
	unique	public string unique ( void )	Get the unique identifier
	warning	public bool warning ( string $warning )	Send a warning (deprecated)
	workload	public string workload ( void )	Get workload
	workloadSize	public int workloadSize ( void )	Get size of work load
GearmanTask	__construct	public __construct ( void )	Create a GearmanTask instance
	create	public GearmanTask create ( void )	Create a task (deprecated)
	data	public string data ( void )	Get data returned for a task
	dataSize	public int dataSize ( void )	Get the size of returned data
	function	public string function ( void )	Get associated function name (deprecated)
	functionName	public string functionName ( void )	Get associated function name
	isKnown	public bool isKnown ( void )	Determine if task is known
	isRunning	public bool isRunning ( void )	Test whether the task is currently running
	jobHandle	public string jobHandle ( void )	Get the job handle
	recvData	public array recvData ( int $data_len )	Read work or result data into a buffer for a task
	returnCode	public int returnCode ( void )	Get the last return code
	sendData	public int sendData ( string $data )	Send data for a task (deprecated)
	sendWorkload	public int sendWorkload ( string $data )	Send data for a task
	taskDenominator	public int taskDenominator ( void )	Get completion percentage denominator
	taskNumerator	public int taskNumerator ( void )	Get completion percentage numerator
	unique	public string unique ( void )	Get the unique identifier for a task
	uuid	public string uuid ( void )	Get the unique identifier for a task (deprecated)
GearmanWorker	addFunction	public bool addFunction ( string $function_name , callable $function [, mixed &$context [, int $timeout ]] )	Register and add callback function
	addOptions	public bool addOptions ( int $option )	Add worker options
	addServer	public bool addServer ([ string $host = 127.0.0.1 [, int $port = 4730 ]] )	Add a job server
	addServers	public bool addServers ( string $servers = 127.0.0.1:4730 )	Add job servers
	clone	public void clone ( void )	Create a copy of the worker
	__construct	public __construct ( void )	Create a GearmanWorker instance
	echo	public bool echo ( string $workload )	Test job server response
	error	public string error ( void )	Get the last error encountered
	getErrno	public int getErrno ( void )	Get errno
	options	public int options ( void )	Get worker options
	register	public bool register ( string $function_name [, int $timeout ] )	Register a function with the job server
	removeOptions	public bool removeOptions ( int $option )	Remove worker options
	returnCode	public int returnCode ( void )	Get last Gearman return code
	setId	public bool setId ( string $id )
	setOptions	public bool setOptions ( int $option )	Set worker options
	setTimeout	public bool setTimeout ( int $timeout )	Set socket I/O activity timeout
	timeout	public int timeout ( void )	Get socket I/O activity timeout
	unregister	public bool unregister ( string $function_name )	Unregister a function name with the job servers
	unregisterAll	public bool unregisterAll ( void )	Unregister all function names with the job servers
	wait	public bool wait ( void )	Wait for activity from one of the job servers
	work	public bool work ( void )	Wait for and perform jobs
Gender\Gender	IS_FEMALE	 const integer IS_FEMALE = 70 ;
	IS_MOSTLY_FEMALE	 const integer IS_MOSTLY_FEMALE = 102 ;
	IS_MALE	 const integer IS_MALE = 77 ;
	IS_MOSTLY_MALE	 const integer IS_MOSTLY_MALE = 109 ;
	IS_UNISEX_NAME	 const integer IS_UNISEX_NAME = 63 ;
	IS_A_COUPLE	 const integer IS_A_COUPLE = 67 ;
	NAME_NOT_FOUND	 const integer NAME_NOT_FOUND = 32 ;
	ERROR_IN_NAME	 const integer ERROR_IN_NAME = 69 ;
	ANY_COUNTRY	 const integer ANY_COUNTRY = 0 ;
	BRITAIN	 const integer BRITAIN = 1 ;
	IRELAND	 const integer IRELAND = 2 ;
	USA	 const integer USA = 3 ;
	SPAIN	 const integer SPAIN = 4 ;
	PORTUGAL	 const integer PORTUGAL = 5 ;
	ITALY	 const integer ITALY = 6 ;
	MALTA	 const integer MALTA = 7 ;
	FRANCE	 const integer FRANCE = 8 ;
	BELGIUM	 const integer BELGIUM = 9 ;
	LUXEMBOURG	 const integer LUXEMBOURG = 10 ;
	NETHERLANDS	 const integer NETHERLANDS = 11 ;
	GERMANY	 const integer GERMANY = 12 ;
	EAST_FRISIA	 const integer EAST_FRISIA = 13 ;
	AUSTRIA	 const integer AUSTRIA = 14 ;
	SWISS	 const integer SWISS = 15 ;
	ICELAND	 const integer ICELAND = 16 ;
	DENMARK	 const integer DENMARK = 17 ;
	NORWAY	 const integer NORWAY = 18 ;
	SWEDEN	 const integer SWEDEN = 19 ;
	FINLAND	 const integer FINLAND = 20 ;
	ESTONIA	 const integer ESTONIA = 21 ;
	LATVIA	 const integer LATVIA = 22 ;
	LITHUANIA	 const integer LITHUANIA = 23 ;
	POLAND	 const integer POLAND = 24 ;
	CZECH_REP	 const integer CZECH_REP = 25 ;
	SLOVAKIA	 const integer SLOVAKIA = 26 ;
	HUNGARY	 const integer HUNGARY = 27 ;
	ROMANIA	 const integer ROMANIA = 28 ;
	BULGARIA	 const integer BULGARIA = 29 ;
	BOSNIA	 const integer BOSNIA = 30 ;
	CROATIA	 const integer CROATIA = 31 ;
	KOSOVO	 const integer KOSOVO = 32 ;
	MACEDONIA	 const integer MACEDONIA = 33 ;
	MONTENEGRO	 const integer MONTENEGRO = 34 ;
	SERBIA	 const integer SERBIA = 35 ;
	SLOVENIA	 const integer SLOVENIA = 36 ;
	ALBANIA	 const integer ALBANIA = 37 ;
	GREECE	 const integer GREECE = 38 ;
	RUSSIA	 const integer RUSSIA = 39 ;
	BELARUS	 const integer BELARUS = 40 ;
	MOLDOVA	 const integer MOLDOVA = 41 ;
	UKRAINE	 const integer UKRAINE = 42 ;
	ARMENIA	 const integer ARMENIA = 43 ;
	AZERBAIJAN	 const integer AZERBAIJAN = 44 ;
	GEORGIA	 const integer GEORGIA = 45 ;
	KAZAKH_UZBEK	 const integer KAZAKH_UZBEK = 46 ;
	TURKEY	 const integer TURKEY = 47 ;
	ARABIA	 const integer ARABIA = 48 ;
	ISRAEL	 const integer ISRAEL = 49 ;
	CHINA	 const integer CHINA = 50 ;
	INDIA	 const integer INDIA = 51 ;
	JAPAN	 const integer JAPAN = 52 ;
	KOREA	 const integer KOREA = 53 ;
	connect	public boolean connect ( string $dsn )
	__construct	public __construct ([ string $dsn ] )
	country	public array country ( integer $country )
	get	public integer get ( string $name [, integer $country ] )
	isNick	public array isNick ( string $name0 , string $name1 [, integer $country ] )
	similarNames	public array similarNames ( string $name [, integer $country ] )
Generator	current	public mixed current ( void )	yield した値を取得する
	key	public mixed key ( void )	yield したキーを取得する
	next	public void next ( void )	ジェネレータを続行する
	rewind	public void rewind ( void )	イテレータを巻き戻す
	send	public mixed send ( mixed $value )	値をジェネレータに送る
	throw	public void throw ( Exception $exception )	例外をジェネレータにスローする
	valid	public bool valid ( void )	イテレータが終了したかどうかを調べる
	__wakeup	public void __wakeup ( void )	シリアライズのコールバック
GlobIterator	__construct	public __construct ( string $path [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO ] )	glob を使うディレクトリを作成する
	count	public int count ( void )	ディレクトリやファイルの数を取得する
	FilesystemIterator::__construct	public FilesystemIterator::__construct ( string $path [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS ] )
	FilesystemIterator::current	public mixed FilesystemIterator::current ( void )
	FilesystemIterator::getFlags	public int FilesystemIterator::getFlags ( void )
	FilesystemIterator::key	public string FilesystemIterator::key ( void )
	FilesystemIterator::next	public void FilesystemIterator::next ( void )
	FilesystemIterator::rewind	public void FilesystemIterator::rewind ( void )
	FilesystemIterator::setFlags	public void FilesystemIterator::setFlags ([ int $flags ] )
Gmagick	addimage	public Gmagick addimage ( Gmagick $Gmagick )	新しい画像を Gmagick オブジェクトの画像リストに追加する
	addnoiseimage	public Gmagick addnoiseimage ( int $NOISE )	ランダムなノイズを画像に追加する
	annotateimage	public Gmagick annotateimage ( GmagickDraw $GmagickDraw , float $x , float $y , float $angle , string $text )	画像にテキストによる注記を加える
	blurimage	public Gmagick blurimage ( float $radius , float $sigma [, int $channel ] )	blur (にじみ) フィルタを画像に追加する
	borderimage	public Gmagick borderimage ( GmagickPixel $color , int $width , int $height )	画像の周りを枠線で囲む
	charcoalimage	public Gmagick charcoalimage ( float $radius , float $sigma )	木炭画をシミュレートする
	chopimage	public Gmagick chopimage ( int $width , int $height , int $x , int $y )	画像の一部を取り除き、切り詰める
	clear	public Gmagick clear ( void )	Gmagick オブジェクトに関連付けられたすべてのリソースをクリアする
	commentimage	public Gmagick commentimage ( string $comment )	コメントを画像に追加する
	compositeimage	public Gmagick compositeimage ( Gmagick $source , int $COMPOSE , int $x , int $y )	ある画像を別の画像に合成する
	__construct	public __construct ([ string $filename ] )	Gmagick のコンストラクタ
	cropimage	public Gmagick cropimage ( int $width , int $height , int $x , int $y )	画像の一部を抽出する
	cropthumbnailimage	public Gmagick cropthumbnailimage ( int $width , int $height )	切り取ってサムネイルを作成する
	current	public Gmagick current ( void )	現在の Gmagick オブジェクトへの参照を返す
	cyclecolormapimage	public Gmagick cyclecolormapimage ( int $displace )	画像のカラーマップを移動する
	deconstructimages	public void deconstructimages ( void )	画像間の特定のピクセルの差を返す
	despeckleimage	public Gmagick despeckleimage ( void )	画像内のスペックルノイズを軽減する
	destroy	public Gmagick destroy ( void )	Gmagick オブジェクトを破棄する
	drawimage	public Gmagick drawimage ( GmagickDraw $GmagickDraw )	現在の画像上の GmagickDraw オブジェクトをレンダリングする
	edgeimage	public Gmagick edgeimage ( float $radius )	画像の輪郭を強調する
	embossimage	public Gmagick embossimage ( float $radius , float $sigma )	グレースケール画像に三次元効果を施して返す
	enhanceimage	public Gmagick enhanceimage ( void )	ノイジーな画像の品質を向上させる
	equalizeimage	public Gmagick equalizeimage ( void )	画像ヒストグラムを均等化する
	flipimage	public Gmagick flipimage ( void )	垂直方向に反転した画像を作成する
	flopimage	public Gmagick flopimage ( void )	水平方向に反転した画像を作成する
	frameimage	public Gmagick frameimage ( GmagickPixel $color , int $width , int $height , int $inner_bevel , int $outer_bevel )	三次元の枠線をシミュレートする
	gammaimage	public Gmagick gammaimage ( float $gamma )	画像をガンマ補正する
	getcopyright	public string getcopyright ( void )	GraphicsMagick API の著作権情報を文字列で返す
	getfilename	public string getfilename ( void )	画像シーケンスに関連付けられたファイル名を取得する
	getimagebackgroundcolor	public void getimagebackgroundcolor ( void )	画像の背景色を返す
	getimageblueprimary	public array getimageblueprimary ( void )	青が一番強い点を返す
	getimagebordercolor	public void getimagebordercolor ( void )	画像の前景色を返す
	getimagechanneldepth	public int getimagechanneldepth ( int $channel_type )	特定の画像チャネルの深度を返す
	getimagecolors	public int getimagecolors ( void )	指定した色マップインデックスの色を返す
	getimagecolorspace	public int getimagecolorspace ( void )	画像の色空間を取得する
	getimagecompose	public int getimagecompose ( void )	画像の合成演算子を返す
	getimagedelay	public int getimagedelay ( void )	画像の遅延を取得する
	getimagedepth	public int getimagedepth ( void )	画像の深度を取得する
	getimagedispose	public int getimagedispose ( void )	画像の配置方法を取得する
	getimageextrema	public array getimageextrema ( void )	画像の極値を取得する
	getimagefilename	public string getimagefilename ( void )	シーケンス内の特定の画像のファイル名を返す
	getimageformat	public string getimageformat ( void )	シーケンス内の特定の画像のフォーマットを返す
	getimagegamma	public float getimagegamma ( void )	画像のガンマを取得する
	getimagegreenprimary	public array getimagegreenprimary ( void )	緑が一番強い点を返す
	getimageheight	public int getimageheight ( void )	画像の高さを返す
	getimagehistogram	public array getimagehistogram ( void )	画像のヒストグラムを取得する
	getimageindex	public int getimageindex ( void )	現在アクティブな画像のインデックスを取得する
	getimageinterlacescheme	public int getimageinterlacescheme ( void )	画像のインターレース手法を取得する
	getimageiterations	public int getimageiterations ( void )	画像の反復を取得する
	getimagematte	public int getimagematte ( void )	画像がマットチャネルを持っているかどうかを返す
	getimagemattecolor	public void getimagemattecolor ( void )	画像のマット色を返す
	getimageprofile	public string getimageprofile ( string $name )	指定した名前の画像プロファイルを返す
	getimageredprimary	public array getimageredprimary ( void )	赤が一番強い点を返す
	getimagerenderingintent	public int getimagerenderingintent ( void )	画像のレンダリング方向を取得する
	getimageresolution	public array getimageresolution ( void )	画像の X 方向と Y 方向の解像度を取得する
	getimagescene	public int getimagescene ( void )	画像のシーンを取得する
	getimagesignature	public string getimagesignature ( void )	SHA-256 メッセージダイジェストを生成する
	getimagetype	public int getimagetype ( void )	画像の型を取得する
	getimageunits	public int getimageunits ( void )	画像の解像度の単位を取得する
	getimagewhitepoint	public array getimagewhitepoint ( void )	色度が白い点を返す
	getimagewidth	public int getimagewidth ( void )	画像の幅を返す
	getpackagename	public string getpackagename ( void )	GraphicsMagick パッケージ名を返す
	getquantumdepth	public array getquantumdepth ( void )	Gmagick quantum depth を取得する
	getreleasedate	public string getreleasedate ( void )	GraphicsMagick のリリース日を返す
	getsamplingfactors	public array getsamplingfactors ( void )	水平方向および垂直方向のサンプリング係数を取得する
	getsize	public array getsize ( void )	Gmagick オブジェクトのサイズを取得する
	getversion	public array getversion ( void )	GraphicsMagick API のバージョンを返す
	hasnextimage	public mixed hasnextimage ( void )	オブジェクトが次の画像を保持しているかどうかを調べる
	haspreviousimage	public mixed haspreviousimage ( void )	オブジェクトが前の画像を保持しているかどうかを調べる
	implodeimage	public mixed implodeimage ( float $radius )	新しい画像をコピーとして作成する
	labelimage	public mixed labelimage ( string $label )	ラベルを画像に追加する
	levelimage	public mixed levelimage ( float $blackPoint , float $gamma , float $whitePoint [, int $channel = Gmagick::CHANNEL_DEFAULT ] )	画像のレベルを調節する
	magnifyimage	public mixed magnifyimage ( void )	画像を二倍に比例拡大する
	mapimage	public Gmagick mapimage ( gmagick $gmagick , bool $dither )	画像の色を、参照画像の中の最も近い色に置き換える
	medianfilterimage	public void medianfilterimage ( float $radius )	デジタルフィルタを適用する
	minifyimage	public void minifyimage ( void )	画像をその半分のサイズに比例縮小する
	modulateimage	public void modulateimage ( float $brightness , float $saturation , float $hue )	明度、彩度、色相を制御する
	motionblurimage	public void motionblurimage ( float $radius , float $sigma , float $angle )	モーションブラーをシミュレートする
	newimage	public void newimage ( int $width , int $height , string $background [, string $format ] )	新しい画像を作成する
	nextimage	public bool nextimage ( void )	次の画像に移動する
	normalizeimage	public void normalizeimage ([ int $channel ] )	カラー画像のコントラストを強調する
	oilpaintimage	public void oilpaintimage ( float $radius )	油絵をシミュレートする
	previousimage	public bool previousimage ( void )	オブジェクト内の前の画像に移動する
	profileimage	public void profileimage ( string $name , string $profile )	画像のプロファイルを追加あるいは削除する
	quantizeimage	public void quantizeimage ( int $numColors , int $colorspace , int $treeDepth , bool $dither , bool $measureError )	参照画像内の色を解析する
	quantizeimages	public void quantizeimages ( int $numColors , int $colorspace , int $treeDepth , bool $dither , bool $measureError )	画像シーケンス内の色を解析する
	queryfontmetrics	public array queryfontmetrics ( GmagickDraw $draw , string $text )	フォントメトリクスを表す配列を返す
	queryfonts	public array queryfonts ([ string $pattern = "*" ] )	設定したフォントを返す
	queryformats	public array queryformats ([ string $pattern = "*" ] )	Gmagick がサポートするフォーマットを返す
	radialblurimage	public void radialblurimage ( float $angle [, int $channel = Gmagick::CHANNEL_DEFAULT ] )	画像にラジアルブラーを施す
	raiseimage	public void raiseimage ( int $width , int $height , int $x , int $y , bool $raise )	三次元のボタン風の効果をシミュレートする
	read	public void read ( string $filename )	ファイルから画像を読み込む
	readimage	public void readimage ( string $filename )	ファイルから画像を読み込む
	readimageblob	public void readimageblob ( string $imageContents [, string $filename ] )	バイナリ文字列から画像を読み込む
	readimagefile	public void readimagefile ( resource $fp [, string $filename ] )	オープンしているファイルハンドルから画像を読み込む
	reducenoiseimage	public void reducenoiseimage ( float $radius )	画像の輪郭をなめらかにする
	removeimage	public void removeimage ( void )	画像リストから画像を削除する
	removeimageprofile	public string removeimageprofile ( string $name )	指定した名前の画像プロファイルを削除して返す
	resampleimage	public void resampleimage ( float $xResolution , float $yResolution , int $filter , float $blur )	画像を指定した解像度にリサンプリングする
	resizeimage	public void resizeimage ( int $width , int $height , int $filter , float $blur [, bool $fit = false ] )	画像のサイズを変更する
	rollimage	public void rollimage ( int $x , int $y )	画像を補正する
	rotateimage	public Gmagick rotateimage ( mixed $color , float $degrees )	画像を回転する
	scaleimage	public Gmagick scaleimage ( int $width , int $height [, bool $fit = false ] )	画像のサイズを変更する
	separateimagechannel	public Gmagick separateimagechannel ( int $channel )	画像からチャネルを分離する
	setfilename	public Gmagick setfilename ( string $filename )	画像を読み書きする前にファイル名を設定する
	setimagebackgroundcolor	public Gmagick setimagebackgroundcolor ( GmagickPixel $color )	画像の背景色を設定する
	setimageblueprimary	public Gmagick setimageblueprimary ( float $x , float $y )	青が一番強い点を設定する
	setimagebordercolor	public Gmagick setimagebordercolor ( GmagickPixel $color )	画像の前景色を設定する
	setimagechanneldepth	public Gmagick setimagechanneldepth ( int $channel , int $depth )	特定の画像チャネルの深度を設定する
	setimagecolorspace	public Gmagick setimagecolorspace ( int $colorspace )	画像の色空間を設定する
	setimagecompose	public Gmagick setimagecompose ( int $composite )	画像の合成演算子を設定する
	setimagedelay	public Gmagick setimagedelay ( int $delay )	画像の遅延を設定する
	setimagedepth	public Gmagick setimagedepth ( int $depth )	画像の深度を設定する
	setimagedispose	public Gmagick setimagedispose ( int $disposeType )	画像の配置方法を設定する
	setimagefilename	public Gmagick setimagefilename ( string $filename )	シーケンス内の特定の画像のファイル名を設定する
	setimageformat	public Gmagick setimageformat ( string $imageFormat )	特定の画像のフォーマットを設定する
	setimagegamma	public Gmagick setimagegamma ( float $gamma )	画像のガンマを設定する
	setimagegreenprimary	public Gmagick setimagegreenprimary ( float $x , float $y )	緑が一番強い点を設定する
	setimageindex	public Gmagick setimageindex ( int $index )	画像リスト内でのイテレータの位置を、index パラメータで指定した場所に設定する
	setimageinterlacescheme	public Gmagick setimageinterlacescheme ( int $interlace )	画像のインターレース手法を設定する
	setimageiterations	public Gmagick setimageiterations ( int $iterations )	画像の反復を設定する
	setimageprofile	public Gmagick setimageprofile ( string $name , string $profile )	指定した名前の画像プロファイルを Gmagick オブジェクトに追加する
	setimageredprimary	public Gmagick setimageredprimary ( float $x , float $y )	赤が一番強い点を設定する
	setimagerenderingintent	public Gmagick setimagerenderingintent ( int $rendering_intent )	画像のレンダリング方向を設定する
	setimageresolution	public Gmagick setimageresolution ( float $xResolution , float $yResolution )	画像の解像度を設定する
	setimagescene	public Gmagick setimagescene ( int $scene )	画像のシーンを設定する
	setimagetype	public Gmagick setimagetype ( int $imgType )	画像の型を設定する
	setimageunits	public Gmagick setimageunits ( int $resolution )	画像の解像度の単位を設定する
	setimagewhitepoint	public Gmagick setimagewhitepoint ( float $x , float $y )	画像の色度が白い点を設定する
	setsamplingfactors	public Gmagick setsamplingfactors ( array $factors )	画像のサンプリング係数を設定する
	setsize	public Gmagick setsize ( int $columns , int $rows )	Gmagick オブジェクトのサイズを設定する
	shearimage	public Gmagick shearimage ( mixed $color , float $xShear , float $yShear )	平行四辺形を作成する
	solarizeimage	public Gmagick solarizeimage ( int $threshold )	画像にソラリゼーション効果を適用する
	spreadimage	public Gmagick spreadimage ( float $radius )	ブロック内の各ピクセルをランダムに移動する
	stripimage	public Gmagick stripimage ( void )	画像からすべてのプロパティやコメントを除去する
	swirlimage	public Gmagick swirlimage ( float $degrees )	画像の中心から、ピクセルを渦巻状にする
	thumbnailimage	public Gmagick thumbnailimage ( int $width , int $height [, bool $fit = false ] )	画像のサイズを変更する
	trimimage	public Gmagick trimimage ( float $fuzz )	画像の輪郭を削除する
	write	public void write ( string $filename )	画像を指定したファイル名で書き出す
	writeimage	public Gmagick writeimage ( string $filename [, bool $all_frames = false ] )	画像を指定したファイル名で書き出す
GmagickDraw	annotate	public GmagickDraw annotate ( float $x , float $y , string $text )	画像の上にテキストを描画する
	arc	public GmagickDraw arc ( float $sx , float $sy , float $ex , float $ey , float $sd , float $ed )	弧を描く
	bezier	public GmagickDraw bezier ( array $coordinate_array )	ベジエ曲線を描く
	ellipse	public GmagickDraw ellipse ( float $ox , float $oy , float $rx , float $ry , float $start , float $end )	楕円を画像上に描く
	getfillcolor	public void getfillcolor ( void )	塗りつぶし色を返す
	getfillopacity	public float getfillopacity ( void )	描画に使う不透明度を返す
	getfont	public string getfont ( void )	フォントを返す
	getfontsize	public float getfontsize ( void )	フォントのポイント数を返す
	getfontstyle	public int getfontstyle ( void )	フォントスタイルを返す
	getfontweight	public int getfontweight ( void )	フォントのウェイトを返す
	getstrokecolor	public void getstrokecolor ( void )	オブジェクトの輪郭の描画に使う色を返す
	getstrokeopacity	public float getstrokeopacity ( void )	オブジェクトの輪郭の不透明度を返す
	getstrokewidth	public float getstrokewidth ( void )	オブジェクトの輪郭の描画に使う線の幅を返す
	gettextdecoration	public int gettextdecoration ( void )	テキストのデコレーションを返す
	gettextencoding	public string gettextencoding ( void )	テキストのアノテーションで使うコードセットを返す
	line	public GmagickDraw line ( float $sx , float $sy , float $ex , float $ey )	直線を描く
	point	public GmagickDraw point ( float $x , float $y )	点を描く
	polygon	public GmagickDraw polygon ( array $coordinates )	多角形を描く
	polyline	public GmagickDraw polyline ( array $coordinate_array )	ポリラインを描く
	rectangle	public GmagickDraw rectangle ( float $x1 , float $y1 , float $x2 , float $y2 )	矩形を描く
	rotate	public GmagickDraw rotate ( float $degrees )	指定した回転角を現在の座標空間に適用する
	roundrectangle	public GmagickDraw roundrectangle ( float $x1 , float $y1 , float $x2 , float $y2 , float $rx , float $ry )	角が丸い矩形を描く
	scale	public GmagickDraw scale ( float $x , float $y )	倍率を調整する
	setfillcolor	public GmagickDraw setfillcolor ( string $color )	オブジェクトの塗りつぶしに使う色を設定する
	setfillopacity	public GmagickDraw setfillopacity ( float $fill_opacity )	不透明度を設定する
	setfont	public GmagickDraw setfont ( string $font )	テキストのアノテーションで使うフォントの完全な名前を設定する
	setfontsize	public GmagickDraw setfontsize ( float $pointsize )	テキストのアノテーションで使うフォントのポイント数を設定する
	setfontstyle	public GmagickDraw setfontstyle ( int $style )	テキストのアノテーションで使うフォントのスタイルを設定する
	setfontweight	public GmagickDraw setfontweight ( int $weight )	フォントのウェイトを設定する
	setstrokecolor	public GmagickDraw setstrokecolor ( GmagickPixel $color )	オブジェクトの輪郭の描画に使う色を設定する
	setstrokeopacity	public GmagickDraw setstrokeopacity ( float $stroke_opacity )	オブジェクトの輪郭の不透明度を設定する
	setstrokewidth	public GmagickDraw setstrokewidth ( float $width )	オブジェクトの輪郭の描画に使う線の幅を設定する
	settextdecoration	public GmagickDraw settextdecoration ( int $decoration )	デコレーションを設定する
	settextencoding	public GmagickDraw settextencoding ( string $encoding )	テキストのコードセットを設定する
GmagickPixel	__construct	public __construct ([ string $color ] )	GmagickPixel のコンストラクタ
	getcolor	public mixed getcolor ([ bool $as_array [, bool $normalize_array ]] )	色を返す
	getcolorcount	public int getcolorcount ( void )	この色の色カウントを返す
	getcolorvalue	public float getcolorvalue ( int $color )	指定した色チャネルの正規化した値を取得する
	setcolor	public GmagickPixel setcolor ( string $color )	色を設定する
	setcolorvalue	public GmagickPixel setcolorvalue ( int $color , float $value )	色チャネルの正規化した値を設定する
HaruAnnotation	setBorderStyle	bool setBorderStyle ( float $width , int $dash_on , int $dash_off )	アノテーションの枠の形式を設定する
	setHighlightMode	bool setHighlightMode ( int $mode )	アノテーションの強調モードを設定する
	setIcon	bool setIcon ( int $icon )	アノテーションのアイコンの形式を設定する
	setOpened	bool setOpened ( bool $opened )	アノテーションの初期状態を設定する
HaruDestination	setFit	bool setFit ( void )	ページの表示を、ウィンドウにあわせるよう設定する
	setFitB	bool setFitB ( void )	ページの表示を、ページのバウンディングボックスをウィンドウにあわせるよう設定する
	setFitBH	bool setFitBH ( float $top )	ページの表示を、バウンディングボックスの幅にあわせるよう設定する
	setFitBV	bool setFitBV ( float $left )	ページの表示を、バウンディングボックスの高さにあわせるよう設定する
	setFitH	bool setFitH ( float $top )	ページの表示を、ウィンドウの幅にあわせるよう設定する
	setFitR	bool setFitR ( float $left , float $bottom , float $right , float $top )	ページの表示を、指定した矩形にあわせるよう設定する
	setFitV	bool setFitV ( float $left )	ページの表示を、ウィンドウの高さにあわせるよう設定する
	setXYZ	bool setXYZ ( float $left , float $top , float $zoom )	ページの表示を設定する
HaruDoc	addPage	object addPage ( void )	新しいページをドキュメントに追加する
	addPageLabel	bool addPageLabel ( int $first_page , int $style , int $first_num [, string $prefix = "" ] )	指定した範囲のページにおけるページラベルの形式を設定する
	__construct	__construct ( void )	新しい HaruDoc のインスタンスを作成する
	createOutline	object createOutline ( string $title [, object $parent_outline [, object $encoder ]] )	HaruOutline のインスタンスを作成する
	getCurrentEncoder	object getCurrentEncoder ( void )	ドキュメントが現在使用している HaruEncoder を取得する
	getCurrentPage	object getCurrentPage ( void )	ドキュメントの現在のページを返す
	getEncoder	object getEncoder ( string $encoding )	指定したエンコーディングの HaruEncoder のインスタンスを取得する
	getFont	object getFont ( string $fontname [, string $encoding ] )	HaruFont のインスタンスを取得する
	getInfoAttr	string getInfoAttr ( int $type )	指定したドキュメント属性の現在の値を取得する
	getPageLayout	int getPageLayout ( void )	現在のページレイアウトを取得する
	getPageMode	int getPageMode ( void )	現在のページモードを取得する
	getStreamSize	int getStreamSize ( void )	一時ストリームの大きさを取得する
	insertPage	object insertPage ( object $page )	指定したページの直前に新しいページを挿入する
	loadJPEG	object loadJPEG ( string $filename )	JPEG 画像を読み込む
	loadPNG	object loadPNG ( string $filename [, bool $deferred = false ] )	PNG 画像を読み込み、HaruImage のインスタンスを返す
	loadRaw	object loadRaw ( string $filename , int $width , int $height , int $color_space )	RAW 画像を読み込む
	loadTTC	string loadTTC ( string $fontfile , int $index [, bool $embed = false ] )	TTC ファイルから指定したインデックスのフォントを読み込む
	loadTTF	string loadTTF ( string $fontfile [, bool $embed = false ] )	TTF フォントファイルを読み込む
	loadType1	string loadType1 ( string $afmfile [, string $pfmfile ] )	Type1 フォントを読み込む
	output	bool output ( void )	ドキュメントデータを出力バッファに書き出す
	readFromStream	string readFromStream ( int $bytes )	データを一時ストリームから読み込む
	resetError	bool resetError ( void )	ドキュメントハンドルのエラーの状態をリセットする
	resetStream	bool resetStream ( void )	一時ストリームを巻き戻す
	save	bool save ( string $file )	ドキュメントを指定したファイルに保存する
	saveToStream	bool saveToStream ( void )	ドキュメントを一時ストリームに保存する
	setCompressionMode	bool setCompressionMode ( int $mode )	ドキュメントの圧縮モードを設定する
	setCurrentEncoder	bool setCurrentEncoder ( string $encoding )	ドキュメントの現在のエンコーダを設定する
	setEncryptionMode	bool setEncryptionMode ( int $mode [, int $key_len = 5 ] )	ドキュメントの暗号化モードを設定する
	setInfoAttr	bool setInfoAttr ( int $type , string $info )	ドキュメントの情報属性を設定する
	setInfoDateAttr	bool setInfoDateAttr ( int $type , int $year , int $month , int $day , int $hour , int $min , int $sec , string $ind , int $off_hour , int $off_min )	ドキュメントの情報属性に日付と時刻を設定する
	setOpenAction	bool setOpenAction ( object $destination )	ドキュメントを開いたときにどのページを表示するかを定義する
	setPageLayout	bool setPageLayout ( int $layout )	ページをどのように表示するかを設定する
	setPageMode	bool setPageMode ( int $mode )	ドキュメントをどのように表示するかを設定する
	setPagesConfiguration	bool setPagesConfiguration ( int $page_per_pages )	ページ群単位のページ数を設定する
	setPassword	bool setPassword ( string $owner_password , string $user_password )	ドキュメントに所有者パスワードおよびユーザーパスワードを設定する
	setPermission	bool setPermission ( int $permission )	ドキュメントの使用権限を設定する
	useCNSEncodings	bool useCNSEncodings ( void )	簡体字中国語エンコーディングを有効にする
	useCNSFonts	bool useCNSFonts ( void )	組み込みの簡体字中国語フォントを有効にする
	useCNTEncodings	bool useCNTEncodings ( void )	繁体字中国語エンコーディングを有効にする
	useCNTFonts	bool useCNTFonts ( void )	組み込みの繁体字中国語フォントを有効にする
	useJPEncodings	bool useJPEncodings ( void )	日本語エンコーディングを有効にする
	useJPFonts	bool useJPFonts ( void )	組み込みの日本語フォントを有効にする
	useKREncodings	bool useKREncodings ( void )	韓国/朝鮮語エンコーディングを有効にする
	useKRFonts	bool useKRFonts ( void )	組み込みの韓国/朝鮮語フォントを有効にする
HaruEncoder	getByteType	int getByteType ( string $text , int $index )	テキスト内のバイトの型を取得する
	getType	int getType ( void )	エンコーダの型を取得する
	getUnicode	int getUnicode ( int $character )	指定した文字を unicode に変換する
	getWritingMode	int getWritingMode ( void )	エンコーダの書き込みモードを取得する
HaruException	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
HaruFont	getAscent	int getAscent ( void )	フォントの垂直 ascent を取得する
	getCapHeight	int getCapHeight ( void )	大文字のベースラインからの距離を取得する
	getDescent	int getDescent ( void )	フォントの垂直 descent を取得する
	getEncodingName	string getEncodingName ( void )	エンコーディング名を取得する
	getFontName	string getFontName ( void )	フォント名を取得する
	getTextWidth	array getTextWidth ( string $text )	テキスト全体の幅、文字数、単語数および空白の数を取得する
	getUnicodeWidth	int getUnicodeWidth ( int $character )	フォントの文字の幅を取得する
	getXHeight	int getXHeight ( void )	小文字のベースラインからの距離を取得する
	measureText	int measureText ( string $text , float $width , float $font_size , float $char_space , float $word_space [, bool $word_wrap = false ] )	指定した幅に収めることのできる文字数を計算する
HaruImage	getBitsPerComponent	int getBitsPerComponent ( void )	画像の各色コンポーネントで使用するビット数を取得する
	getColorSpace	string getColorSpace ( void )	色空間の名前を取得する
	getHeight	int getHeight ( void )	画像の高さを取得する
	getSize	array getSize ( void )	画像の大きさを取得する
	getWidth	int getWidth ( void )	画像の幅を取得する
	setColorMask	bool setColorMask ( int $rmin , int $rmax , int $gmin , int $gmax , int $bmin , int $bmax )	画像の色マスクを設定する
	setMaskImage	bool setMaskImage ( object $mask_image )	画像マスクを設定する
HaruOutline	setDestination	bool setDestination ( object $destination )	アウトラインの対象を設定する
	setOpened	bool setOpened ( bool $opened )	アウトラインの初期状態を設定する
HaruPage	arc	bool arc ( float $x , float $y , float $ray , float $ang1 , float $ang2 )	現在のパスに弧を追加する
	beginText	bool beginText ( void )	テキストオブジェクトを開始し、テキストの現在位置を (0,0) に設定する
	circle	bool circle ( float $x , float $y , float $ray )	現在のパスに円を追加する
	closePath	bool closePath ( void )	現在の位置からパスの開始位置に直線を追加する
	concat	bool concat ( float $a , float $b , float $c , float $d , float $x , float $y )	現在のページの変換行列と指定した行列を連結する
	createDestination	object createDestination ( void )	新しい HaruDestination のインスタンスを作成する
	createLinkAnnotation	object createLinkAnnotation ( array $rectangle , object $destination )	新しい HaruAnnotation のインスタンスを作成する
	createTextAnnotation	object createTextAnnotation ( array $rectangle , string $text [, object $encoder ] )	新しい HaruAnnotation のインスタンスを作成する
	createURLAnnotation	object createURLAnnotation ( array $rectangle , string $url )	新しい HaruAnnotation のインスタンスを作成する
	curveTo2	bool curveTo2 ( float $x2 , float $y2 , float $x3 , float $y3 )	ベジエ曲線を現在のパスに追加する
	curveTo3	bool curveTo3 ( float $x1 , float $y1 , float $x3 , float $y3 )	ベジエ曲線を現在のパスに追加する
	curveTo	bool curveTo ( float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )	ベジエ曲線を現在のパスに追加する
	drawImage	bool drawImage ( object $image , float $x , float $y , float $width , float $height )	画像をページに表示する
	ellipse	bool ellipse ( float $x , float $y , float $xray , float $yray )	楕円を現在のパスに追加する
	endPath	bool endPath ( void )	塗りつぶしや描画を行わずに現在のパスオブジェクトを終了する
	endText	bool endText ( void )	現在のテキストオブジェクトを終了する
	eofill	bool eofill ( void )	奇偶規則を使用して現在のパスを塗りつぶす
	eoFillStroke	bool eoFillStroke ([ bool $close_path = false ] )	奇偶規則を使用して現在のパスを塗りつぶす
	fill	bool fill ( void )	ノンゼロワインディング規則を使用して現在のパスを塗りつぶす
	fillStroke	bool fillStroke ([ bool $close_path = false ] )	ノンゼロワインディング規則を使用して現在のパスを塗りつぶす
	getCharSpace	float getCharSpace ( void )	現在の文字間隔を取得する
	getCMYKFill	array getCMYKFill ( void )	現在の塗りつぶし色を取得する
	getCMYKStroke	array getCMYKStroke ( void )	現在の描画色を取得する
	getCurrentFont	object getCurrentFont ( void )	現在使用中のフォントを取得する
	getCurrentFontSize	float getCurrentFontSize ( void )	現在のフォントのサイズを取得する
	getCurrentPos	array getCurrentPos ( void )	パスの描画用の現在の位置を取得する
	getCurrentTextPos	array getCurrentTextPos ( void )	テキストの印字用の現在の位置を取得する
	getDash	array getDash ( void )	現在の破線のパターンを取得する
	getFillingColorSpace	int getFillingColorSpace ( void )	現在の塗りつぶしの色空間を取得する
	getFlatness	float getFlatness ( void )	ページの平坦度を取得する
	getGMode	int getGMode ( void )	現在のグラフィックスモードを取得する
	getGrayFill	float getGrayFill ( void )	現在の塗りつぶし色を取得する
	getGrayStroke	float getGrayStroke ( void )	現在の描画色を取得する
	getHeight	float getHeight ( void )	ページの高さを取得する
	getHorizontalScaling	float getHorizontalScaling ( void )	現在の水平方向の拡大率を取得する
	getLineCap	int getLineCap ( void )	現在のパスの終端の形式を取得する
	getLineJoin	int getLineJoin ( void )	現在のパスの角の形式を取得する
	getLineWidth	float getLineWidth ( void )	現在の線幅を取得する
	getMiterLimit	float getMiterLimit ( void )	マイターリミットの値を取得する
	getRGBFill	array getRGBFill ( void )	現在の塗りつぶし色を取得する
	getRGBStroke	array getRGBStroke ( void )	現在の描画色を取得する
	getStrokingColorSpace	int getStrokingColorSpace ( void )	現在の描画の色空間を取得する
	getTextLeading	float getTextLeading ( void )	現在の行間隔の値を取得する
	getTextMatrix	array getTextMatrix ( void )	そのページの現在のテキスト変換行列を取得する
	getTextRenderingMode	int getTextRenderingMode ( void )	現在のテキストのレンダリングモードを取得する
	getTextRise	float getTextRise ( void )	現在のテキストライズの値を取得する
	getTextWidth	float getTextWidth ( string $text )	現在のフォントサイズ、文字エンコーディングおよび単語間隔を使用してテキストの幅を取得する
	getTransMatrix	array getTransMatrix ( void )	そのページの現在の変換行列を取得する
	getWidth	float getWidth ( void )	ページの幅を取得する
	getWordSpace	float getWordSpace ( void )	現在の単語間隔の値を取得する
	lineTo	bool lineTo ( float $x , float $y )	現在位置から指定した位置まで直線を描画する
	measureText	int measureText ( string $text , float $width [, bool $wordwrap = false ] )	指定した幅の中に配置できる文字の数を計算する
	moveTextPos	bool moveTextPos ( float $x , float $y [, bool $set_leading = false ] )	テキストの位置を、指定したオフセットに移動する
	moveTo	bool moveTo ( float $x , float $y )	新しい描画パスの開始位置を設定する
	moveToNextLine	bool moveToNextLine ( void )	テキストの位置を次の行の行頭に移動する
	rectangle	bool rectangle ( float $x , float $y , float $width , float $height )	現在のパスに矩形を追加する
	setCharSpace	bool setCharSpace ( float $char_space )	ページの文字間隔を設定する
	setCMYKFill	bool setCMYKFill ( float $c , float $m , float $y , float $k )	ページの塗りつぶし色を設定する
	setCMYKStroke	bool setCMYKStroke ( float $c , float $m , float $y , float $k )	ページの描画色を設定する
	setDash	bool setDash ( array $pattern , int $phase )	ページの破線パターンを設定する
	setFlatness	bool setFlatness ( float $flatness )	ページの平坦度を設定する
	setFontAndSize	bool setFontAndSize ( object $font , float $size )	ページのフォントおよびフォントサイズを設定する
	setGrayFill	bool setGrayFill ( float $value )	ページの塗りつぶし色を設定する
	setGrayStroke	bool setGrayStroke ( float $value )	ページの描画色を設定する
	setHeight	bool setHeight ( float $height )	ページの高さを設定する
	setHorizontalScaling	bool setHorizontalScaling ( float $scaling )	ページの横方向の拡大率を設定する
	setLineCap	bool setLineCap ( int $cap )	パスの終端の形式を設定する
	setLineJoin	bool setLineJoin ( int $join )	そのページのパスの角の形式を設定する
	setLineWidth	bool setLineWidth ( float $width )	ページの線幅を設定する
	setMiterLimit	bool setMiterLimit ( float $limit )	ページのマイターリミットの現在値を設定する
	setRGBFill	bool setRGBFill ( float $r , float $g , float $b )	ページの塗りつぶし色を設定する
	setRGBStroke	bool setRGBStroke ( float $r , float $g , float $b )	ページの描画色を設定する
	setRotate	bool setRotate ( int $angle )	ページの回転角度を設定する
	setSize	bool setSize ( int $size , int $direction )	ページのサイズおよび方向を設定する
	setSlideShow	bool setSlideShow ( int $type , float $disp_time , float $trans_time )	ページの移動方式を設定する
	setTextLeading	bool setTextLeading ( float $text_leading )	ページのテキストリーディング (行間隔) を設定する
	setTextMatrix	bool setTextMatrix ( float $a , float $b , float $c , float $d , float $x , float $y )	そのページの現在のテキスト変換行列を設定する
	setTextRenderingMode	bool setTextRenderingMode ( int $mode )	そのページの現在のテキストのレンダリングモードを設定する
	setTextRise	bool setTextRise ( float $rise )	現在のテキストライズの値を設定する
	setWidth	bool setWidth ( float $width )	ページの幅を設定する
	setWordSpace	bool setWordSpace ( float $word_space )	ページの単語間隔を設定する
	showText	bool showText ( string $text )	ページの現在位置にテキストを表示する
	showTextNextLine	bool showTextNextLine ( string $text [, float $word_space = 0 [, float $char_space = 0 ]] )	現在位置を次の行の行頭に移動してテキストを表示する
	stroke	bool stroke ([ bool $close_path = false ] )	現在のパスを描画する
	textOut	bool textOut ( float $x , float $y , string $text )	テキストを指定した位置に表示する
	textRect	bool textRect ( float $left , float $top , float $right , float $bottom , string $text [, int $align = HaruPage::TALIGN_LEFT ] )	指定した領域内にテキストを表示する
HttpDeflateStream	__construct	public __construct ([ int $flags = 0 ] )	HttpDeflateStream クラスのコンストラクタ
	factory	static public HttpDeflateStream factory ([ int $flags = 0 [, string $class_name = "HttpDeflateStream" ]] )	HttpDeflateStream クラスのファクトリ
	finish	public string finish ([ string $data ] )	圧縮ストリームを終了する
	flush	public string flush ([ string $data ] )	圧縮ストリームをフラッシュする
	update	public string update ( string $data )	圧縮ストリームを更新する
HttpInflateStream	__construct	public __construct ([ int $flags = 0 ] )	HttpInflateStream クラスのコンストラクタ
	factory	public HttpInflateStream factory ([ int $flags = 0 [, string $class_name = "HttpInflateStream" ]] )	HttpInflateStream クラスのファクトリ
	finish	public string finish ([ string $data ] )	展開ストリームを終了する
	flush	public string flush ([ string $data ] )	展開ストリームをフラッシュする
	update	public string update ( string $data )	展開ストリームを更新する
HttpMessage	addHeaders	public void addHeaders ( array $headers [, bool $append = false ] )	ヘッダを追加する
	__construct	public __construct ([ string $message ] )	HttpMessage のコンストラクタ
	detach	public HttpMessage detach ( void )	HttpMessage をデタッチする
	factory	static public HttpMessage factory ([ string $raw_message [, string $class_name = "HttpMessage" ]] )	文字列から HttpMessage を作成する
	fromEnv	static public HttpMessage fromEnv ( int $message_type [, string $class_name = "HttpMessage" ] )	環境から HttpMessage を作成する
	fromString	static public HttpMessage fromString ([ string $raw_message [, string $class_name = "HttpMessage" ]] )	文字列から HttpMessage を作成する
	getBody	public string getBody ( void )	メッセージの本文を取得する
	getHeader	public string getHeader ( string $header )	ヘッダを取得する
	getHeaders	public array getHeaders ( void )	メッセージのヘッダを取得する
	getHttpVersion	public string getHttpVersion ( void )	HTTP バージョンを取得する
	getParentMessage	public HttpMessage getParentMessage ( void )	親メッセージを取得する
	getRequestMethod	public string getRequestMethod ( void )	リクエストメソッドを取得する
	getRequestUrl	public string getRequestUrl ( void )	リクエスト URL を取得する
	getResponseCode	public int getResponseCode ( void )	レスポンスコードを取得する
	getResponseStatus	public string getResponseStatus ( void )	レスポンスのステータスを取得する
	getType	public int getType ( void )	メッセージの型を取得する
	guessContentType	public string guessContentType ( string $magic_file [, int $magic_mode = MAGIC_MIME ] )	content type を推測する
	prepend	public void prepend ( HttpMessage $message [, bool $top = true ] )	メッセージを先頭に追加する
	reverse	public HttpMessage reverse ( void )	メッセージチェインを逆順にする
	send	public bool send ( void )	メッセージを送信する
	setBody	public void setBody ( string $body )	メッセージの本文を設定する
	setHeaders	public void setHeaders ( array $headers )	ヘッダを設定する
	setHttpVersion	public bool setHttpVersion ( string $version )	HTTP バージョンを設定する
	setRequestMethod	public bool setRequestMethod ( string $method )	リクエストメソッドを設定する
	setRequestUrl	public bool setRequestUrl ( string $url )	リクエスト URL を設定する
	setResponseCode	public bool setResponseCode ( int $code )	レスポンスコードを設定する
	setResponseStatus	public bool setResponseStatus ( string $status )	レスポンスのステータスを設定する
	setType	public void setType ( int $type )	メッセージの型を設定する
	toMessageTypeObject	public HttpRequest|HttpResponse toMessageTypeObject ( void )	メッセージの型に応じた HTTP オブジェクトを作成する
	toString	public string toString ([ bool $include_parent = false ] )	文字列表現を取得する
HttpQueryString	__construct	final public __construct ([ bool $global = true [, mixed $add ]] )	HttpQueryString のコンストラクタ
	get	public mixed get ([ string $key [, mixed $type = 0 [, mixed $defval = NULL [, bool $delete = false ]]]] )	クエリ文字列 (の一部) を取得する
	mod	public HttpQueryString mod ( mixed $params )	クエリ文字列の複製を変更する
	set	public string set ( mixed $params )	クエリ文字列パラメータを設定する
	singleton	static public HttpQueryString singleton ([ bool $global = true ] )	HttpQueryString のシングルトン
	toArray	public array toArray ( void )	クエリ文字列を配列で取得する
	toString	public string toString ( void )	クエリ文字列を取得する
	xlate	public bool xlate ( string $ie , string $oe )	クエリ文字列の文字セットを変更する
HttpRequest	addCookies	public bool addCookies ( array $cookies )	クッキーを追加する
	addHeaders	public bool addHeaders ( array $headers )	ヘッダを追加する
	addPostFields	public bool addPostFields ( array $post_data )	POST フィールドを追加する
	addPostFile	public bool addPostFile ( string $name , string $file [, string $content_type = "application/x-octetstream" ] )	POST ファイルを追加する
	addPutData	public bool addPutData ( string $put_data )	PUT データを追加する
	addQueryData	public bool addQueryData ( array $query_params )	クエリデータを追加する
	addRawPostData	public bool addRawPostData ( string $raw_post_data )	生の POST データを追加する
	addSslOptions	public bool addSslOptions ( array $options )	SSL オプションを追加する
	clearHistory	public void clearHistory ( void )	履歴を消去する
	__construct	public __construct ([ string $url [, int $request_method = HTTP_METH_GET [, array $options ]]] )	HttpRequest のコンストラクタ
	enableCookies	public bool enableCookies ( void )	クッキーを有効にする
	getContentType	public string getContentType ( void )	content type を取得する
	getCookies	public array getCookies ( void )	クッキーを取得する
	getHeaders	public array getHeaders ( void )	ヘッダを取得する
	getHistory	public HttpMessage getHistory ( void )	履歴を取得する
	getMethod	public int getMethod ( void )	メソッドを取得する
	getOptions	public array getOptions ( void )	オプションを取得する
	getPostFields	public array getPostFields ( void )	POST フィールドを取得する
	getPostFiles	public array getPostFiles ( void )	POST ファイルを取得する
	getPutData	public string getPutData ( void )	PUT データを取得する
	getPutFile	public string getPutFile ( void )	PUT ファイルを取得する
	getQueryData	public string getQueryData ( void )	クエリデータを取得する
	getRawPostData	public string getRawPostData ( void )	生の POST データを取得する
	getRawRequestMessage	public string getRawRequestMessage ( void )	名前のリクエストメッセージを取得する
	getRawResponseMessage	public string getRawResponseMessage ( void )	生のレスポンスメッセージを取得する
	getRequestMessage	public HttpMessage getRequestMessage ( void )	リクエストメッセージを取得する
	getResponseBody	public string getResponseBody ( void )	レスポンスの本文を取得する
	getResponseCode	public int getResponseCode ( void )	レスポンスコードを取得する
	getResponseCookies	public array getResponseCookies ([ int $flags = 0 [, array $allowed_extras ]] )	レスポンスのクッキーを取得する
	getResponseData	public array getResponseData ( void )	レスポンスデータを取得する
	getResponseHeader	public mixed getResponseHeader ([ string $name ] )	レスポンスヘッダを取得する
	getResponseInfo	public mixed getResponseInfo ([ string $name ] )	レスポンスの情報を取得する
	getResponseMessage	public HttpMessage getResponseMessage ( void )	レスポンスメッセージを取得する
	getResponseStatus	public string getResponseStatus ( void )	レスポンスのステータスを取得する
	getSslOptions	public array getSslOptions ( void )	ssl オプションを取得する
	getUrl	public string getUrl ( void )	url を取得する
	resetCookies	public bool resetCookies ([ bool $session_only = false ] )	クッキーをリセットする
	send	public HttpMessage send ( void )	リクエストを送信する
	setBody	bool setBody ([ string $request_body_data ] )	送信する本文を設定し、既に設定されている本文を上書きする
	setContentType	public bool setContentType ( string $content_type )	content type を設定する
	setCookies	public bool setCookies ([ array $cookies ] )	クッキーを設定する
	setHeaders	public bool setHeaders ([ array $headers ] )	ヘッダを設定する
	setMethod	public bool setMethod ( int $request_method )	メソッドを設定する
	setOptions	public bool setOptions ([ array $options ] )	オプションを設定する
	setPostFields	public bool setPostFields ( array $post_data )	POST フィールドを設定する
	setPostFiles	public bool setPostFiles ( array $post_files )	POST ファイルを設定する
	setPutData	public bool setPutData ([ string $put_data ] )	PUT データを設定する
	setPutFile	public bool setPutFile ([ string $file = "" ] )	PUT ファイルを設定する
	setQueryData	public bool setQueryData ( mixed $query_data )	クエリデータを設定する
	setRawPostData	public bool setRawPostData ([ string $raw_post_data ] )	生の POST データを設定する
	setSslOptions	public bool setSslOptions ([ array $options ] )	SSL オプションを設定する
	setUrl	public bool setUrl ( string $url )	URL を設定する
HttpRequestPool	attach	public bool attach ( HttpRequest $request )	HttpRequest をアタッチする
	__construct	public __construct ([ HttpRequest $request [, HttpRequest $... ]] )	HttpRequestPool のコンストラクタ
	__destruct	void __destruct ( void )	HttpRequestPool のデストラクタ
	detach	bool detach ( HttpRequest $request )	HttpRequest をデタッチする
	getAttachedRequests	array getAttachedRequests ( void )	アタッチされているリクエストを取得する
	getFinishedRequests	array getFinishedRequests ( void )	終了したリクエストを取得する
	reset	void reset ( void )	リクエストプールをリセットする
	send	bool send ( void )	すべてのリクエストを送信する
	socketPerform	protected bool socketPerform ( void )	ソケットアクションを実行する
	socketSelect	protected bool socketSelect ([ float $timeout = 0 ] )	ソケットの選択を実行する
HttpResponse	capture	static void capture ( void )	スクリプトの出力を取り込む
	getBufferSize	static int getBufferSize ( void )	バッファサイズを取得する
	getCache	static bool getCache ( void )	キャッシュを取得する
	getCacheControl	static string getCacheControl ( void )	cache control を取得する
	getContentDisposition	static string getContentDisposition ( void )	content disposition を取得する
	getContentType	static string getContentType ( void )	content type を取得する
	getData	static string getData ( void )	データを取得する
	getETag	static string getETag ( void )	ETag を取得する
	getFile	static string getFile ( void )	ファイルを取得する
	getGzip	static bool getGzip ( void )	gzip を取得する
	getHeader	static mixed getHeader ([ string $name ] )	ヘッダを取得する
	getLastModified	static int getLastModified ( void )	最終更新日時を取得する
	getRequestBody	static string getRequestBody ( void )	リクエストの本文を取得する
	getRequestBodyStream	static resource getRequestBodyStream ( void )	リクエストの本文をストリームとして取得する
	getRequestHeaders	static array getRequestHeaders ( void )	リクエストのヘッダを取得する
	getStream	static resource getStream ( void )	ストリームを取得する
	getThrottleDelay	static float getThrottleDelay ( void )	throttle delay を取得する
	guessContentType	static string guessContentType ( string $magic_file [, int $magic_mode = MAGIC_MIME ] )	content type を推測する
	redirect	static void redirect ([ string $url [, array $params [, bool $session = false [, int $status ]]]] )	リダイレクトする
	send	static bool send ([ bool $clean_ob = true ] )	レスポンスを送信する
	setBufferSize	static bool setBufferSize ( int $bytes )	バッファサイズを設定する
	setCache	static bool setCache ( bool $cache )	キャッシュを設定する
	setCacheControl	static bool setCacheControl ( string $control [, int $max_age = 0 [, bool $must_revalidate = true ]] )	cache control を設定する
	setContentDisposition	static bool setContentDisposition ( string $filename [, bool $inline = false ] )	content disposition を設定する
	setContentType	static bool setContentType ( string $content_type )	content type を設定する
	setData	static bool setData ( mixed $data )	データを設定する
	setETag	static bool setETag ( string $etag )	ETag を設定する
	setFile	static bool setFile ( string $file )	ファイルを設定する
	setGzip	static bool setGzip ( bool $gzip )	gzip を設定する
	setHeader	static bool setHeader ( string $name [, mixed $value [, bool $replace = true ]] )	ヘッダを設定する
	setLastModified	static bool setLastModified ( int $timestamp )	最終更新日時を設定する
	setStream	static bool setStream ( resource $stream )	ストリームを設定する
	setThrottleDelay	static bool setThrottleDelay ( float $seconds )	throttle delay を設定する
	status	static bool status ( int $status )	HTTP レスポンスステータスを送信する
Imagick	adaptiveBlurImage	bool adaptiveBlurImage ( float $radius , float $sigma [, int $channel = Imagick::CHANNEL_DEFAULT ] )	adaptive blur (順応性にじみ) フィルタを画像に追加する
	adaptiveResizeImage	bool adaptiveResizeImage ( int $columns , int $rows [, bool $bestfit = false ] )	データに依存する三角測量にもとづいて画像のサイズを変更する
	adaptiveSharpenImage	bool adaptiveSharpenImage ( float $radius , float $sigma [, int $channel = Imagick::CHANNEL_DEFAULT ] )	順応して画像をシャープにする
	adaptiveThresholdImage	bool adaptiveThresholdImage ( int $width , int $height , int $offset )	輝度の範囲にもとづいて各ピクセルの閾値を選択する
	addImage	bool addImage ( Imagick $source )	新しい画像を Imagick オブジェクトの画像リストに追加する
	addNoiseImage	bool addNoiseImage ( int $noise_type [, int $channel = Imagick::CHANNEL_DEFAULT ] )	ランダムなノイズを画像に追加する
	affineTransformImage	bool affineTransformImage ( ImagickDraw $matrix )	画像を変換する
	animateImages	bool animateImages ( string $x_server )	画像を動かす
	annotateImage	bool annotateImage ( ImagickDraw $draw_settings , float $x , float $y , float $angle , string $text )	画像にテキストによる注記を加える
	appendImages	Imagick appendImages ( bool $stack = false )	画像群を追加する
	averageImages	Imagick averageImages ( void )	画像群を平均化する
	blackThresholdImage	bool blackThresholdImage ( mixed $threshold )	閾値に満たないすべてのピクセルを黒にする
	blurImage	bool blurImage ( float $radius , float $sigma [, int $channel ] )	blur (にじみ) フィルタを画像に追加する
	borderImage	bool borderImage ( mixed $bordercolor , int $width , int $height )	画像の周りを枠線で囲む
	charcoalImage	bool charcoalImage ( float $radius , float $sigma )	木炭画をシミュレートする
	chopImage	bool chopImage ( int $width , int $height , int $x , int $y )	画像の一部を取り除き、切り詰める
	clear	bool clear ( void )	Imagick オブジェクトに関連付けられたすべてのリソースをクリアする
	clipImage	bool clipImage ( void )	8BIM プロファイルの最初のパスにそって切り取る
	clipPathImage	bool clipPathImage ( string $pathname , bool $inside )	8BIM プロファイルの指定した名前のパスにそって切り取る
	clone	Imagick clone ( void )	Imagick オブジェクトの完全なコピーを作成する
	clutImage	bool clutImage ( Imagick $lookup_table [, float $channel = Imagick::CHANNEL_DEFAULT ] )	画像の色を置き換える
	coalesceImages	Imagick coalesceImages ( void )	複数の画像を合成する
	colorFloodfillImage	bool colorFloodfillImage ( mixed $fill , float $fuzz , mixed $bordercolor , int $x , int $y )	対象にマッチする任意の点の色の値を変更する
	colorizeImage	bool colorizeImage ( mixed $colorize , mixed $opacity )	塗りつぶし色と画像を混合する
	combineImages	Imagick combineImages ( int $channelType )	ひとつあるいは複数の画像をひとつにまとめる
	commentImage	bool commentImage ( string $comment )	コメントを画像に追加する
	compareImageChannels	array compareImageChannels ( Imagick $image , int $channelType , int $metricType )	ひとつあるいは複数の画像の差を返す
	compareImageLayers	Imagick compareImageLayers ( int $method )	複数の画像の中で最大の境界範囲を返す
	compareImages	array compareImages ( Imagick $compare , int $metric )	ある画像を再構築された画像と比較する
	compositeImage	bool compositeImage ( Imagick $composite_object , int $composite , int $x , int $y [, int $channel = Imagick::CHANNEL_ALL ] )	ある画像を別の画像に合成する
	__construct	__construct ( mixed $files )	Imagick のコンストラクタ
	contrastImage	bool contrastImage ( bool $sharpen )	画像のコントラストを変更する
	contrastStretchImage	bool contrastStretchImage ( float $black_point , float $white_point [, int $channel = Imagick::CHANNEL_ALL ] )	カラー画像のコントラストを強調する
	convolveImage	bool convolveImage ( array $kernel [, int $channel = Imagick::CHANNEL_ALL ] )	独自の畳み込み関数を画像に適用する
	cropImage	bool cropImage ( int $width , int $height , int $x , int $y )	画像の一部を抽出する
	cropThumbnailImage	bool cropThumbnailImage ( int $width , int $height )	切り取ってサムネイルを作成する
	current	Imagick current ( void )	現在の Imagick オブジェクトへの参照を返す
	cycleColormapImage	bool cycleColormapImage ( int $displace )	画像のカラーマップを移動する
	decipherImage	bool decipherImage ( string $passphrase )	画像を復号する
	deconstructImages	Imagick deconstructImages ( void )	画像間の特定のピクセルの差を返す
	deleteImageArtifact	bool deleteImageArtifact ( string $artifact )	画像のアーチファクトを削除する
	deskewImage	public bool deskewImage ( float $threshold )	傾きを除去する
	despeckleImage	bool despeckleImage ( void )	画像内のスペックルノイズを軽減する
	destroy	bool destroy ( void )	Imagick オブジェクトを破棄する
	displayImage	bool displayImage ( string $servername )	画像を表示する
	displayImages	bool displayImages ( string $servername )	画像あるいは画像シーケンスを表示する
	distortImage	bool distortImage ( int $method , array $arguments , bool $bestfit )	さまざまな方式で画像を歪める
	drawImage	bool drawImage ( ImagickDraw $draw )	現在の画像上の ImagickDraw オブジェクトをレンダリングする
	edgeImage	bool edgeImage ( float $radius )	画像の輪郭を強調する
	embossImage	bool embossImage ( float $radius , float $sigma )	グレースケール画像に三次元効果を施して返す
	encipherImage	bool encipherImage ( string $passphrase )	画像を暗号化する
	enhanceImage	bool enhanceImage ( void )	ノイジーな画像の品質を向上させる
	equalizeImage	bool equalizeImage ( void )	画像ヒストグラムを均等化する
	evaluateImage	bool evaluateImage ( int $op , float $constant [, int $channel = Imagick::CHANNEL_ALL ] )	式を画像に適用する
	exportImagePixels	public array exportImagePixels ( int $x , int $y , int $width , int $height , string $map , int $STORAGE )	画像の生のピクセルをエクスポートする
	extentImage	bool extentImage ( int $width , int $height , int $x , int $y )	画像のサイズを設定する
	flattenImages	Imagick flattenImages ( void )	画像シーケンスをマージする
	flipImage	bool flipImage ( void )	垂直方向に反転した画像を作成する
	floodFillPaintImage	bool floodFillPaintImage ( mixed $fill , float $fuzz , mixed $target , int $x , int $y , bool $invert [, int $channel = Imagick::CHANNEL_DEFAULT ] )	対象にマッチする任意のピクセルの値を変更する
	flopImage	bool flopImage ( void )	水平方向に反転した画像を作成する
	frameImage	bool frameImage ( mixed $matte_color , int $width , int $height , int $inner_bevel , int $outer_bevel )	三次元の枠線をシミュレートする
	functionImage	public bool functionImage ( int $function , array $arguments [, int $channel = Imagick::CHANNEL_DEFAULT ] )	画像に関数を適用する
	fxImage	Imagick fxImage ( string $expression [, int $channel = Imagick::CHANNEL_ALL ] )	式を画像の各ピクセルに適用する
	gammaImage	bool gammaImage ( float $gamma [, int $channel = Imagick::CHANNEL_ALL ] )	画像をガンマ補正する
	gaussianBlurImage	bool gaussianBlurImage ( float $radius , float $sigma [, int $channel = Imagick::CHANNEL_ALL ] )	画像をぼかす
	getColorspace	int getColorspace ( void )	色空間を取得する
	getCompression	int getCompression ( void )	オブジェクトの圧縮形式を取得する
	getCompressionQuality	int getCompressionQuality ( void )	オブジェクトの圧縮品質を取得する
	getCopyright	string getCopyright ( void )	ImageMagick API の著作権情報を文字列で返す
	getFilename	string getFilename ( void )	画像シーケンスに関連付けられたファイル名を取得する
	getFont	string getFont ( void )	フォントを取得する
	getFormat	string getFormat ( void )	Imagick オブジェクトのフォーマットを取得する
	getGravity	int getGravity ( void )	gravity を取得する
	getHomeURL	string getHomeURL ( void )	ImageMagick のホーム URL を返す
	getImage	Imagick getImage ( void )	新しい Imagick オブジェクトを返す
	getImageAlphaChannel	int getImageAlphaChannel ( void )	画像のアルファチャネルを取得する
	getImageArtifact	string getImageArtifact ( string $artifact )	画像のアーチファクトを取得する
	getImageBackgroundColor	ImagickPixel getImageBackgroundColor ( void )	画像の背景色を返す
	getImageBlob	string getImageBlob ( void )	画像シーケンスを blob で返す
	getImageBluePrimary	array getImageBluePrimary ( void )	青が一番強い点を返す
	getImageBorderColor	ImagickPixel getImageBorderColor ( void )	画像の前景色を返す
	getImageChannelDepth	int getImageChannelDepth ( int $channel )	特定の画像チャネルの深度を返す
	getImageChannelDistortion	float getImageChannelDistortion ( Imagick $reference , int $channel , int $metric )	画像のチャネルを再構築した画像と比較する
	getImageChannelDistortions	float getImageChannelDistortions ( Imagick $reference , int $metric [, int $channel = Imagick::CHANNEL_DEFAULT ] )	チャネルの歪みを取得する
	getImageChannelExtrema	array getImageChannelExtrema ( int $channel )	ひとつあるいは複数の画像チャネルの極値を取得する
	getImageChannelKurtosis	public array getImageChannelKurtosis ([ int $channel = Imagick::CHANNEL_DEFAULT ] )	getImageChannelKurtosis
	getImageChannelMean	array getImageChannelMean ( int $channel )	平均値と標準偏差を取得する
	getImageChannelRange	array getImageChannelRange ( int $channel )	チャネルの範囲を取得する
	getImageChannelStatistics	array getImageChannelStatistics ( void )	画像の各チャネルの統計情報を返す
	getImageClipMask	Imagick getImageClipMask ( void )	画像のクリップマスクを取得する
	getImageColormapColor	ImagickPixel getImageColormapColor ( int $index )	指定したインデックスに対応する色マップ上の色を返す
	getImageColors	int getImageColors ( void )	画像で使われている色の数を取得する
	getImageColorspace	int getImageColorspace ( void )	画像の色空間を取得する
	getImageCompose	int getImageCompose ( void )	画像の合成演算子を返す
	getImageCompression	int getImageCompression ( void )	現在の画像の圧縮形式を取得する
	getCompressionQuality	int getCompressionQuality ( void )	オブジェクトの圧縮品質を取得する
	getImageDelay	int getImageDelay ( void )	画像の遅延を取得する
	getImageDepth	int getImageDepth ( void )	画像の深度を取得する
	getImageDispose	int getImageDispose ( void )	画像の配置方法を取得する
	getImageDistortion	float getImageDistortion ( MagickWand $reference , int $metric )	ある画像と再構築した画像を比較する
	getImageExtrema	array getImageExtrema ( void )	画像の極値を取得する
	getImageFilename	string getImageFilename ( void )	シーケンス内の特定の画像のファイル名を返す
	getImageFormat	string getImageFormat ( void )	シーケンス内の特定の画像のフォーマットを返す
	getImageGamma	float getImageGamma ( void )	画像のガンマを取得する
	getImageGeometry	array getImageGeometry ( void )	幅と高さを連想配列で取得する
	getImageGravity	int getImageGravity ( void )	画像の gravity を取得する
	getImageGreenPrimary	array getImageGreenPrimary ( void )	緑が一番強い点を返す
	getImageHeight	int getImageHeight ( void )	画像の高さを返す
	getImageHistogram	array getImageHistogram ( void )	画像のヒストグラムを取得する
	getImageIndex	int getImageIndex ( void )	現在アクティブな画像のインデックスを取得する
	getImageInterlaceScheme	int getImageInterlaceScheme ( void )	画像のインターレース手法を取得する
	getImageInterpolateMethod	int getImageInterpolateMethod ( void )	画像の補間方式を返す
	getImageIterations	int getImageIterations ( void )	画像の反復を取得する
	getImageLength	int getImageLength ( void )	画像の長さをバイト数で取得する
	getImageMagickLicense	string getImageMagickLicense ( void )	ImageMagick のライセンスを文字列で返す
	getImageMatte	bool getImageMatte ( void )	画像がマットチャネルを持っているかどうかを返す
	getImageMatteColor	ImagickPixel getImageMatteColor ( void )	画像のマット色を返す
	getImageOrientation	int getImageOrientation ( void )	画像の方向を取得する
	getImagePage	array getImagePage ( void )	ページのジオメトリを返す
	getImagePixelColor	ImagickPixel getImagePixelColor ( int $x , int $y )	指定したピクセルの色を返す
	getImageProfile	string getImageProfile ( string $name )	指定した名前の画像プロファイルを返す
	getImageProfiles	array getImageProfiles ([ string $pattern = "*" [, bool $only_names = true ]] )	画像プロファイルを返す
	getImageProperties	array getImageProperties ([ string $pattern = "*" [, bool $only_names = true ]] )	画像のプロパティを返す
	getImageProperty	string getImageProperty ( string $name )	指定した名前の画像のプロパティを返す
	getImageRedPrimary	array getImageRedPrimary ( void )	赤が一番強い点を返す
	getImageRegion	Imagick getImageRegion ( int $width , int $height , int $x , int $y )	画像の一部を抽出する
	getImageRenderingIntent	int getImageRenderingIntent ( void )	画像のレンダリング方向を取得する
	getImageResolution	array getImageResolution ( void )	画像の X 方向と Y 方向の解像度を取得する
	getImagesBlob	string getImagesBlob ( void )	すべての画像シーケンスを blob で返す
	getImageScene	int getImageScene ( void )	画像のシーンを取得する
	getImageSignature	string getImageSignature ( void )	SHA-256 メッセージダイジェストを生成する
	getImageSize	int getImageSize ( void )	画像の長さをバイト数で返す
	getImageTicksPerSecond	int getImageTicksPerSecond ( void )	画像の ticks-per-second を取得する
	getImageTotalInkDensity	float getImageTotalInkDensity ( void )	画像の総インク密度を取得する
	getImageType	int getImageType ( void )	画像の型を取得する
	getImageUnits	int getImageUnits ( void )	画像の解像度の単位を取得する
	getImageVirtualPixelMethod	int getImageVirtualPixelMethod ( void )	仮想ピクセルメソッドを取得する
	getImageWhitePoint	array getImageWhitePoint ( void )	色度が白い点を返す
	getImageWidth	int getImageWidth ( void )	画像の幅を返す
	getInterlaceScheme	int getInterlaceScheme ( void )	オブジェクトのインターレース方式を取得する
	getIteratorIndex	int getIteratorIndex ( void )	現在アクティブな画像のインデックスを取得する
	getNumberImages	int getNumberImages ( void )	オブジェクト内の画像の数を返す
	getOption	string getOption ( string $key )	指定したキーに対応する値を返す
	getPackageName	string getPackageName ( void )	ImageMagick パッケージ名を返す
	getPage	array getPage ( void )	ページのジオメトリを返す
	getPixelIterator	ImagickPixelIterator getPixelIterator ( void )	MagickPixelIterator を返す
	getPixelRegionIterator	ImagickPixelIterator getPixelRegionIterator ( int $x , int $y , int $columns , int $rows )	画像セクションの ImagickPixelIterator を取得する
	getPointSize	float getPointSize ( void )	ポイントサイズを取得する
	getQuantumDepth	array getQuantumDepth ( void )	quantum depth を取得する
	getQuantumRange	array getQuantumRange ( void )	Imagick quantum range を返す
	getReleaseDate	string getReleaseDate ( void )	ImageMagick のリリース日を返す
	getResource	int getResource ( int $type )	指定したリソースのメモリ使用状況を返す
	getResourceLimit	int getResourceLimit ( int $type )	指定したリソースの制限を返す
	getSamplingFactors	array getSamplingFactors ( void )	水平方向および垂直方向のサンプリング係数を取得する
	getSize	array getSize ( void )	Imagick オブジェクトのサイズを取得する
	getSizeOffset	int getSizeOffset ( void )	サイズのオフセットを返す
	getVersion	array getVersion ( void )	ImageMagick API のバージョンを返す
	haldClutImage	public bool haldClutImage ( Imagick $clut [, int $channel = Imagick::CHANNEL_DEFAULT ] )	画像内の色を置換する
	hasNextImage	bool hasNextImage ( void )	オブジェクトが次の画像を保持しているかどうかを調べる
	hasPreviousImage	bool hasPreviousImage ( void )	オブジェクトが前の画像を保持しているかどうかを調べる
	identifyImage	array identifyImage ([ bool $appendRawOutput = false ] )	画像を識別し、属性を取得する
	implodeImage	bool implodeImage ( float $radius )	新しい画像をコピーとして作成する
	importImagePixels	public bool importImagePixels ( int $x , int $y , int $width , int $height , string $map , int $storage , array $pixels )	画像のピクセルをインポートする
	labelImage	bool labelImage ( string $label )	ラベルを画像に追加する
	levelImage	bool levelImage ( float $blackPoint , float $gamma , float $whitePoint [, int $channel = Imagick::CHANNEL_ALL ] )	画像のレベルを調節する
	linearStretchImage	bool linearStretchImage ( float $blackPoint , float $whitePoint )	画像の輝度を引き伸ばして飽和させる
	liquidRescaleImage	bool liquidRescaleImage ( int $width , int $height , float $delta_x , float $rigidity )	画像を動かす
	magnifyImage	bool magnifyImage ( void )	画像を 2 倍に比例拡大する
	mapImage	bool mapImage ( Imagick $map , bool $dither )	画像の色を、参照画像の中の最も近い色に置き換える
	matteFloodfillImage	bool matteFloodfillImage ( float $alpha , float $fuzz , mixed $bordercolor , int $x , int $y )	色の透明度を変更する
	medianFilterImage	bool medianFilterImage ( float $radius )	デジタルフィルタを適用する
	mergeImageLayers	bool mergeImageLayers ( int $layer_method )	画像のレイヤーをマージする
	minifyImage	bool minifyImage ( void )	画像をその半分のサイズに比例縮小する
	modulateImage	bool modulateImage ( float $brightness , float $saturation , float $hue )	明度、飽和度、色相を制御する
	montageImage	Imagick montageImage ( ImagickDraw $draw , string $tile_geometry , string $thumbnail_geometry , int $mode , string $frame )	合成画像を作成する
	morphImages	Imagick morphImages ( int $number_frames )	複数の画像をモーフィングする
	mosaicImages	Imagick mosaicImages ( void )	画像からモザイクを作成する
	motionBlurImage	bool motionBlurImage ( float $radius , float $sigma , float $angle [, int $channel = Imagick::CHANNEL_DEFAULT ] )	モーションブラーをシミュレートする
	negateImage	bool negateImage ( bool $gray [, int $channel = Imagick::CHANNEL_ALL ] )	画像の色を打ち消す
	newImage	bool newImage ( int $cols , int $rows , mixed $background [, string $format ] )	新しい画像を作成する
	newPseudoImage	bool newPseudoImage ( int $columns , int $rows , string $pseudoString )	新しい画像を作成する
	nextImage	bool nextImage ( void )	次の画像に移動する
	normalizeImage	bool normalizeImage ([ int $channel = Imagick::CHANNEL_ALL ] )	カラー画像のコントラストを強調する
	oilPaintImage	bool oilPaintImage ( float $radius )	油絵をシミュレートする
	opaquePaintImage	bool opaquePaintImage ( mixed $target , mixed $fill , float $fuzz , bool $invert [, int $channel = Imagick::CHANNEL_DEFAULT ] )	対象にマッチする任意のピクセルの色を変更する
	optimizeImageLayers	bool optimizeImageLayers ( void )	画像の繰り返し部分を削除して最適化する
	orderedPosterizeImage	bool orderedPosterizeImage ( string $threshold_map [, int $channel = Imagick::CHANNEL_ALL ] )	配列ディザリングを行う
	paintFloodfillImage	bool paintFloodfillImage ( mixed $fill , float $fuzz , mixed $bordercolor , int $x , int $y [, int $channel = Imagick::CHANNEL_ALL ] )	色にマッチするピクセルを変更する
	paintOpaqueImage	bool paintOpaqueImage ( mixed $target , mixed $fill , float $fuzz [, int $channel = Imagick::CHANNEL_ALL ] )	色にマッチするピクセルを変更する
	paintTransparentImage	bool paintTransparentImage ( mixed $target , float $alpha , float $fuzz )	色にマッチするピクセルを塗りつぶし色に変更する
	pingImage	bool pingImage ( string $filename )	画像の基本属性を取得する
	pingImageBlob	bool pingImageBlob ( string $image )	手早く属性を取得する
	pingImageFile	bool pingImageFile ( resource $filehandle [, string $fileName ] )	画像の基本属性を手軽に取得する
	polaroidImage	bool polaroidImage ( ImagickDraw $properties , float $angle )	ポラロイド写真をシミュレートする
	posterizeImage	bool posterizeImage ( int $levels , bool $dither )	指定した色数まで画像を減色する
	previewImages	bool previewImages ( int $preview )	画像処理用の適切なパラメータを手早く取得する
	previousImage	bool previousImage ( void )	オブジェクト内の前の画像に移動する
	profileImage	bool profileImage ( string $name , string $profile )	画像のプロファイルを追加あるいは削除する
	quantizeImage	bool quantizeImage ( int $numberColors , int $colorspace , int $treedepth , bool $dither , bool $measureError )	参照画像内の色を解析する
	quantizeImages	bool quantizeImages ( int $numberColors , int $colorspace , int $treedepth , bool $dither , bool $measureError )	画像シーケンス内の色を解析する
	queryFontMetrics	array queryFontMetrics ( ImagickDraw $properties , string $text [, bool $multiline ] )	フォントメトリクスを表す配列を返す
	queryFonts	array queryFonts ([ string $pattern = "*" ] )	設定したフォントを返す
	queryFormats	array queryFormats ([ string $pattern = "*" ] )	Imagick がサポートするフォーマットを返す
	radialBlurImage	bool radialBlurImage ( float $angle [, int $channel = Imagick::CHANNEL_ALL ] )	画像にラジアルブラーを施す
	raiseImage	bool raiseImage ( int $width , int $height , int $x , int $y , bool $raise )	三次元のボタン風の効果をシミュレートする
	randomThresholdImage	bool randomThresholdImage ( float $low , float $high [, int $channel = Imagick::CHANNEL_ALL ] )	コントラストの高い 2 色の画像を作成する
	readImage	bool readImage ( string $filename )	ファイルから画像を読み込む
	readImageBlob	bool readImageBlob ( string $image [, string $filename ] )	バイナリ文字列から画像を読み込む
	readImageFile	bool readImageFile ( resource $filehandle [, string $fileName = null ] )	オープンしているファイルハンドルから画像を読み込む
	recolorImage	bool recolorImage ( array $matrix )	画像の色を変更する
	reduceNoiseImage	bool reduceNoiseImage ( float $radius )	画像の輪郭をなめらかにする
	remapImage	public bool remapImage ( Imagick $replacement , int $DITHER )	画像の色を再配置する
	removeImage	bool removeImage ( void )	画像リストから画像を削除する
	removeImageProfile	string removeImageProfile ( string $name )	指定した名前の画像プロファイルを削除してそれを返す
	render	bool render ( void )	それまでのすべての描画コマンドをレンダリングする
	resampleImage	bool resampleImage ( float $x_resolution , float $y_resolution , int $filter , float $blur )	画像を指定した解像度にリサンプリングする
	resetImagePage	bool resetImagePage ( string $page )	画像のページをリセットする
	resizeImage	bool resizeImage ( int $columns , int $rows , int $filter , float $blur [, bool $bestfit = false ] )	画像のサイズを変更する
	rollImage	bool rollImage ( int $x , int $y )	画像を補正する
	rotateImage	bool rotateImage ( mixed $background , float $degrees )	画像を回転する
	roundCorners	bool roundCorners ( float $x_rounding , float $y_rounding [, float $stroke_width = 10 [, float $displace = 5 [, float $size_correction = -6 ]]] )	画像の角を丸める
	sampleImage	bool sampleImage ( int $columns , int $rows )	ピクセルのサンプリングによって画像の倍率を変更する
	scaleImage	bool scaleImage ( int $cols , int $rows [, bool $bestfit = false ] )	画像のサイズを変更する
	segmentImage	public bool segmentImage ( int $COLORSPACE , float $cluster_threshold , float $smooth_threshold [, bool $verbose = false ] )	画像を分割する
	separateImageChannel	bool separateImageChannel ( int $channel )	画像からチャネルを分離する
	sepiaToneImage	bool sepiaToneImage ( float $threshold )	画像をセピア調にする
	setBackgroundColor	bool setBackgroundColor ( mixed $background )	オブジェクトのデフォルト背景色を設定する
	setColorspace	bool setColorspace ( int $COLORSPACE )	色空間を設定する
	setCompression	bool setCompression ( int $compression )	オブジェクトのデフォルトの圧縮方式を設定する
	setCompressionQuality	bool setCompressionQuality ( int $quality )	オブジェクトのデフォルトの圧縮品質を設定する
	setFilename	bool setFilename ( string $filename )	画像を読み書きする前にファイル名を設定する
	setFirstIterator	bool setFirstIterator ( void )	Imagick イテレータを最初の画像に設定する
	setFont	bool setFont ( string $font )	フォントを設定する
	setFormat	bool setFormat ( string $format )	Imagick オブジェクトのフォーマットを設定する
	setGravity	bool setGravity ( int $gravity )	gravity を設定する
	setImage	bool setImage ( Imagick $replace )	オブジェクト内の画像を置き換える
	setImageAlphaChannel	bool setImageAlphaChannel ( int $mode )	画像のアルファチャネルを設定する
	setImageArtifact	bool setImageArtifact ( string $artifact , string $value )	画像のアーチファクトを設定する
	setImageBackgroundColor	bool setImageBackgroundColor ( mixed $background )	画像の背景色を設定する
	setImageBias	bool setImageBias ( float $bias )	画像を折りたたむ任意のメソッドについて画像のバイアスを設定する
	setImageBluePrimary	bool setImageBluePrimary ( float $x , float $y )	青が一番強い点を設定する
	setImageBorderColor	bool setImageBorderColor ( mixed $border )	画像の前景色を設定する
	setImageChannelDepth	bool setImageChannelDepth ( int $channel , int $depth )	特定の画像チャネルの深度を設定する
	setImageClipMask	bool setImageClipMask ( Imagick $clip_mask )	画像のクリップマスクを設定する
	setImageColormapColor	bool setImageColormapColor ( int $index , ImagickPixel $color )	指定した色マップインデックスの色を設定する
	setImageColorspace	bool setImageColorspace ( int $colorspace )	画像の色空間を設定する
	setImageCompose	bool setImageCompose ( int $compose )	画像の合成演算子を設定する
	setImageCompression	bool setImageCompression ( int $compression )	画像の圧縮を設定する
	setImageCompressionQuality	bool setImageCompressionQuality ( int $quality )	画像の圧縮品質を設定する
	setImageDelay	bool setImageDelay ( int $delay )	画像の遅延を設定する
	setImageDepth	bool setImageDepth ( int $depth )	画像の深度を設定する
	setImageDispose	bool setImageDispose ( int $dispose )	画像の配置方法を設定する
	setImageExtent	bool setImageExtent ( int $columns , int $rows )	画像のサイズを設定する
	setImageFilename	bool setImageFilename ( string $filename )	特定の画像のファイル名を設定する
	setImageFormat	bool setImageFormat ( string $format )	特定の画像のフォーマットを設定する
	setImageGamma	bool setImageGamma ( float $gamma )	画像のガンマを設定する
	setImageGravity	bool setImageGravity ( int $gravity )	画像の gravity を設定する
	setImageGreenPrimary	bool setImageGreenPrimary ( float $x , float $y )	緑が一番強い点を設定する
	setImageIndex	bool setImageIndex ( int $index )	イテレータの位置を設定する
	setImageInterlaceScheme	bool setImageInterlaceScheme ( int $interlace_scheme )	画像のインターレース手法を設定する
	setImageInterpolateMethod	bool setImageInterpolateMethod ( int $method )	画像のピクセル補間方式を設定する
	setImageIterations	bool setImageIterations ( int $iterations )	画像の反復を設定する
	setImageMatte	bool setImageMatte ( bool $matte )	画像のマットチャネルを設定する
	setImageMatteColor	bool setImageMatteColor ( mixed $matte )	画像のマット色を設定する
	setImageOpacity	bool setImageOpacity ( float $opacity )	画像の不透明度を設定する
	setImageOrientation	bool setImageOrientation ( int $orientation )	画像の方向を設定する
	setImagePage	bool setImagePage ( int $width , int $height , int $x , int $y )	画像のページのジオメトリを設定する
	setImageProfile	bool setImageProfile ( string $name , string $profile )	指定した名前の画像プロファイルを Imagick オブジェクトに追加する
	setImageProperty	bool setImageProperty ( string $name , string $value )	画像のプロパティを設定する
	setImageRedPrimary	bool setImageRedPrimary ( float $x , float $y )	赤が一番強い点を設定する
	setImageRenderingIntent	bool setImageRenderingIntent ( int $rendering_intent )	画像のレンダリング方向を設定する
	setImageResolution	bool setImageResolution ( float $x_resolution , float $y_resolution )	画像の解像度を設定する
	setImageScene	bool setImageScene ( int $scene )	画像のシーンを設定する
	setImageTicksPerSecond	bool setImageTicksPerSecond ( int $ticks_per-second )	画像の ticks-per-second を設定する
	setImageType	bool setImageType ( int $image_type )	画像の型を設定する
	setImageUnits	bool setImageUnits ( int $units )	画像の解像度の単位を設定する
	setImageVirtualPixelMethod	bool setImageVirtualPixelMethod ( int $method )	画像の仮想ピクセルメソッドを設定する
	setImageWhitePoint	bool setImageWhitePoint ( float $x , float $y )	画像の色度が白い点を設定する
	setInterlaceScheme	bool setInterlaceScheme ( int $interlace_scheme )	画像の圧縮を設定する
	setIteratorIndex	bool setIteratorIndex ( int $index )	イテレータの位置を設定する
	setLastIterator	bool setLastIterator ( void )	Imagick イテレータを最後の画像に設定する
	setOption	bool setOption ( string $key , string $value )	オプションを設定する
	setPage	bool setPage ( int $width , int $height , int $x , int $y )	Imagick オブジェクトのページジオメトリを設定する
	setPointSize	bool setPointSize ( float $point_size )	ポイントサイズを設定する
	setResolution	bool setResolution ( float $x_resolution , float $y_resolution )	画像の解像度を設定する
	setResourceLimit	bool setResourceLimit ( int $type , int $limit )	特定のリソースの制限をメガバイト単位で設定する
	setSamplingFactors	bool setSamplingFactors ( array $factors )	画像のサンプリング係数を設定する
	setSize	bool setSize ( int $columns , int $rows )	Imagick オブジェクトのサイズを設定する
	setSizeOffset	bool setSizeOffset ( int $columns , int $rows , int $offset )	Imagick オブジェクトのサイズのオフセットを設定する
	setType	bool setType ( int $image_type )	画像タイプ属性を設定する
	shadeImage	bool shadeImage ( bool $gray , float $azimuth , float $elevation )	3D 効果を作成する
	shadowImage	bool shadowImage ( float $opacity , float $sigma , int $x , int $y )	画像の影をシミュレートする
	sharpenImage	bool sharpenImage ( float $radius , float $sigma [, int $channel = Imagick::CHANNEL_ALL ] )	画像をシャープにする
	shaveImage	bool shaveImage ( int $columns , int $rows )	画像の輪郭からピクセルを刈り取る
	shearImage	bool shearImage ( mixed $background , float $x_shear , float $y_shear )	平行四辺形を作成する
	sigmoidalContrastImage	bool sigmoidalContrastImage ( bool $sharpen , float $alpha , float $beta [, int $channel = Imagick::CHANNEL_ALL ] )	画像のコントラストを調整する
	sketchImage	bool sketchImage ( float $radius , float $sigma , float $angle )	鉛筆画をシミュレートする
	solarizeImage	bool solarizeImage ( int $threshold )	画像にソラリゼーション効果を適用する
	sparseColorImage	public bool sparseColorImage ( int $SPARSE_METHOD , array $arguments [, int $channel = Imagick::CHANNEL_DEFAULT ] )	色を補間する
	spliceImage	bool spliceImage ( int $width , int $height , int $x , int $y )	無地の画像を作成する
	spreadImage	bool spreadImage ( float $radius )	ブロック内の各ピクセルをランダムに移動する
	steganoImage	Imagick steganoImage ( Imagick $watermark_wand , int $offset )	デジタル透かしを画像に埋め込む
	stereoImage	bool stereoImage ( Imagick $offset_wand )	ふたつの画像を合成する
	stripImage	bool stripImage ( void )	画像からすべてのプロパティやコメントを除去する
	swirlImage	bool swirlImage ( float $degrees )	画像の中心から、ピクセルを渦巻状にする
	textureImage	bool textureImage ( Imagick $texture_wand )	テクスチャ画像をタイル状に並べる
	thresholdImage	bool thresholdImage ( float $threshold [, int $channel = Imagick::CHANNEL_ALL ] )	閾値にもとづいて個々のピクセルの値を変更する
	thumbnailImage	bool thumbnailImage ( int $columns , int $rows [, bool $bestfit = false [, bool $fill = false ]] )	画像のサイズを変更する
	tintImage	bool tintImage ( mixed $tint , mixed $opacity )	色ベクトルを画像の各ピクセルに適用する
	transformImage	Imagick transformImage ( string $crop , string $geometry )	切り取るサイズと画像のジオメトリを設定する便利なメソッド
	transparentPaintImage	bool transparentPaintImage ( mixed $target , float $alpha , float $fuzz , bool $invert )	ピクセルを透過させる
	transposeImage	bool transposeImage ( void )	垂直方向に反転させた画像を作成する
	transverseImage	bool transverseImage ( void )	水平方向に反転させた画像を作成する
	trimImage	bool trimImage ( float $fuzz )	画像の輪郭を削除する
	uniqueImageColors	bool uniqueImageColors ( void )	ある 1 色以外のすべての色のピクセルを削除する
	unsharpMaskImage	bool unsharpMaskImage ( float $radius , float $sigma , float $amount , float $threshold [, int $channel = Imagick::CHANNEL_ALL ] )	画像をシャープにする
	valid	bool valid ( void )	現在のアイテムが有効かどうかを調べる
	vignetteImage	bool vignetteImage ( float $blackPoint , float $whitePoint , int $x , int $y )	ビネットフィルタを画像に追加する
	waveImage	bool waveImage ( float $amplitude , float $length )	ウェーブフィルタを画像に適用する
	whiteThresholdImage	bool whiteThresholdImage ( mixed $threshold )	閾値に満たないすべてのピクセルを白にする
	writeImage	bool writeImage ([ string $filename ] )	指定した名前で画像を書き込む
	writeImageFile	bool writeImageFile ( resource $filehandle )	画像をファイルハンドルに書き出す
	writeImages	bool writeImages ( string $filename , bool $adjoin )	画像あるいは画像シーケンスを書き込む
	writeImagesFile	bool writeImagesFile ( resource $filehandle )	フレームをファイルハンドルに書き出す
ImagickDraw	affine	bool affine ( array $affine )	現在のアフィン変換行列を設定する
	annotation	bool annotation ( float $x , float $y , string $text )	画像上にテキストを描画する
	arc	bool arc ( float $sx , float $sy , float $ex , float $ey , float $sd , float $ed )	円弧を描画する
	bezier	bool bezier ( array $coordinates )	ベジエ曲線を描画する
	circle	bool circle ( float $ox , float $oy , float $px , float $py )	円を描画する
	clear	bool clear ( void )	ImagickDraw をクリアする
	clone	ImagickDraw clone ( void )	指定した ImagickDraw オブジェクトの完全なコピーを作成する
	color	bool color ( float $x , float $y , int $paintMethod )	画像上に色を描画する
	comment	bool comment ( string $comment )	コメントを追加する
	composite	bool composite ( int $compose , float $x , float $y , float $width , float $height , Imagick $compositeWand )	現在の画像上に別の画像を合成する
	__construct	__construct ( void )	ImagickDraw コンストラクタ
	destroy	bool destroy ( void )	関連付けられたすべてのリソースを開放する
	ellipse	bool ellipse ( float $ox , float $oy , float $rx , float $ry , float $start , float $end )	画像上に楕円を描画する
	getClipPath	string getClipPath ( void )	現在のクリッピングパスの ID を取得する
	getClipRule	int getClipRule ( void )	現在の多角形塗りつぶしルールを返す
	getClipUnits	int getClipUnits ( void )	クリップパスの単位の解釈を返す
	getFillColor	ImagickPixel getFillColor ( void )	塗りつぶし色を返す
	getFillOpacity	float getFillOpacity ( void )	描画時の透過度を返す
	getFillRule	int getFillRule ( void )	塗りつぶしルールを返す
	getFont	string getFont ( void )	フォントを返す
	getFontFamily	string getFontFamily ( void )	フォントファミリーを返す
	getFontSize	float getFontSize ( void )	フォントのポイント数を返す
	getFontStyle	int getFontStyle ( void )	フォントのスタイルを返す
	getFontWeight	int getFontWeight ( void )	フォントの重さを返す
	getGravity	int getGravity ( void )	テキストの配置時の gravity を返す
	getStrokeAntialias	bool getStrokeAntialias ( void )	現在の縁取りのアンチエイリアス設定を返す
	getStrokeColor	ImagickPixel getStrokeColor ( void )	オブジェクトの縁取りに使用する色を返す
	getStrokeDashArray	array getStrokeDashArray ( void )	パスの描画に使用する破線のパターンを表す配列を返す
	getStrokeDashOffset	float getStrokeDashOffset ( void )	破線パターンにおける破線の開始オフセットを返す
	getStrokeLineCap	int getStrokeLineCap ( void )	開かれたサブパスを描画する際に使用する端点の形状を返す
	getStrokeLineJoin	int getStrokeLineJoin ( void )	パスの角を描画する際に使用する形状を返す
	getStrokeMiterLimit	int getStrokeMiterLimit ( void )	マイターリミットを返す
	getStrokeOpacity	float getStrokeOpacity ( void )	オブジェクトの枠線の透明度を返す
	getStrokeWidth	float getStrokeWidth ( void )	オブジェクトの枠線の描画に使用する線の幅を返す
	getTextAlignment	int getTextAlignment ( void )	テキストの配置を返す
	getTextAntialias	bool getTextAntialias ( void )	現在のテキストのアンチエイリアス設定を返す
	getTextDecoration	int getTextDecoration ( void )	テキストの装飾を返す
	getTextEncoding	string getTextEncoding ( void )	テキストによる注記の際に使用するコードセットを返す
	getTextUnderColor	ImagickPixel getTextUnderColor ( void )	テキストの背景色を返す
	getVectorGraphics	string getVectorGraphics ( void )	ベクターグラフィックを含む文字列を返す
	line	bool line ( float $sx , float $sy , float $ex , float $ey )	直線を描画する
	matte	bool matte ( float $x , float $y , int $paintMethod )	画像の opacity チャネル上に描画する
	pathClose	bool pathClose ( void )	パス要素を現在のパスに追加する
	pathCurveToAbsolute	bool pathCurveToAbsolute ( float $x1 , float $y1 , float $x2 , float $y2 , float $x , float $y )	三次ベジエ曲線を描画する
	pathCurveToQuadraticBezierAbsolute	bool pathCurveToQuadraticBezierAbsolute ( float $x1 , float $y1 , float $x , float $y )	二次ベジエ曲線を描画する
	pathCurveToQuadraticBezierRelative	bool pathCurveToQuadraticBezierRelative ( float $x1 , float $y1 , float $x , float $y )	二次ベジエ曲線を描画する
	pathCurveToQuadraticBezierSmoothAbsolute	bool pathCurveToQuadraticBezierSmoothAbsolute ( float $x , float $y )	二次ベジエ曲線を描画する
	pathCurveToQuadraticBezierSmoothRelative	bool pathCurveToQuadraticBezierSmoothRelative ( float $x , float $y )	二次ベジエ曲線を描画する
	pathCurveToRelative	bool pathCurveToRelative ( float $x1 , float $y1 , float $x2 , float $y2 , float $x , float $y )	三次ベジエ曲線を描画する
	pathCurveToSmoothAbsolute	bool pathCurveToSmoothAbsolute ( float $x2 , float $y2 , float $x , float $y )	三次ベジエ曲線を描画する
	pathCurveToSmoothRelative	bool pathCurveToSmoothRelative ( float $x2 , float $y2 , float $x , float $y )	三次ベジエ曲線を描画する
	pathEllipticArcAbsolute	bool pathEllipticArcAbsolute ( float $rx , float $ry , float $x_axis_rotation , bool $large_arc_flag , bool $sweep_flag , float $x , float $y )	楕円弧を描画する
	pathEllipticArcRelative	bool pathEllipticArcRelative ( float $rx , float $ry , float $x_axis_rotation , bool $large_arc_flag , bool $sweep_flag , float $x , float $y )	楕円弧を描画する
	pathFinish	bool pathFinish ( void )	現在のパスを終了する
	pathLineToAbsolute	bool pathLineToAbsolute ( float $x , float $y )	直線パスを描画する
	pathLineToHorizontalAbsolute	bool pathLineToHorizontalAbsolute ( float $x )	水平直線パスを描画する
	pathLineToHorizontalRelative	bool pathLineToHorizontalRelative ( float $x )	水平直線パスを描画する
	pathLineToRelative	bool pathLineToRelative ( float $x , float $y )	直線パスを描画する
	pathLineToVerticalAbsolute	bool pathLineToVerticalAbsolute ( float $y )	垂直直線パスを描画する
	pathLineToVerticalRelative	bool pathLineToVerticalRelative ( float $y )	垂直直線パスを描画する
	pathMoveToAbsolute	bool pathMoveToAbsolute ( float $x , float $y )	新しいサブパスを開始する
	pathMoveToRelative	bool pathMoveToRelative ( float $x , float $y )	新しいサブパスを開始する
	pathStart	bool pathStart ( void )	パス描画リストの開始を宣言する
	point	bool point ( float $x , float $y )	点を描画する
	polygon	bool polygon ( array $coordinates )	多角形を描画する
	polyline	bool polyline ( array $coordinates )	線分群を描画する
	pop	bool pop ( void )	スタック内の現在の ImagickDraw を破棄し、事前に push された ImagickDraw を返す
	popClipPath	bool popClipPath ( void )	クリップパスの定義を終了する
	popDefs	bool popDefs ( void )	定義リストを終了する
	popPattern	bool popPattern ( void )	パターン定義を終了する
	push	bool push ( void )	現在の ImagickDraw をコピーしてスタックに格納する
	pushClipPath	bool pushClipPath ( string $clip_mask_id )	クリップパスの定義を開始する
	pushDefs	bool pushDefs ( void )	後に続くコマンドが、処理の前に名前つき要素を作成することを示す
	pushPattern	bool pushPattern ( string $pattern_id , float $x , float $y , float $width , float $height )	後に続く ImagickDraw::opPattern() までのコマンドが、名前付きパターンを構成することを示す
	rectangle	bool rectangle ( float $x1 , float $y1 , float $x2 , float $y2 )	矩形を描画する
	render	bool render ( void )	これまでのすべての描画コマンドを画像上にレンダリングする
	rotate	bool rotate ( float $degrees )	指定した回転を現在の座標空間に適用する
	roundRectangle	bool roundRectangle ( float $x1 , float $y1 , float $x2 , float $y2 , float $rx , float $ry )	角が丸い矩形を描画する
	scale	bool scale ( float $x , float $y )	倍率を調整する
	setClipPath	bool setClipPath ( string $clip_mask )	指定した名前のクリッピングパスを画像に関連付ける
	setClipRule	bool setClipRule ( int $fill_rule )	クリッピングパスで使用する多角形塗りつぶしルールを設定する
	setClipUnits	bool setClipUnits ( int $clip_units )	クリップパスの単位の解釈を設定する
	setFillAlpha	bool setFillAlpha ( float $opacity )	色やテクスチャによる塗りつぶしの際の透過度を設定する
	setFillColor	bool setFillColor ( ImagickPixel $fill_pixel )	オブジェクトの塗りつぶしに使用する色を設定する
	setFillOpacity	bool setFillOpacity ( float $fillOpacity )	色やテクスチャによる塗りつぶしの際の透過度を設定する
	setFillPatternURL	bool setFillPatternURL ( string $fill_url )	オブジェクトの塗りつぶしパターンとして使用する URL を設定する
	setFillRule	bool setFillRule ( int $fill_rule )	多角形の描画時に使用する塗りつぶしルールを設定する
	setFont	bool setFont ( string $font_name )	テキストによる注記を行う際に使用するフォントを設定する
	setFontFamily	bool setFontFamily ( string $font_family )	テキストによる注記を行う際に使用するフォントファミリーを設定する
	setFontSize	bool setFontSize ( float $pointsize )	テキストによる注記を行う際に使用するフォントのポイント数を設定する
	setFontStretch	bool setFontStretch ( int $fontStretch )	テキストによる注記を行う際に使用するフォントの伸縮を設定する
	setFontStyle	bool setFontStyle ( int $style )	テキストによる注記を行う際に使用するフォントのスタイルを設定する
	setFontWeight	bool setFontWeight ( int $font_weight )	フォントの重さを設定する
	setGravity	bool setGravity ( int $gravity )	テキストの配置時の gravity を設定する
	setStrokeAlpha	bool setStrokeAlpha ( float $opacity )	オブジェクトの枠線の透明度を指定する
	setStrokeAntialias	bool setStrokeAntialias ( bool $stroke_antialias )	縁取りの枠線をアンチエイリアス処理するかどうかを制御する
	setStrokeColor	bool setStrokeColor ( ImagickPixel $stroke_pixel )	オブジェクトの縁取りに使用する色を設定する
	setStrokeDashArray	bool setStrokeDashArray ( array $dashArray )	パスの描画に使用する破線のパターンを指定する
	setStrokeDashOffset	bool setStrokeDashOffset ( float $dash_offset )	破線パターンにおける破線の開始オフセットを指定する
	setStrokeLineCap	bool setStrokeLineCap ( int $linecap )	開かれたサブパスを描画する際に使用する端点の形状を指定する
	setStrokeLineJoin	bool setStrokeLineJoin ( int $linejoin )	パスの角を描画する際に使用する形状を指定する
	setStrokeMiterLimit	bool setStrokeMiterLimit ( int $miterlimit )	マイターリミットを指定する
	setStrokeOpacity	bool setStrokeOpacity ( float $stroke_opacity )	オブジェクトの枠線の透明度を指定する
	setStrokePatternURL	bool setStrokePatternURL ( string $stroke_url )	オブジェクトの枠線の描画に使用するパターンを設定する
	setStrokeWidth	bool setStrokeWidth ( float $stroke_width )	オブジェクトの枠線の描画に使用する線の幅を設定する
	setTextAlignment	bool setTextAlignment ( int $alignment )	テキストの配置を指定する
	setTextAntialias	bool setTextAntialias ( bool $antiAlias )	テキストをアンチエイリアス処理するかどうかを制御する
	setTextDecoration	bool setTextDecoration ( int $decoration )	装飾を指定する
	setTextEncoding	bool setTextEncoding ( string $encoding )	テキストのコードセットを指定する
	setTextUnderColor	bool setTextUnderColor ( ImagickPixel $under_color )	背景の矩形の色を指定する
	setVectorGraphics	bool setVectorGraphics ( string $xml )	ベクターグラフィックを設定する
	setViewbox	bool setViewbox ( int $x1 , int $y1 , int $x2 , int $y2 )	キャンバス全体の大きさを設定する
	skewX	bool skewX ( float $degrees )	現在の座標系を水平方向に傾ける
	skewY	bool skewY ( float $degrees )	現在の座標系を垂直方向に傾ける
	translate	bool translate ( float $x , float $y )	現在の座標系に変換を適用する
ImagickPixel	clear	bool clear ( void )	このオブジェクトに関連付けられたリソースを消去する
	__construct	__construct ([ string $color ] )	ImagickPixel のコンストラクタ
	destroy	bool destroy ( void )	このオブジェクトに関連付けられているリソースの割り当てを解除する
	getColor	array getColor ([ bool $normalized = false ] )	色を返す
	getColorAsString	string getColorAsString ( void )	色を文字列で返す
	getColorCount	int getColorCount ( void )	この色に関連付けられている色カウントを返す
	getColorValue	float getColorValue ( int $color )	指定した色チャネルの値を正規化したものを取得する
	getHSL	array getHSL ( void )	ImagickPixel オブジェクトの HSL カラーを正規化したものを返す
	isSimilar	bool isSimilar ( ImagickPixel $color , float $fuzz )	この色と別の色の差を調べる
	setColor	bool setColor ( string $color )	色を設定する
	setColorValue	bool setColorValue ( int $color , float $value )	指定したチャネルの正規化した値を設定する
	setHSL	bool setHSL ( float $hue , float $saturation , float $luminosity )	正規化した HSL カラーを設定する
ImagickPixelIterator	clear	bool clear ( void )	PixelIterator に関連付けられたリソースを消去する
	__construct	__construct ( Imagick $wand )	ImagickPixelIterator のコンストラクタ
	destroy	bool destroy ( void )	PixelIterator に関連付けられているリソースの割り当てを解除する
	getCurrentIteratorRow	array getCurrentIteratorRow ( void )	ImagickPixel オブジェクトの現在の行を返す
	getIteratorRow	int getIteratorRow ( void )	pixel iterator の現在の行を返す
	getNextIteratorRow	array getNextIteratorRow ( void )	pixel iterator の次の行を返す
	getPreviousIteratorRow	array getPreviousIteratorRow ( void )	前の行を返す
	newPixelIterator	bool newPixelIterator ( Imagick $wand )	新しい pixel iterator を返す
	newPixelRegionIterator	bool newPixelRegionIterator ( Imagick $wand , int $x , int $y , int $columns , int $rows )	新しい pixel iterator を返す
	resetIterator	bool resetIterator ( void )	pixel iterator をリセットする
	setIteratorFirstRow	bool setIteratorFirstRow ( void )	pixel iterator を最初の行に設定する
	setIteratorLastRow	bool setIteratorLastRow ( void )	pixel iterator を最後の行に設定する
	setIteratorRow	bool setIteratorRow ( int $row )	pixel iterator の行を設定する
	syncIterator	bool syncIterator ( void )	pixel iterator を同期する
InfiniteIterator	__construct	public __construct ( Iterator $iterator )	InfiniteIterator を作成する
	next	public void next ( void )	内部イテレータを次に移動するか、巻き戻す
	IteratorIterator::__construct	public IteratorIterator::__construct ( Traversable $iterator )
	IteratorIterator::current	public mixed IteratorIterator::current ( void )
	IteratorIterator::getInnerIterator	public Traversable IteratorIterator::getInnerIterator ( void )
	IteratorIterator::key	public scalar IteratorIterator::key ( void )
	IteratorIterator::next	public void IteratorIterator::next ( void )
	IteratorIterator::rewind	public void IteratorIterator::rewind ( void )
	IteratorIterator::valid	public bool IteratorIterator::valid ( void )
IntlBreakIterator	DONE	 const integer DONE = -1 ;
	WORD_NONE	 const integer WORD_NONE = 0 ;
	WORD_NONE_LIMIT	 const integer WORD_NONE_LIMIT = 100 ;
	WORD_NUMBER	 const integer WORD_NUMBER = 100 ;
	WORD_NUMBER_LIMIT	 const integer WORD_NUMBER_LIMIT = 200 ;
	WORD_LETTER	 const integer WORD_LETTER = 200 ;
	WORD_LETTER_LIMIT	 const integer WORD_LETTER_LIMIT = 300 ;
	WORD_KANA	 const integer WORD_KANA = 300 ;
	WORD_KANA_LIMIT	 const integer WORD_KANA_LIMIT = 400 ;
	WORD_IDEO	 const integer WORD_IDEO = 400 ;
	WORD_IDEO_LIMIT	 const integer WORD_IDEO_LIMIT = 500 ;
	LINE_SOFT	 const integer LINE_SOFT = 0 ;
	LINE_SOFT_LIMIT	 const integer LINE_SOFT_LIMIT = 100 ;
	LINE_HARD	 const integer LINE_HARD = 100 ;
	LINE_HARD_LIMIT	 const integer LINE_HARD_LIMIT = 200 ;
	SENTENCE_TERM	 const integer SENTENCE_TERM = 0 ;
	SENTENCE_TERM_LIMIT	 const integer SENTENCE_TERM_LIMIT = 100 ;
	SENTENCE_SEP	 const integer SENTENCE_SEP = 100 ;
	SENTENCE_SEP_LIMIT	 const integer SENTENCE_SEP_LIMIT = 200 ;
	__construct	private __construct ( void )	インスタンス化をできないようにするための private なコンストラクタ
	createCharacterInstance	public static ReturnType createCharacterInstance ([ string $"locale" ] )	文字シーケンスの組み合わせの境界用にイテレータを作る
	createCodePointInstance	public static ReturnType createCodePointInstance ( void )	コードポイントの境界用にイテレータを作る
	createLineInstance	public static ReturnType createLineInstance ([ string $"locale" ] )	論理的に可能な改行用にイテレータを作る
	createSentenceInstance	public static ReturnType createSentenceInstance ([ string $"locale" ] )	文末用にイテレータを作る
	createTitleInstance	public static ReturnType createTitleInstance ([ string $"locale" ] )	タイトル文字の区切り用にイテレータを作る
	createWordInstance	public static ReturnType createWordInstance ([ string $"locale" ] )	単語の区切り用にイテレータを作る
	current	public ReturnType current ( void )	現在位置のインデックスを取得する
	first	public ReturnType first ( void )	テキスト内の最初の文字を場所を取得する
	following	public ReturnType following ( string $"offset" )	指定したオフセット以降の最初の境界までイテレータを進める
	getErrorCode	public ReturnType getErrorCode ( void )	このオブジェクトの直近のエラーコードを取得する
	intl_get_error_code	ReturnType intl_get_error_code ( void )
	getErrorMessage	public ReturnType getErrorMessage ( void )	このオブジェクトの直近のエラーメッセージを取得する
	intl_get_error_message	ReturnType intl_get_error_message ( void )
	getLocale	public ReturnType getLocale ( string $"locale_type" )	このオブジェクトに関連づけられたロケールを取得する
	getPartsIterator	public ReturnType getPartsIterator ([ string $"key_type" ] )	境界と境界の間の navigating fragments 用にイテレータを作る
	getText	public ReturnType getText ( void )	スキャンするテキストを取得する
	isBoundary	public ReturnType isBoundary ( string $"offset" )	あるオフセットが境界のオフセットかどうかを調べる
	last	public ReturnType last ( void )	イテレータの位置を、最後の文字より後に設定する
	next	public ReturnType next ([ string $"offset" ] )	イテレータを次の境界まで進める
	preceding	public ReturnType preceding ( string $"offset" )	イテレータの位置を、指定したオフセット以前の最初の境界に設定する
	previous	public ReturnType previous ( void )	イテレータの位置を、現在位置の直前の境界に設定する
	setText	public ReturnType setText ( string $"text" )	スキャンするテキストを設定する
IntlCalendar	FIELD_ERA	 const integer FIELD_ERA = 0 ;
	FIELD_YEAR	 const integer FIELD_YEAR = 1 ;
	FIELD_MONTH	 const integer FIELD_MONTH = 2 ;
	FIELD_WEEK_OF_YEAR	 const integer FIELD_WEEK_OF_YEAR = 3 ;
	FIELD_WEEK_OF_MONTH	 const integer FIELD_WEEK_OF_MONTH = 4 ;
	FIELD_DATE	 const integer FIELD_DATE = 5 ;
	FIELD_DAY_OF_YEAR	 const integer FIELD_DAY_OF_YEAR = 6 ;
	FIELD_DAY_OF_WEEK	 const integer FIELD_DAY_OF_WEEK = 7 ;
	FIELD_DAY_OF_WEEK_IN_MONTH	 const integer FIELD_DAY_OF_WEEK_IN_MONTH = 8 ;
	FIELD_AM_PM	 const integer FIELD_AM_PM = 9 ;
	FIELD_HOUR	 const integer FIELD_HOUR = 10 ;
	FIELD_HOUR_OF_DAY	 const integer FIELD_HOUR_OF_DAY = 11 ;
	FIELD_MINUTE	 const integer FIELD_MINUTE = 12 ;
	FIELD_SECOND	 const integer FIELD_SECOND = 13 ;
	FIELD_MILLISECOND	 const integer FIELD_MILLISECOND = 14 ;
	FIELD_ZONE_OFFSET	 const integer FIELD_ZONE_OFFSET = 15 ;
	FIELD_DST_OFFSET	 const integer FIELD_DST_OFFSET = 16 ;
	FIELD_YEAR_WOY	 const integer FIELD_YEAR_WOY = 17 ;
	FIELD_DOW_LOCAL	 const integer FIELD_DOW_LOCAL = 18 ;
	FIELD_EXTENDED_YEAR	 const integer FIELD_EXTENDED_YEAR = 19 ;
	FIELD_JULIAN_DAY	 const integer FIELD_JULIAN_DAY = 20 ;
	FIELD_MILLISECONDS_IN_DAY	 const integer FIELD_MILLISECONDS_IN_DAY = 21 ;
	FIELD_IS_LEAP_MONTH	 const integer FIELD_IS_LEAP_MONTH = 22 ;
	FIELD_FIELD_COUNT 	 const integer FIELD_FIELD_COUNT = 23 ;
	FIELD_DAY_OF_MONTH	 const integer FIELD_DAY_OF_MONTH = 5 ;
	DOW_SUNDAY	 const integer DOW_SUNDAY = 1 ;
	DOW_MONDAY	 const integer DOW_MONDAY = 2 ;
	DOW_TUESDAY	 const integer DOW_TUESDAY = 3 ;
	DOW_WEDNESDAY	 const integer DOW_WEDNESDAY = 4 ;
	DOW_THURSDAY	 const integer DOW_THURSDAY = 5 ;
	DOW_FRIDAY	 const integer DOW_FRIDAY = 6 ;
	DOW_SATURDAY	 const integer DOW_SATURDAY = 7 ;
	DOW_TYPE_WEEKDAY	 const integer DOW_TYPE_WEEKDAY = 0 ;
	DOW_TYPE_WEEKEND	 const integer DOW_TYPE_WEEKEND = 1 ;
	DOW_TYPE_WEEKEND_OFFSET	 const integer DOW_TYPE_WEEKEND_OFFSET = 2 ;
	DOW_TYPE_WEEKEND_CEASE	 const integer DOW_TYPE_WEEKEND_CEASE = 3 ;
	WALLTIME_FIRST	 const integer WALLTIME_FIRST = 1 ;
	WALLTIME_LAST	 const integer WALLTIME_LAST = 0 ;
	WALLTIME_NEXT_VALID	 const integer WALLTIME_NEXT_VALID = 2 ;
	add	public bool add ( int $field , int $amount )	Add a (signed) amount of time to a field
	after	public bool after ( IntlCalendar $calendar )	Whether this objectʼs time is after that of the passed object
	before	public bool before ( IntlCalendar $calendar )	Whether this objectʼs time is before that of the passed object
	clear	public bool clear ([ int $field = NULL ] )	Clear a field or all fields
	__construct	private __construct ( void )	Private constructor for disallowing instantiation
	createInstance	public static IntlCalendar createInstance ([ mixed $timeZone = NULL [, string $locale = NULL ]] )	Create a new IntlCalendar
	equals	public bool equals ( IntlCalendar $calendar )	Compare time of two IntlCalendar objects for equality
	fieldDifference	public int fieldDifference ( float $when , int $field )	Calculate difference between given time and this objectʼs time
	fromDateTime	public static IntlCalendar fromDateTime ( mixed $dateTime )	Create an IntlCalendar from a DateTime object or string
	get	public int get ( int $field )	Get the value for a field
	getActualMaximum	public int getActualMaximum ( int $field )	The maximum value for a field, considering the objectʼs current time
	getActualMinimum	public int getActualMinimum ( int $field )	The minimum value for a field, considering the objectʼs current time
	getAvailableLocales	public static array getAvailableLocales ( void )	Get array of locales for which there is data
	getDayOfWeekType	public int getDayOfWeekType ( int $dayOfWeek )	Tell whether a day is a weekday, weekend or a day that has a transition between the two
	getErrorCode	public int getErrorCode ( void )	Get last error code on the object
	getErrorMessage	public string getErrorMessage ( void )	Get last error message on the object
	getFirstDayOfWeek	public int getFirstDayOfWeek ( void )	Get the first day of the week for the calendarʼs locale
	getGreatestMinimum	public int getGreatestMinimum ( int $field )	Get the largest local minimum value for a field
	getKeywordValuesForLocale	public static Iterator getKeywordValuesForLocale ( string $key , string $locale , boolean $commonlyUsed )	Get set of locale keyword values
	getLeastMaximum	public int getLeastMaximum ( int $field )	Get the smallest local maximum for a field
	getLocale	public string getLocale ( int $localeType )	Get the locale associated with the object
	getMaximum	public int getMaximum ( int $field )	Get the global maximum value for a field
	getMinimalDaysInFirstWeek	public int getMinimalDaysInFirstWeek ( void )	Get minimal number of days the first week in a year or month can have
	getMinimum	public int getMinimum ( int $field )	Get the global minimum value for a field
	getNow	public static float getNow ( void )	Get number representing the current time
	getRepeatedWallTimeOption	public int getRepeatedWallTimeOption ( void )	Get behavior for handling repeating wall time
	getSkippedWallTimeOption	public int getSkippedWallTimeOption ( void )	Get behavior for handling skipped wall time
	getTime	public float getTime ( void )	Get time currently represented by the object
	getTimeZone	public IntlTimeZone getTimeZone ( void )	Get the objectʼs timezone
	getType	public string getType ( void )	Get the calendar type
	getWeekendTransition	public int getWeekendTransition ( string $dayOfWeek )	Get time of the day at which weekend begins or ends
	inDaylightTime	public bool inDaylightTime ( void )	Whether the objectʼs time is in Daylight Savings Time
	isEquivalentTo	public bool isEquivalentTo ( IntlCalendar $calendar )	Whether another calendar is equal but for a different time
	isLenient	public bool isLenient ( void )	Whether date/time interpretation is in lenient mode
	isSet	public bool isSet ( int $field )	Whether a field is set
	isWeekend	public bool isWeekend ([ float $date = NULL ] )	Whether a certain date/time is in the weekend
	roll	public bool roll ( int $field , mixed $amountOrUpOrDown )	Add value to field without carrying into more significant fields
	set	public bool set ( int $field , int $value )	Set a time field or several common fields at once
	set	public bool set ( int $year , int $month [, int $dayOfMonth = NULL [, int $hour = NULL [, int $minute = NULL [, int $second = NULL ]]]] )	Set a time field or several common fields at once
	setFirstDayOfWeek	public bool setFirstDayOfWeek ( int $dayOfWeek )	Set the day on which the week is deemed to start
	setLenient	public ReturnType setLenient ( string $isLenient )	Set whether date/time interpretation is to be lenient
	setRepeatedWallTimeOption	public bool setRepeatedWallTimeOption ( int $wallTimeOption )	Set behavior for handling repeating wall times at negative timezone offset transitions
	setSkippedWallTimeOption	public bool setSkippedWallTimeOption ( int $wallTimeOption )	Set behavior for handling skipped wall times at positive timezone offset transitions
	setTime	public bool setTime ( float $date )	Set the calendar time in milliseconds since the epoch
	setTimeZone	public bool setTimeZone ( mixed $timeZone )	Set the timezone used by this calendar
	toDateTime	public DateTime toDateTime ( void )	Convert an IntlCalendar into a DateTime object
IntlCodePointBreakIterator	DONE	 const integer DONE = -1 ;
	WORD_NONE	 const integer WORD_NONE = 0 ;
	WORD_NONE_LIMIT	 const integer WORD_NONE_LIMIT = 100 ;
	WORD_NUMBER	 const integer WORD_NUMBER = 100 ;
	WORD_NUMBER_LIMIT	 const integer WORD_NUMBER_LIMIT = 200 ;
	WORD_LETTER	 const integer WORD_LETTER = 200 ;
	WORD_LETTER_LIMIT	 const integer WORD_LETTER_LIMIT = 300 ;
	WORD_KANA	 const integer WORD_KANA = 300 ;
	WORD_KANA_LIMIT	 const integer WORD_KANA_LIMIT = 400 ;
	WORD_IDEO	 const integer WORD_IDEO = 400 ;
	WORD_IDEO_LIMIT	 const integer WORD_IDEO_LIMIT = 500 ;
	LINE_SOFT	 const integer LINE_SOFT = 0 ;
	LINE_SOFT_LIMIT	 const integer LINE_SOFT_LIMIT = 100 ;
	LINE_HARD	 const integer LINE_HARD = 100 ;
	LINE_HARD_LIMIT	 const integer LINE_HARD_LIMIT = 200 ;
	SENTENCE_TERM	 const integer SENTENCE_TERM = 0 ;
	SENTENCE_TERM_LIMIT	 const integer SENTENCE_TERM_LIMIT = 100 ;
	SENTENCE_SEP	 const integer SENTENCE_SEP = 100 ;
	SENTENCE_SEP_LIMIT	 const integer SENTENCE_SEP_LIMIT = 200 ;
	getLastCodePoint	public ReturnType getLastCodePoint ( void )	Get last code point passed over after advancing or receding the iterator
	IntlBreakIterator::__construct	private IntlBreakIterator::__construct ( void )
	IntlBreakIterator::createCharacterInstance	public static ReturnType IntlBreakIterator::createCharacterInstance ([ string $"locale" ] )
	IntlBreakIterator::createCodePointInstance	public static ReturnType IntlBreakIterator::createCodePointInstance ( void )
	IntlBreakIterator::createLineInstance	public static ReturnType IntlBreakIterator::createLineInstance ([ string $"locale" ] )
	IntlBreakIterator::createSentenceInstance	public static ReturnType IntlBreakIterator::createSentenceInstance ([ string $"locale" ] )
	IntlBreakIterator::createTitleInstance	public static ReturnType IntlBreakIterator::createTitleInstance ([ string $"locale" ] )
	IntlBreakIterator::createWordInstance	public static ReturnType IntlBreakIterator::createWordInstance ([ string $"locale" ] )
	IntlBreakIterator::current	public ReturnType IntlBreakIterator::current ( void )
	IntlBreakIterator::first	public ReturnType IntlBreakIterator::first ( void )
	IntlBreakIterator::following	public ReturnType IntlBreakIterator::following ( string $"offset" )
	IntlBreakIterator::getErrorCode	public ReturnType IntlBreakIterator::getErrorCode ( void )
	intl_get_error_code	ReturnType intl_get_error_code ( void )
	IntlBreakIterator::getErrorMessage	public ReturnType IntlBreakIterator::getErrorMessage ( void )
	intl_get_error_message	ReturnType intl_get_error_message ( void )
	IntlBreakIterator::getLocale	public ReturnType IntlBreakIterator::getLocale ( string $"locale_type" )
	IntlBreakIterator::getPartsIterator	public ReturnType IntlBreakIterator::getPartsIterator ([ string $"key_type" ] )
	IntlBreakIterator::getText	public ReturnType IntlBreakIterator::getText ( void )
	IntlBreakIterator::isBoundary	public ReturnType IntlBreakIterator::isBoundary ( string $"offset" )
	IntlBreakIterator::last	public ReturnType IntlBreakIterator::last ( void )
	IntlBreakIterator::next	public ReturnType IntlBreakIterator::next ([ string $"offset" ] )
	IntlBreakIterator::preceding	public ReturnType IntlBreakIterator::preceding ( string $"offset" )
	IntlBreakIterator::previous	public ReturnType IntlBreakIterator::previous ( void )
	IntlBreakIterator::setText	public ReturnType IntlBreakIterator::setText ( string $"text" )
IntlDateFormatter	__construct	public __construct ( string $locale , int $datetype , int $timetype [, mixed $timezone = NULL [, mixed $calendar = NULL [, string $pattern = '' ]]] )
	create	public static IntlDateFormatter create ( string $locale , int $datetype , int $timetype [, mixed $timezone = NULL [, mixed $calendar = NULL [, string $pattern = '' ]]] )	Date Formatter を作成する
	format	public string format ( mixed $value )	日付/時刻 の値を文字列としてフォーマットする
	formatObject	public static string formatObject ( object $object [, mixed $format = NULL [, string $locale = NULL ]] )	オブジェクトの書式を設定する
	getCalendar	int getCalendar ( void )	IntlDateFormatter が使用するカレンダー型を取得する
	getDateType	public int getDateType ( void )	IntlDateFormatter が使用する日付形式を取得する
	getErrorCode	public int getErrorCode ( void )	直近の操作のエラーコードを取得する
	getErrorMessage	public string getErrorMessage ( void )	直近の操作のエラーテキストを取得する
	getLocale	public string getLocale ([ int $which ] )	Formatter が使用するロケールを取得する
	getPattern	public string getPattern ( void )	IntlDateFormatter が使用するパターンを取得する
	getTimeType	public int getTimeType ( void )	IntlDateFormatter が使用する時刻形式を取得する
	getTimeZoneId	public string getTimeZoneId ( void )	IntlDateFormatter が使用するタイムゾーン ID を取得する
	getCalendarObject	public IntlCalendar getCalendarObject ( void )	カレンダーオブジェクトのコピーを取得する
	getTimeZone	public IntlTimeZone getTimeZone ( void )	タイムゾーンを取得する
	isLenient	public bool isLenient ( void )	IntlDateFormatter で使用する寛大さを取得する
	localtime	public array localtime ( string $value [, int &$position ] )	文字列をパースして、フィールドベースの時刻値にする
	parse	public int parse ( string $value [, int &$position ] )	文字列をパースしてタイムスタンプにする
	setCalendar	bool setCalendar ( mixed $which )	Formatter が使うカレンダー型を設定する
	setLenient	public bool setLenient ( bool $lenient )	パーサの寛大さを設定する
	setPattern	public bool setPattern ( string $pattern )	IntlDateFormatter が使用するパターンを設定する
	setTimeZoneId	public bool setTimeZoneId ( string $zone )	使用するタイムゾーンを設定する
	setTimeZone	public boolean setTimeZone ( mixed $zone )	タイムゾーンを設定する
IntlException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
IntlIterator	current	public ReturnType current ( void )	Get the current element
	key	public ReturnType key ( void )	Get the current key
	next	public ReturnType next ( void )	Move forward to the next element
	rewind	public ReturnType rewind ( void )	Rewind the iterator to the first element
	valid	public ReturnType valid ( void )	Check if curent position is valid
IntlPartsIterator	KEY_SEQUENTIAL	 const integer KEY_SEQUENTIAL = 0 ;
	KEY_LEFT	 const integer KEY_LEFT = 1 ;
	KEY_RIGHT	 const integer KEY_RIGHT = 2 ;
	getBreakIterator	public ReturnType getBreakIterator ( void )	Get IntlBreakIterator backing this parts iterator
	IntlIterator::current	public ReturnType IntlIterator::current ( void )
	IntlIterator::key	public ReturnType IntlIterator::key ( void )
	IntlIterator::next	public ReturnType IntlIterator::next ( void )
	IntlIterator::rewind	public ReturnType IntlIterator::rewind ( void )
	IntlIterator::valid	public ReturnType IntlIterator::valid ( void )
IntlRuleBasedBreakIterator	DONE	 const integer DONE = -1 ;
	WORD_NONE	 const integer WORD_NONE = 0 ;
	WORD_NONE_LIMIT	 const integer WORD_NONE_LIMIT = 100 ;
	WORD_NUMBER	 const integer WORD_NUMBER = 100 ;
	WORD_NUMBER_LIMIT	 const integer WORD_NUMBER_LIMIT = 200 ;
	WORD_LETTER	 const integer WORD_LETTER = 200 ;
	WORD_LETTER_LIMIT	 const integer WORD_LETTER_LIMIT = 300 ;
	WORD_KANA	 const integer WORD_KANA = 300 ;
	WORD_KANA_LIMIT	 const integer WORD_KANA_LIMIT = 400 ;
	WORD_IDEO	 const integer WORD_IDEO = 400 ;
	WORD_IDEO_LIMIT	 const integer WORD_IDEO_LIMIT = 500 ;
	LINE_SOFT	 const integer LINE_SOFT = 0 ;
	LINE_SOFT_LIMIT	 const integer LINE_SOFT_LIMIT = 100 ;
	LINE_HARD	 const integer LINE_HARD = 100 ;
	LINE_HARD_LIMIT	 const integer LINE_HARD_LIMIT = 200 ;
	SENTENCE_TERM	 const integer SENTENCE_TERM = 0 ;
	SENTENCE_TERM_LIMIT	 const integer SENTENCE_TERM_LIMIT = 100 ;
	SENTENCE_SEP	 const integer SENTENCE_SEP = 100 ;
	SENTENCE_SEP_LIMIT	 const integer SENTENCE_SEP_LIMIT = 200 ;
	__construct	public __construct ( string $rules [, string $areCompiled ] )	Create iterator from ruleset
	getBinaryRules	public ReturnType getBinaryRules ( void )	Get the binary form of compiled rules
	getRules	public ReturnType getRules ( void )	Get the rule set used to create this object
	getRuleStatus	public ReturnType getRuleStatus ( void )	Get the largest status value from the break rules that determined the current break position
	getRuleStatusVec	public ReturnType getRuleStatusVec ( void )	Get the status values from the break rules that determined the current break position
	IntlBreakIterator::__construct	private IntlBreakIterator::__construct ( void )
	IntlBreakIterator::createCharacterInstance	public static ReturnType IntlBreakIterator::createCharacterInstance ([ string $"locale" ] )
	IntlBreakIterator::createCodePointInstance	public static ReturnType IntlBreakIterator::createCodePointInstance ( void )
	IntlBreakIterator::createLineInstance	public static ReturnType IntlBreakIterator::createLineInstance ([ string $"locale" ] )
	IntlBreakIterator::createSentenceInstance	public static ReturnType IntlBreakIterator::createSentenceInstance ([ string $"locale" ] )
	IntlBreakIterator::createTitleInstance	public static ReturnType IntlBreakIterator::createTitleInstance ([ string $"locale" ] )
	IntlBreakIterator::createWordInstance	public static ReturnType IntlBreakIterator::createWordInstance ([ string $"locale" ] )
	IntlBreakIterator::current	public ReturnType IntlBreakIterator::current ( void )
	IntlBreakIterator::first	public ReturnType IntlBreakIterator::first ( void )
	IntlBreakIterator::following	public ReturnType IntlBreakIterator::following ( string $"offset" )
	IntlBreakIterator::getErrorCode	public ReturnType IntlBreakIterator::getErrorCode ( void )
	intl_get_error_code	ReturnType intl_get_error_code ( void )
	IntlBreakIterator::getErrorMessage	public ReturnType IntlBreakIterator::getErrorMessage ( void )
	intl_get_error_message	ReturnType intl_get_error_message ( void )
	IntlBreakIterator::getLocale	public ReturnType IntlBreakIterator::getLocale ( string $"locale_type" )
	IntlBreakIterator::getPartsIterator	public ReturnType IntlBreakIterator::getPartsIterator ([ string $"key_type" ] )
	IntlBreakIterator::getText	public ReturnType IntlBreakIterator::getText ( void )
	IntlBreakIterator::isBoundary	public ReturnType IntlBreakIterator::isBoundary ( string $"offset" )
	IntlBreakIterator::last	public ReturnType IntlBreakIterator::last ( void )
	IntlBreakIterator::next	public ReturnType IntlBreakIterator::next ([ string $"offset" ] )
	IntlBreakIterator::preceding	public ReturnType IntlBreakIterator::preceding ( string $"offset" )
	IntlBreakIterator::previous	public ReturnType IntlBreakIterator::previous ( void )
	IntlBreakIterator::setText	public ReturnType IntlBreakIterator::setText ( string $"text" )
IntlTimeZone	DISPLAY_SHORT	 const integer DISPLAY_SHORT = 1 ;
	DISPLAY_LONG	 const integer DISPLAY_LONG = 2 ;
	countEquivalentIDs	public static integer countEquivalentIDs ( string $zoneId )	指定した ID を含む等価グループの中にある ID の数を取得する
	createDefault	public static IntlTimeZone createDefault ( void )	このホストのデフォルトタイムゾーンの新しいコピーを作る
	createEnumeration	public static IntlIterator createEnumeration ([ mixed $countryOrRawOffset ] )	指定した国あるいはオフセットに関連するタイムゾーン ID の一覧を取得する
	createTimeZone	public static IntlTimeZone createTimeZone ( string $zoneId )	指定した ID のタイムゾーンオブジェクトを作る
	fromDateTimeZone	public static IntlTimeZone fromDateTimeZone ( DateTimeZone $zoneId )	DateTimeZone からタイムゾーンオブジェクトを作る
	getCanonicalID	public static string getCanonicalID ( string $zoneId [, bool &$isSystemID ] )	指定したタイムゾーン ID の、正式なシステムタイムゾーン ID あるいは正規化したカスタムタイムゾーン ID を取得する
	getDisplayName	public string getDisplayName ([ bool $isDaylight [, integer $style [, string $locale ]]] )	このタイムゾーンの、ユーザー向けに表示する名前を取得する
	getDSTSavings	public integer getDSTSavings ( void )	ローカルの標準時刻からローカルの実測時刻を得るために加算する時間を取得する
	getEquivalentID	public static string getEquivalentID ( string $zoneId , integer $index )	指定した ID を含む等価グループの ID を取得する
	getErrorCode	public integer getErrorCode ( void )	直近のエラーコードを取得する
	getErrorMessage	public string getErrorMessage ( void )	直近のエラーメッセージを取得する
	getGMT	public static IntlTimeZone getGMT ( void )	GMT (UTC) タイムゾーンを作る
	getID	public string getID ( void )	タイムゾーン ID を取得する
	getOffset	public integer getOffset ( float $date , bool $local , integer &$rawOffset , integer &$dstOffset )	指定した時刻の、GMT へのオフセットを取得する
	getRawOffset	public integer getRawOffset ( void )	(夏時間を考慮せずに) GMT へのオフセットを取得する
	getTZDataVersion	public static string getTZDataVersion ( void )	ICU が使っているタイムゾーンデータのバージョンを取得する
	hasSameRules	public bool hasSameRules ( IntlTimeZone $otherTimeZone )	このタイムゾーンが別のタイムゾーンと同じルールおよびオフセットを使っているかどうかを調べる
	toDateTimeZone	public DateTimeZone toDateTimeZone ( void )	DateTimeZone オブジェクトに変換する
	useDaylightTime	public bool useDaylightTime ( void )	このタイムゾーンが夏時間を採用しているかどうかを調べる
InvalidArgumentException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
Iterator	current	abstract public mixed current ( void )	現在の要素を返す
	key	abstract public scalar key ( void )	現在の要素のキーを返す
	next	abstract public void next ( void )	次の要素に進む
	rewind	abstract public void rewind ( void )	イテレータの最初の要素に巻き戻す
	valid	abstract public boolean valid ( void )	現在位置が有効かどうかを調べる
IteratorAggregate	getIterator	abstract public Traversable getIterator ( void )	外部イテレータを取得する
IteratorIterator	__construct	public __construct ( Traversable $iterator )	traversable な何かからイテレータを作成する
	current	public mixed current ( void )	現在の値を取得する
	getInnerIterator	public Traversable getInnerIterator ( void )	内部イテレータを取得する
	key	public scalar key ( void )	現在の要素のキーを取得する
	next	public void next ( void )	次の要素に移動する
	rewind	public void rewind ( void )	最初の要素に巻き戻す
	valid	public bool valid ( void )	イテレータが有効かどうかを調べる
JsonSerializable	jsonSerialize	abstract public mixed jsonSerialize ( void )	JSON にシリアライズしたいデータを指定する
Judy	BITSET	 const integer BITSET = 1 ;
	INT_TO_INT	 const integer INT_TO_INT = 2 ;
	INT_TO_MIXED	 const integer INT_TO_MIXED = 3 ;
	STRING_TO_INT	 const integer STRING_TO_INT = 4 ;
	STRING_TO_MIXED	 const integer STRING_TO_MIXED = 5 ;
	byCount	public int byCount ( int $nth_index )	Locate the Nth index present in the Judy array
	__construct	public __construct ( int $judy_type )	Construct a new Judy object
	count	public int count ([ int $index_start = 0 [, int $index_end = -1 ]] )	Count the number of elements in the Judy array
	__destruct	public void __destruct ( void )	Destruct a Judy object
	first	public mixed first ([ mixed $index ] )	Search for the first index in the Judy array
	firstEmpty	public int firstEmpty ([ mixed $index = 0 ] )	Search for the first absent index in the Judy array
	free	public int free ( void )	Free the entire Judy array
	getType	public int getType ( void )	Return the type of the current Judy array
	last	public void last ([ string $index ] )	Search for the last index in the Judy array
	lastEmpty	public int lastEmpty ([ int $index = -1 ] )	Search for the last absent index in the Judy array
	memoryUsage	public int memoryUsage ( void )	Return the memory used by the Judy array
	next	public mixed next ( mixed $index )	Search for the next index in the Judy array
	nextEmpty	public int nextEmpty ( int $index )	Search for the next absent index in the Judy array
	offsetExists	public bool offsetExists ( mixed $offset )	Whether a offset exists
	offsetGet	public mixed offsetGet ( mixed $offset )	Offset to retrieve
	offsetSet	public bool offsetSet ( mixed $offset , mixed $value )	Offset to set
	offsetUnset	public bool offsetUnset ( mixed $offset )	Offset to unset
	prev	public mixed prev ( mixed $index )	Search for the previous index in the Judy array
	prevEmpty	public int prevEmpty ( mixed $index )	Search for the previous absent index in the Judy array
	size	public void size ( void )	Return the size of the current Judy array
KTaglib_MPEG_AudioProperties	KTaglib_MPEG_AudioProperties::getBitrate	public int KTaglib_MPEG_AudioProperties::getBitrate ( void )
	KTaglib_MPEG_AudioProperties::getChannels	public int KTaglib_MPEG_AudioProperties::getChannels ( void )
	KTaglib_MPEG_AudioProperties::getLayer	public int KTaglib_MPEG_AudioProperties::getLayer ( void )
	KTaglib_MPEG_AudioProperties::getLength	public int KTaglib_MPEG_AudioProperties::getLength ( void )
	KTaglib_MPEG_AudioProperties::getSampleBitrate	public int KTaglib_MPEG_AudioProperties::getSampleBitrate ( void )
	KTaglib_MPEG_AudioProperties::getVersion	public int KTaglib_MPEG_AudioProperties::getVersion ( void )
	KTaglib_MPEG_AudioProperties::isCopyrighted	public bool KTaglib_MPEG_AudioProperties::isCopyrighted ( void )
	KTaglib_MPEG_AudioProperties::isOriginal	public bool KTaglib_MPEG_AudioProperties::isOriginal ( void )
	KTaglib_MPEG_AudioProperties::isProtectionEnabled	public bool KTaglib_MPEG_AudioProperties::isProtectionEnabled ( void )
KTaglib_MPEG_File	getAudioProperties	public KTaglib_MPEG_File getAudioProperties ( void )
	getID3v1Tag	public KTaglib_ID3v1_Tag getID3v1Tag ([ bool $create = false ] )
	getID3v2Tag	public KTaglib_ID3v2_Tag getID3v2Tag ([ bool $create = false ] )
KTaglib_Tag	getAlbum	public string getAlbum ( void )
	getArtist	public string getArtist ( void )
	getComment	public string getComment ( void )
	getGenre	public string getGenre ( void )
	getTitle	public string getTitle ( void )
	getTrack	public int getTrack ( void )
	getYear	public int getYear ( void )
	isEmpty	public bool isEmpty ( void )
Lapack	eigenValues	public static array eigenValues ( array $a [, array $left [, array $right ]] )	This function returns the eigenvalues for a given square matrix
	identity	public static array identity ( int $n )	Return an identity matrix
	leastSquaresByFactorisation	public static array leastSquaresByFactorisation ( array $a , array $b )	Calculate the linear least squares solution of a matrix using QR factorisation
	leastSquaresBySVD	public static array leastSquaresBySVD ( array $a , array $b )	Solve the linear least squares problem, using SVD
	pseudoInverse	public static array pseudoInverse ( array $a )	Calculate the inverse of a matrix
	singularValues	public static array singularValues ( array $a )	Calculated the singular values of a matrix
	solveLinearEquation	public static array solveLinearEquation ( array $a , array $b )	Solve a system of linear equations
lapackexception	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
LengthException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
libXMLError	$level	 public int $level ;
	$code	 public int $code ;
	$column	 public int $column ;
	$message	 public string $message ;
	$file	 public string $file ;
	$line	 public int $line ;
LimitIterator	__construct	public __construct ( Iterator $iterator [, int $offset = 0 [, int $count = -1 ]] )	LimitIterator を作成する
	current	public mixed current ( void )	現在の要素を取得する
	getInnerIterator	public Iterator getInnerIterator ( void )	内部イテレータを取得する
	getPosition	public int getPosition ( void )	現在の位置を返す
	key	public mixed key ( void )	現在のキーを取得する
	next	public void next ( void )	イテレータを前に移動する
	rewind	public void rewind ( void )	イテレータを指定した開始オフセットに巻き戻す
	seek	public int seek ( int $position )	与えられた位置に移動する
	valid	public bool valid ( void )	現在の要素が有効かどうかをチェックする
Locale	acceptFromHttp	public static string acceptFromHttp ( string $header )	最もあてはまるロケールを HTTP "Accept-Language" ヘッダにもとづいて探す
	canonicalize	public static string canonicalize ( string $locale )	ロケール文字列を正規化する
	composeLocale	public static string composeLocale ( array $subtags )	正しく並べ替えて区切られたロケール ID を返す
	filterMatches	public static bool filterMatches ( string $langtag , string $locale [, bool $canonicalize = false ] )	言語タグフィルタがロケールにマッチするかどうかを調べる
	getAllVariants	public static array getAllVariants ( string $locale )	入力ロケールの変化系を取得する
	getDefault	public static string getDefault ( void )	INTL のグローバル 'default_locale' からデフォルトのロケールを取得する
	getDisplayLanguage	public static string getDisplayLanguage ( string $locale [, string $in_locale ] )	入力ロケールの言語の表示名を、適切に地域化して返す
	getDisplayName	public static string getDisplayName ( string $locale [, string $in_locale ] )	入力ロケールの表示名を、適切に地域化して返す
	getDisplayRegion	public static string getDisplayRegion ( string $locale [, string $in_locale ] )	入力ロケールの地域の表示名を、適切に地域化して返す
	getDisplayScript	public static string getDisplayScript ( string $locale [, string $in_locale ] )	入力ロケールの文字の表示名を、適切に地域化して返す
	getDisplayVariant	public static string getDisplayVariant ( string $locale [, string $in_locale ] )	入力ロケールの変化形の表示名を、適切に地域化して返す
	getKeywords	public static array getKeywords ( string $locale )	入力ロケールのキーワードを取得する
	getPrimaryLanguage	public static string getPrimaryLanguage ( string $locale )	入力ロケールのプライマリ言語を取得する
	getRegion	public static string getRegion ( string $locale )	入力ロケールの地域を取得する
	getScript	public static string getScript ( string $locale )	入力ロケールの文字を取得する
	lookup	public static string lookup ( array $langtag , string $locale [, bool $canonicalize = false [, string $default ]] )	その言語にマッチする言語タグの一覧を検索する
	parseLocale	public static array parseLocale ( string $locale )	ロケール ID のサブタグ要素を連想配列で返す
	setDefault	public static bool setDefault ( string $locale )	デフォルトの実行時ロケールを設定する
LogicException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
Lua	LUA_VERSION	 const string LUA_VERSION = Lua 5.1.4 ;
	assign	public mixed assign ( string $name , string $value )	PHP 変数を Lua にアサイン
	call	public mixed call ( callable $lua_func [, array $args [, int $use_self = 0 ]] )	Lua 関数を呼び出す
	__call	public mixed __call ( callable $lua_func [, array $args [, int $use_self = 0 ]] )	Lua 関数を呼び出す
	__construct	public __construct ( string $lua_script_file = NULL )	Lua コンストラクタ
	eval	public mixed eval ( string $statements )	文字列を Lua コードとして評価
	getVersion	public string getVersion ( void )	getversion 用途
	include	public mixed include ( string $file )	Lua スクリプトファイルをパース
	registerCallback	public mixed registerCallback ( string $name , callable $function )	PHP 関数を Lua に登録
LuaClosure	__invoke	public void __invoke ( mixed $arg [, mixed $... ] )	luaclosure を起動
Memcache	add	bool add ( string $key , mixed $var [, int $flag [, int $expire ]] )	サーバーに項目を追加する
	addServer	bool addServer ( string $host [, int $port = 11211 [, bool $persistent [, int $weight [, int $timeout [, int $retry_interval [, bool $status [, callable $failure_callback [, int $timeoutms ]]]]]]]] )	コネクションプールに memcached サーバーを追加する
	close	bool close ( void )	memcached サーバーとの接続を閉じる
	connect	bool connect ( string $host [, int $port [, int $timeout ]] )	memcached サーバーへの接続をオープンする
	decrement	int decrement ( string $key [, int $value = 1 ] )	項目の値を減らす
	delete	bool delete ( string $key [, int $timeout = 0 ] )	サーバーから項目を削除する
	flush	bool flush ( void )	サーバー上のすべての既存項目を消去する
	get	string get ( string $key [, int &$flags ] )	サーバーから項目を取得する
	getExtendedStats	array getExtendedStats ([ string $type [, int $slabid [, int $limit = 100 ]]] )	プール内のすべてのサーバーの統計情報を取得する
	getServerStatus	int getServerStatus ( string $host [, int $port = 11211 ] )	サーバーの状態を返す
	getStats	array getStats ([ string $type [, int $slabid [, int $limit = 100 ]]] )	サーバーの統計情報を取得する
	getVersion	string getVersion ( void )	サーバーのバージョンを返す
	increment	int increment ( string $key [, int $value = 1 ] )	項目の値を増やす
	pconnect	mixed pconnect ( string $host [, int $port [, int $timeout ]] )	memcached サーバーへの持続的な接続をオープンする
	replace	bool replace ( string $key , mixed $var [, int $flag [, int $expire ]] )	既存項目の値を置換する
	set	bool set ( string $key , mixed $var [, int $flag [, int $expire ]] )	データをサーバーに格納する
	setCompressThreshold	bool setCompressThreshold ( int $threshold [, float $min_savings ] )	大きな値に対する自動圧縮処理を有効にする
	setServerParams	bool setServerParams ( string $host [, int $port = 11211 [, int $timeout [, int $retry_interval = false [, bool $status [, callable $failure_callback ]]]]] )	サーバーのパラメータおよび状態を、実行時に変更する
Memcached	__construct	public __construct ([ string $persistent_id ] )	Memcached のインスタンスを作成する
	add	public bool add ( string $key , mixed $value [, int $expiration ] )	アイテムを新しいキーで追加する
	addByKey	public bool addByKey ( string $server_key , string $key , mixed $value [, int $expiration ] )	指定したサーバーにアイテムを新しいキーで追加する
	addServer	public bool addServer ( string $host , int $port [, int $weight = 0 ] )	サーバーをサーバープールに追加する
	addServers	public bool addServers ( array $servers )	複数のサーバーをサーバープールに追加する
	append	public bool append ( string $key , string $value )	データを既存のアイテムに追記する
	appendByKey	public bool appendByKey ( string $server_key , string $key , string $value )	指定したサーバーでデータを既存のアイテムに追記する
	cas	public bool cas ( float $cas_token , string $key , mixed $value [, int $expiration ] )	アイテムを比較して入れ替える
	casByKey	public bool casByKey ( float $cas_token , string $server_key , string $key , mixed $value [, int $expiration ] )	指定したサーバーでアイテムを比較して入れ替える
	decrement	public int decrement ( string $key [, int $offset = 1 [, int $initial_value = 0 [, int $expiry = 0 ]]] )	数値アイテムの値を減らす
	decrementByKey	public int decrementByKey ( string $server_key , string $key [, int $offset = 1 [, int $initial_value = 0 [, int $expiry = 0 ]]] )	指定したサーバー上にある数値アイテムの値を減らす
	delete	public bool delete ( string $key [, int $time = 0 ] )	アイテムを削除する
	deleteByKey	public bool deleteByKey ( string $server_key , string $key [, int $time = 0 ] )	指定したサーバーからアイテムを削除する
	deleteMulti	public bool deleteMulti ( array $keys [, int $time = 0 ] )	複数のアイテムを削除する
	deleteMultiByKey	public bool deleteMultiByKey ( string $server_key , array $keys [, int $time = 0 ] )	指定したサーバーから複数のアイテムを削除する
	fetch	public array fetch ( void )	次の結果を取得する
	fetchAll	public array fetchAll ( void )	残りのすべての結果を取得する
	flush	public bool flush ([ int $delay = 0 ] )	キャッシュ内のすべてのアイテムを無効にする
	get	public mixed get ( string $key [, callable $cache_cb [, float &$cas_token ]] )	アイテムを取得する
	getAllKeys	public array getAllKeys ( void )	すべてのサーバーのキーを取得する
	getByKey	public mixed getByKey ( string $server_key , string $key [, callable $cache_cb [, float &$cas_token ]] )	指定したサーバーからアイテムを取得する
	getDelayed	public bool getDelayed ( array $keys [, bool $with_cas [, callable $value_cb ]] )	複数のアイテムを要求する
	getDelayedByKey	public bool getDelayedByKey ( string $server_key , array $keys [, bool $with_cas [, callable $value_cb ]] )	指定したサーバーに複数のアイテムを要求する
	getMulti	public mixed getMulti ( array $keys [, array &$cas_tokens [, int $flags ]] )	複数のアイテムを取得する
	getMultiByKey	public array getMultiByKey ( string $server_key , array $keys [, string &$cas_tokens [, int $flags ]] )	指定したサーバーから複数のアイテムを取得する
	getOption	public mixed getOption ( int $option )	Memcached のオプションの値を取得する
	getResultCode	public int getResultCode ( void )	直近の操作の結果コードを返す
	getResultMessage	public string getResultMessage ( void )	最後に実行した操作の結果を説明したメッセージを返す。
	getServerByKey	public array getServerByKey ( string $server_key )	キーとサーバーを関連付ける
	getServerList	public array getServerList ( void )	プール内のサーバーの一覧を取得する
	getStats	public array getStats ( void )	サーバープールの統計情報を取得する
	getVersion	public array getVersion ( void )	サーバープールのバージョン情報を取得する
	increment	public int increment ( string $key [, int $offset = 1 [, int $initial_value = 0 [, int $expiry = 0 ]]] )	数値アイテムの値を増やす
	incrementByKey	public int incrementByKey ( string $server_key , string $key [, int $offset = 1 [, int $initial_value = 0 [, int $expiry = 0 ]]] )	指定したサーバー上にある数値アイテムの値を増やす
	isPersistent	public bool isPersistent ( void )	memcache への接続で持続的接続を使っているかどうかを調べる
	isPristine	public bool isPristine ( void )	直近に作られたインスタンスかどうかを調べる
	prepend	public bool prepend ( string $key , string $value )	既存のアイテムの前にデータを付加する
	prependByKey	public bool prependByKey ( string $server_key , string $key , string $value )	指定したサーバーで既存のアイテムの前にデータを付加する
	quit	public bool quit ( void )	開いている接続を閉じる
	replace	public bool replace ( string $key , mixed $value [, int $expiration ] )	既存のキーのアイテムを入れ替える
	replaceByKey	public bool replaceByKey ( string $server_key , string $key , mixed $value [, int $expiration ] )	指定したサーバーで既存のキーのアイテムを入れ替える
	resetServerList	public bool resetServerList ( void )	サーバーリストからすべてのサーバーを消去する
	set	public bool set ( string $key , mixed $value [, int $expiration ] )	アイテムを格納する
	setByKey	public bool setByKey ( string $server_key , string $key , mixed $value [, int $expiration ] )	指定したサーバーにアイテムを格納する
	setMulti	public bool setMulti ( array $items [, int $expiration ] )	複数のアイテムを格納する
	setMultiByKey	public bool setMultiByKey ( string $server_key , array $items [, int $expiration ] )	指定したサーバーで複数のアイテムを格納する
	setOption	public bool setOption ( int $option , mixed $value )	Memcached のオプションの値を設定する
	setOptions	public bool setOptions ( array $options )	Memcached のオプションの値を設定する
	setSaslAuthData	public void setSaslAuthData ( string $username , string $password )	認証用の資格情報を設定する
	touch	public bool touch ( string $key , int $expiration )	アイテムに新しい有効期限を設定する
	touchByKey	public bool touchByKey ( string $server_key , string $key , int $expiration )	指定したサーバー上のアイテムに新しい有効期限を設定する
MemcachedException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
MessageFormatter	__construct	public __construct ( string $locale , string $pattern )
	create	public static MessageFormatter create ( string $locale , string $pattern )	新しいメッセージフォーマッタを作成する
	formatMessage	public static string formatMessage ( string $locale , string $pattern , array $args )	手早くメッセージをフォーマットする
	format	public string format ( array $args )	メッセージをフォーマットする
	getErrorCode	public int getErrorCode ( void )	直近の操作のエラーコードを取得する
	getErrorMessage	public string getErrorMessage ( void )	直近の操作のエラーテキストを取得する
	getLocale	public string getLocale ( void )	フォーマッタを作成した際のロケールを取得する
	getPattern	public string getPattern ( void )	フォーマッタが使用するパターンを取得する
	parseMessage	public static array parseMessage ( string $locale , string $pattern , string $source )	手早く入力文字列をパースする
	parse	public array parse ( string $value )	パターンを使用して入力文字列をパースする
	setPattern	public bool setPattern ( string $pattern )	フォーマッタが使用するパターンを設定する
Mongo	connectUtil	protected bool connectUtil ( void )	データベースサーバーに接続する
	getPoolSize	public static int getPoolSize ( void )	接続プールのサイズを取得する
	getSlave	public string getSlave ( void )	slaveOkay の読み込みに使われているアドレスを返す
	getSlaveOkay	public bool getSlaveOkay ( void )	この接続の slaveOkay 設定を取得する
	poolDebug	public array poolDebug ( void )	すべての接続プールに関する情報を返す
	setPoolSize	public static bool setPoolSize ( int $size )	新しい接続プールのサイズを設定する
	setSlaveOkay	public bool setSlaveOkay ([ bool $ok = true ] )	この接続の slaveOkay の設定を変更する
	switchSlave	public string switchSlave ( void )	slaveOkay 読み込み用の新しいセカンダリを選ぶ
	close	public bool close ([ boolean|string $connection ] )
	connect	public bool connect ( void )
	dropDB	public array dropDB ( mixed $db )
	__get	public MongoDB __get ( string $dbname )
	MongoClient::getConnections	public static array MongoClient::getConnections ( void )
	getHosts	public array getHosts ( void )
	MongoClient::getReadPreference	public array MongoClient::getReadPreference ( void )
	MongoClient::killCursor	public bool MongoClient::killCursor ( string $server_hash , int|MongoInt64 $id )
	listDBs	public array listDBs ( void )
	selectCollection	public MongoCollection selectCollection ( string $db , string $collection )
	selectDB	public MongoDB selectDB ( string $name )
	MongoClient::setReadPreference	public bool MongoClient::setReadPreference ( string $read_preference [, array $tags ] )
	__toString	public string __toString ( void )
MongoBinData	FUNC	 const int FUNC = 1 ;
	BYTE_ARRAY	 const int BYTE_ARRAY = 2 ;
	UUID	 const int UUID = 3 ;
	MD5	 const int MD5 = 5 ;
	CUSTOM	 const int CUSTOM = 128 ;
	$bin	 public string $bin ;
	$type	 public int $type = 2 ;
	__construct	public __construct ( string $data [, int $type = 2 ] )	新しいバイナリデータオブジェクトを作成する
	__toString	public string __toString ( void )	このバイナリデータオブジェクトの文字列表現
MongoClient	VERSION	 const string VERSION ;
	DEFAULT_HOST	 const string DEFAULT_HOST = "localhost" ;
	DEFAULT_PORT	 const int DEFAULT_PORT = 27017 ;
	RP_PRIMARY	 const string RP_PRIMARY = "primary" ;
	RP_PRIMARY_PREFERRED	 const string RP_PRIMARY_PREFERRED = "primaryPreferred" ;
	RP_SECONDARY	 const string RP_SECONDARY = "secondary" ;
	RP_SECONDARY_PREFERRED	 const string RP_SECONDARY_PREFERRED = "secondaryPreferred" ;
	RP_NEAREST	 const string RP_NEAREST = "nearest" ;
	$connected	 public boolean $connected = FALSE ;
	$status	 public string $status = NULL ;
	$server	 protected string $server = NULL ;
	$persistent	 protected boolean $persistent = NULL ;
	__construct	public __construct ([ string $server = "mongodb://localhost:27017" [, array $options = array("connect" => TRUE) ]] )	新しいデータベース接続オブジェクトを作成する
	Mongo::close	public bool Mongo::close ([ boolean|string $connection ] )
	Mongo::connect	public bool Mongo::connect ( void )
	Mongo::dropDB	public array Mongo::dropDB ( mixed $db )
	Mongo::__get	public MongoDB Mongo::__get ( string $dbname )
	getConnections	public static array getConnections ( void )	開いているすべての接続の情報を返す
	Mongo::getHosts	public array Mongo::getHosts ( void )
	getReadPreference	public array getReadPreference ( void )	この接続の優先読み込みを取得する
	killCursor	public bool killCursor ( string $server_hash , int|MongoInt64 $id )	サーバー上の指定したカーソルを削除する
	Mongo::listDBs	public array Mongo::listDBs ( void )
	Mongo::selectCollection	public MongoCollection Mongo::selectCollection ( string $db , string $collection )
	Mongo::selectDB	public MongoDB Mongo::selectDB ( string $name )
	setReadPreference	public bool setReadPreference ( string $read_preference [, array $tags ] )	この接続の優先読み込みを設定する
	Mongo::__toString	public string Mongo::__toString ( void )
MongoCode	__construct	public __construct ( string $code [, array $scope = array() ] )	新しいコードオブジェクトを作成する
	__toString	public string __toString ( void )	このコードを文字列で返す
MongoCollection	ASCENDING	 const int ASCENDING = 1 ;
	DESCENDING	 const int DESCENDING = -1 ;
	$db	 public MongoDB $db = NULL ;
	$w	 public integer $w ;
	$wtimeout	 public integer $wtimeout ;
	aggregate	public array aggregate ( array $pipeline [, array $op [, array $... ]] )	aggregation フレームワークを使って集約する
	batchInsert	public mixed batchInsert ( array $a [, array $options = array() ] )	複数のドキュメントをコレクションに追加する
	__construct	public __construct ( MongoDB $db , string $name )	新しいコレクションを作成する
	count	public int count ([ array $query = array() [, int $limit = 0 [, int $skip = 0 ]]] )	コレクション内のドキュメント数を数える
	createDBRef	public array createDBRef ( mixed $document_or_id )	データベースへの参照を作成する
	deleteIndex	public array deleteIndex ( string|array $keys )	コレクションからインデックスを削除する
	deleteIndexes	public array deleteIndexes ( void )	コレクションのすべてのインデックスを削除する
	distinct	public array distinct ( string $key [, array $query ] )	コレクション内で、指定したキーに対応する区別できる値の一覧を取得する
	drop	public array drop ( void )	コレクションを削除する
	ensureIndex	public bool ensureIndex ( string|array $key|keys [, array $options = array() ] )	指定したフィールドにインデックスを作成する (すでに存在する場合は何もしない)
	find	public MongoCursor find ([ array $query = array() [, array $fields = array() ]] )	コレクションに問い合わせ、結果セットの MongoCursor を返す
	findAndModify	public array findAndModify ( array $query [, array $update [, array $fields [, array $options ]]] )	ドキュメントを更新して返す
	findOne	public array findOne ([ array $query = array() [, array $fields = array() ]] )	コレクションに問い合わせ、単一の要素を返す
	__get	public MongoCollection __get ( string $name )	コレクションを取得する
	getDBRef	public array getDBRef ( array $ref )	データベース参照が指すドキュメントを取得する
	getIndexInfo	public array getIndexInfo ( void )	このコレクションのインデックスについての情報を返す
	getName	public string getName ( void )	コレクションの名前を返す
	getReadPreference	public array getReadPreference ( void )	このコレクションの優先読み込みを取得する
	getSlaveOkay	public bool getSlaveOkay ( void )	このコレクションの slaveOkay 設定を取得する
	group	public array group ( mixed $keys , array $initial , MongoCode $reduce [, array $options = array() ] )	SQL の GROUP BY コマンドと似た処理を行う
	insert	public bool|array insert ( array|object $a [, array $options = array() ] )	ドキュメントをコレクションに追加する
	remove	public bool|array remove ([ array $criteria = array() [, array $options = array() ]] )	レコードをコレクションから削除する
	save	public mixed save ( array|object $a [, array $options = array() ] )	ドキュメントをコレクションに保存する
	setReadPreference	public bool setReadPreference ( string $read_preference [, array $tags ] )	このコレクションの優先読み込みを設定する
	setSlaveOkay	public bool setSlaveOkay ([ bool $ok = true ] )	このコレクションの slaveOkay の設定を変更する
	toIndexString	static protected string toIndexString ( mixed $keys )	インデックスを指定するキーを、インデックスを指す文字列に変換する
	__toString	public string __toString ( void )
	update	public bool|array update ( array $criteria , array $new_object [, array $options = array() ] )	指定した条件にもとづいてレコードを更新する
	validate	public array validate ([ bool $scan_data = FALSE ] )	コレクションを検証する
MongoCursor	$slaveOkay	 static boolean $slaveOkay = FALSE ;
	$timeout	 static integer $timeout = 30000 ;
	addOption	public MongoCursor addOption ( string $key , mixed $value )	トップレベルの キー/値 のペアをクエリに追加する
	awaitData	public MongoCursor awaitData ([ bool $wait = true ] )	追尾可能なカーソルで、データがないときにしばらく待つかどうかを設定する
	batchSize	public MongoCursor batchSize ( int $batchSize )	ひとつのバッチで返す要素数を制限する
	__construct	public __construct ( MongoClient $connection , string $ns [, array $query = array() [, array $fields = array() ]] )	新しいカーソルを作成する
	count	public int count ([ bool $foundOnly = FALSE ] )	このクエリの結果の数を数える
	current	public array current ( void )	現在の要素を返す
	dead	public bool dead ( void )	このカーソルにまだデータベースから送信されていないドキュメントがあるかどうかを調べる
	doQuery	protected void doQuery ( void )	クエリを実行する
	explain	public array explain ( void )	最適化やデバッグの際に有効な、クエリの explain を返す
	fields	public MongoCursor fields ( array $f )	クエリのフィールドを設定する
	getNext	public array getNext ( void )	このカーソルがさす次のオブジェクトを返し、カーソルを進める
	getReadPreference	public array getReadPreference ( void )	このクエリの優先読み込みを取得する
	hasNext	public bool hasNext ( void )	このカーソルにまだ要素があるかどうかを調べる
	hint	public MongoCursor hint ( mixed $index )	クエリについてのヒントをデータベースに与える
	immortal	public MongoCursor immortal ([ bool $liveForever = true ] )	このカーソルをタイムアウトさせるかどうかを設定する
	info	public array info ( void )	このカーソルの query、fields、limit そして skip を取得する
	key	public string key ( void )	現在の結果の _id を返す
	limit	public MongoCursor limit ( int $num )	返す結果の数を制限する
	next	public void next ( void )	カーソルを次の結果に進める
	partial	public MongoCursor partial ([ bool $okay = true ] )	シャードがダウンしているときにこのクエリが mongos から部分的な結果を返すようにするかどうか
	reset	public void reset ( void )	カーソルを消去する
	rewind	public void rewind ( void )	カーソルを結果セットの先頭に戻す
	setFlag	public MongoCursor setFlag ( int $flag [, bool $set = true ] )	専用のメソッドが存在しない任意のフラグを設定する
	setReadPreference	public bool setReadPreference ( string $read_preference [, array $tags ] )	このクエリの優先読み込みを設定する
	skip	public MongoCursor skip ( int $num )	結果をスキップする
	slaveOkay	public MongoCursor slaveOkay ([ bool $okay = true ] )	このクエリをセカンダリ上で完了できるかどうかを設定する
	snapshot	public MongoCursor snapshot ( void )	このクエリでスナップショットモードを使う
	sort	public MongoCursor sort ( array $fields )	指定したフィールドで結果をソートする
	tailable	public MongoCursor tailable ([ bool $tail = true ] )	このカーソルが、最後の結果を取得した後もオープンしたままにしておくかどうかを設定する
	timeout	public MongoCursor timeout ( int $ms )	このクエリのクライアント側のタイムアウトを設定する
	valid	public bool valid ( void )	カーソルが正しい結果を読んでいるかどうかを調べる
MongoDate	$sec	 public int $sec ;
	$usec	 public int $usec ;
	__construct	public __construct ([ int $sec = time() [, int $usec = 0 ]] )	新しい日付を作成する
	__toString	public string __toString ( void )	この日付の文字列表現を返す
MongoDB	PROFILING_OFF	 const int PROFILING_OFF = 0 ;
	PROFILING_SLOW	 const int PROFILING_SLOW = 1 ;
	PROFILING_ON	 const int PROFILING_ON = 2 ;
	$w	 public integer $w = 1 ;
	$wtimeout	 public integer $wtimeout = 10000 ;
	authenticate	public array authenticate ( string $username , string $password )	このデータベースにログインする
	command	public array command ( array $command [, array $options = array() ] )	データベースコマンドを実行する
	__construct	public __construct ( MongoClient $conn , string $name )	新しいデータベースを作成する
	createCollection	public MongoCollection createCollection ( string $name [, array $options ] )	コレクションを作成する
	createDBRef	public array createDBRef ( string $collection , mixed $document_or_id )	データベース参照を作成する
	drop	public array drop ( void )	このデータベースを削除する
	dropCollection	public array dropCollection ( mixed $coll )	コレクションを削除する [非推奨]
	execute	public array execute ( mixed $code [, array $args = array() ] )	JavaScript コードをデータベースサーバー上で実行する
	forceError	public bool forceError ( void )	データベースのエラーを作成する
	__get	public MongoCollection __get ( string $name )	コレクションを取得する
	getCollectionNames	public array getCollectionNames ([ bool $includeSystemCollections = false ] )	このデータベースのすべてのコレクションを取得する
	getDBRef	public array getDBRef ( array $ref )	データベース参照が指すドキュメントを取得する
	getGridFS	public MongoGridFS getGridFS ([ string $prefix = "fs" ] )	このデータベースに格納されているファイルを扱うためのツールキットを取得する
	getProfilingLevel	public int getProfilingLevel ( void )	このデータベースのプロファイリングレベルを取得する
	getReadPreference	public array getReadPreference ( void )	このデータベースの優先読み込みを取得する
	getSlaveOkay	public bool getSlaveOkay ( void )	このデータベースの slaveOkay 設定を取得する
	lastError	public array lastError ( void )	直近のデータベース操作でエラーが発生したかどうかを調べる
	listCollections	public array listCollections ([ bool $includeSystemCollections = false ] )	このデータベース内のすべての MongoCollection の配列を取得する
	prevError	public array prevError ( void )	データベース操作中の直近に発生したエラーを調べる
	repair	public array repair ([ bool $preserve_cloned_files = FALSE [, bool $backup_original_files = FALSE ]] )	このデータベースを修復・圧縮する
	resetError	public array resetError ( void )	データベースで発生したすべてのエラーをクリアする
	selectCollection	public MongoCollection selectCollection ( string $name )	コレクションを取得する
	setProfilingLevel	public int setProfilingLevel ( int $level )	このデータベースのプロファイリングレベルを設定する
	setReadPreference	public bool setReadPreference ( string $read_preference [, array $tags ] )	このデータベースの優先読み込みを設定する
	setSlaveOkay	public bool setSlaveOkay ([ bool $ok = true ] )	このデータベースの slaveOkay の設定を変更する
	__toString	public string __toString ( void )
MongoDBRef	create	public static array create ( string $collection , mixed $id [, string $database ] )	新しいデータベース参照を作成する
	get	public static array get ( MongoDB $db , array $ref )	参照が指すオブジェクトを取得する
	isRef	public static bool isRef ( mixed $ref )	配列がデータベース参照か否かを調べる
MongoGridFS	$chunks	 public MongoCollection $chunks = NULL ;
	$filesName	 protected string $filesName = NULL ;
	$chunksName	 protected string $chunksName = NULL ;
	__construct	public __construct ( MongoDB $db [, string $prefix = "fs" [, mixed $chunks = "fs" ]] )	新しいファイルコレクションを作成する
	delete	public bool delete ( mixed $id )	ファイルをデータベースから削除する
	drop	public array drop ( void )	ファイルコレクションおよびチャンクコレクションを削除する
	find	public MongoGridFSCursor find ([ array $query = array() [, array $fields = array() ]] )	ファイルを問い合わせる
	findOne	public MongoGridFSFile findOne ([ mixed $query = array() [, mixed $fields = array() ]] )	条件にマッチする単一のファイルを返す
	get	public MongoGridFSFile get ( mixed $id )	ファイルをデータベースから取得する
	put	public mixed put ( string $filename [, array $metadata = array() ] )	ファイルをデータベースに格納する
	remove	public bool remove ([ array $criteria = array() [, array $options = array() ]] )	ファイルをコレクションから削除する
	storeBytes	public mixed storeBytes ( string $bytes [, array $metadata = array() [, array $options = array() ]] )	バイト列をデータベースに格納する
	storeFile	public mixed storeFile ( string $filename [, array $metadata = array() [, array $options = array() ]] )	ファイルをデータベースに格納する
	storeUpload	public mixed storeUpload ( string $name [, array $metadata ] )	アップロードされたファイルをデータベースに格納する
MongoGridFSFile	$file	 public array $file = NULL ;
	$gridfs	 protected MongoGridFS $gridfs = NULL ;
	MongoGridfsFile::__construct	public MongoGridfsFile::__construct ( MongoGridFS $gridfs , array $file )
	getBytes	public string getBytes ( void )	このファイルの内容をバイト文字列で返す
	getFilename	public string getFilename ( void )	このファイルのファイル名を返す
	getResource	public stream getResource ( void )	格納されたファイルを読むために使うリソースを返す
	getSize	public int getSize ( void )	このファイルのサイズを返す
	write	public int write ([ string $filename = NULL ] )	このファイルをファイルシステムに書き込む
MongoId	$id	 public string $id = NULL ;
	__construct	public __construct ([ string $id = NULL ] )	新しい ID を作成する
	getHostname	public static string getHostname ( void )	このマシンの id に使うホスト名を取得する
	getInc	public int getInc ( void )	この id を作るためにインクリメントされた値を取得する
	getPID	public int getPID ( void )	プロセス ID を取得する
	getTimestamp	public int getTimestamp ( void )	この id が作られたときのエポックからの経過秒数を取得する
	__set_state	public static MongoId __set_state ( array $props )	ダミー MongoId を作成する
	__toString	public string __toString ( void )	この ID の 16 進表現を返す
MongoInt32	$value	 public string $value ;
	__construct	public __construct ( string $value )	新しい 32 ビット整数値を作成する
	__toString	public string __toString ( void )	この 32 ビット整数値の文字列表現を返す
MongoInt64	$value	 public string $value ;
	__construct	public __construct ( string $value )	新しい 64 ビット整数値を作成する
	__toString	public string __toString ( void )	この 64 ビット整数値の文字列表現を返す
MongoLog	NONE	 const int NONE = 0 ;
	ALL	 const int ALL = 31 ;
	WARNING	 const int WARNING = 1 ;
	INFO	 const int INFO = 2 ;
	FINE	 const int FINE = 4 ;
	RS	 const int RS = 1 ;
	POOL	 const int POOL = 2 ;
	IO	 const int IO = 4 ;
	SERVER	 const int SERVER = 8 ;
	PARSE	 const int PARSE = 16 ;
	$level	 public int $level ;
	$module	 public int $module ;
	getCallback	public static void getCallback ( void )	以前に設定されたコールバック関数の名前を取得する
	getLevel	public static int getLevel ( void )	ログレベルを取得する
	getModule	public static int getModule ( void )	現在ログを記録しているモジュールを取得する
	setCallback	public static void setCallback ( callable $log_function )	イベントに対応して呼ばれるコールバック関数を設定する
	setLevel	public static void setLevel ( int $level )	ログレベルを設定する
	setModule	public static void setModule ( int $module )	ログに記録するドライバの機能を設定する
MongoPool	getSize	public static int getSize ( void )	接続プールのサイズを取得する
	info	public array info ( void )	すべての接続プールに関する情報を返す
	setSize	public static bool setSize ( int $size )	新しい接続プールのサイズを設定する
MongoRegex	$regex	 public string $regex ;
	$flags	 public string $flags ;
	__construct	public __construct ( string $regex )	新しい正規表現を作成する
	__toString	public string __toString ( void )	この正規表現の文字列表現
MongoResultException	$document	 public $document ;
	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	getDocument	public array getDocument ( void )	結果ドキュメントを取得する
MongoTimestamp	$sec	 public int $sec = 0 ;
	$inc	 public int $inc = 0 ;
	__construct	public __construct ([ int $sec = time() [, int $inc ]] )	新しいタイムスタンプを作成する
	__toString	public string __toString ( void )	このタイムスタンプを文字列形式で返す
MultipleIterator	MIT_NEED_ANY	 const integer MIT_NEED_ANY = 0 ;
	MIT_NEED_ALL	 const integer MIT_NEED_ALL = 1 ;
	MIT_KEYS_NUMERIC	 const integer MIT_KEYS_NUMERIC = 0 ;
	MIT_KEYS_ASSOC	 const integer MIT_KEYS_ASSOC = 2 ;
	__construct	public __construct ([ int $flags = MultipleIterator::MIT_NEED_ALL|MultipleIterator::MIT_KEYS_NUMERIC ] )	新しい MultipleIterator を作成する
	attachIterator	public void attachIterator ( Iterator $iterator [, string $infos ] )	イテレータの情報をアタッチする
	containsIterator	public void containsIterator ( Iterator $iterator )	イテレータがアタッチされているかどうかを調べる
	countIterators	public void countIterators ( void )	アタッチされているイテレータインスタンスの数を取得する
	current	public array current ( void )	登録されているイテレータインスタンスを取得する
	detachIterator	public void detachIterator ( Iterator $iterator )	イテレータをデタッチする
	getFlags	public void getFlags ( void )	フラグの情報を取得する
	key	public array key ( void )	登録されているイテレータインスタンスを取得する
	next	public void next ( void )	アタッチしているすべてのイテレータインスタンスを次に移動させる
	rewind	public void rewind ( void )	アタッチしているすべてのイテレータインスタンスを巻き戻す
	setFlags	public void setFlags ( int $flags )	フラグを設定する
	valid	public void valid ( void )	サブイテレータの有効性を調べる
Mutex	create	final public static long create ([ boolean $lock ] )	ミューテックスを作る
	destroy	final public static boolean destroy ( long $mutex )	ミューテックスを破棄する
	lock	final public static boolean lock ( long $mutex )	ミューテックスを確保する
	trylock	final public static boolean trylock ( long $mutex )	ミューテックスの確保を試みる
	unlock	final public static boolean unlock ( long $mutex [, boolean $destroy ] )	ミューテックスを解放する
mysqli_driver	$client_info	 public readonly string $client_info ;
	$client_version	 public readonly string $client_version ;
	$driver_version	 public readonly string $driver_version ;
	$embedded	 public readonly string $embedded ;
	$reconnect	 public bool $reconnect ;
	$report_mode	 public int $report_mode ;
	embedded_server_end	void embedded_server_end ( void )
	embedded_server_start	bool embedded_server_start ( bool $start , array $arguments , array $groups )
mysqli_result	$current_field	 int $current_field ;
	$field_count	int $field_count;
	$lengths	array $lengths;
	$num_rows	int $num_rows;
	data_seek	bool data_seek ( int $offset )
	fetch_all	mixed fetch_all ([ int $resulttype = MYSQLI_NUM ] )
	fetch_array	mixed fetch_array ([ int $resulttype = MYSQLI_BOTH ] )
	fetch_assoc	array fetch_assoc ( void )
	fetch_field_direct	object fetch_field_direct ( int $fieldnr )
	fetch_field	object fetch_field ( void )
	fetch_fields	array fetch_fields ( void )
	fetch_object	object fetch_object ([ string $class_name [, array $params ]] )
	fetch_row	mixed fetch_row ( void )
	field_seek	bool field_seek ( int $fieldnr )
	free	void free ( void )
mysqli_sql_exception	$sqlstate	 protected string $sqlstate ;
	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
mysqli_stmt	$affected_rows	int $affected_rows;
	$errno	int $errno;
	$error_list	array $error_list;
	$error	string $error;
	$field_count	int $field_count;
	$insert_id	int $insert_id;
	$num_rows	int $num_rows;
	$param_count	int $param_count;
	$sqlstate	string $sqlstate;
	attr_get	int attr_get ( int $attr )
	attr_set	bool attr_set ( int $attr , int $mode )
	bind_param	bool bind_param ( string $types , mixed &$var1 [, mixed &$... ] )
	bind_result	bool bind_result ( mixed &$var1 [, mixed &$... ] )
	close	bool close ( void )
	data_seek	void data_seek ( int $offset )
	execute	bool execute ( void )
	fetch	bool fetch ( void )
	free_result	void free_result ( void )
	get_result	mysqli_result get_result ( void )
	get_warnings	object get_warnings ( mysqli_stmt $stmt )
	prepare	mixed prepare ( string $query )
	reset	bool reset ( void )
	result_metadata	mysqli_result result_metadata ( void )
	send_long_data	bool send_long_data ( int $param_nr , string $data )
	store_result	bool store_result ( void )
mysqli_warning	$message	 public $message ;
	$sqlstate	 public $sqlstate ;
	$errno	 public $errno ;
	__construct	public __construct ( void )
	next	public void next ( void )
mysqli	$affected_rows	int $affected_rows;
	$client_info	string $client_info;
	$client_version	int $client_version;
	$connect_errno	string $connect_errno;
	$connect_error	string $connect_error;
	$errno	int $errno;
	$error_list	array $error_list;
	$error	string $error;
	$field_count	int $field_count;
	$client_version	int $client_version;
	$host_info	string $host_info;
	$protocol_version	string $protocol_version;
	$server_info	string $server_info;
	$server_version	int $server_version;
	$info	string $info;
	$insert_id	mixed $insert_id;
	$sqlstate	string $sqlstate;
	$thread_id	int $thread_id;
	$warning_count	int $warning_count;
	__construct	__construct ([ string $host = ini_get("mysqli.default_host") [, string $username = ini_get("mysqli.default_user") [, string $passwd = ini_get("mysqli.default_pw") [, string $dbname = "" [, int $port = ini_get("mysqli.default_port") [, string $socket = ini_get("mysqli.default_socket") ]]]]]] )	新規に MySQL サーバーへの接続をオープンする
	autocommit	bool autocommit ( bool $mode )	データベース更新の自動コミットをオンまたはオフにする
	change_user	bool change_user ( string $user , string $password , string $database )	指定されたデータベース接続のユーザー名を変更する
	character_set_name	string character_set_name ( void )	データベース接続のデフォルトの文字コードセットを返す
	close	bool close ( void )	事前にオープンしているデータベース接続を閉じる
	commit	bool commit ([ int $flags [, string $name ]] )	現在のトランザクションをコミットする
	debug	bool debug ( string $message )	デバッグ操作を行う
	dump_debug_info	bool dump_debug_info ( void )	デバッグ情報をログに出力する
	get_charset	object get_charset ( void )	文字セットオブジェクトを返す
	get_client_info	string get_client_info ( void )	MySQL クライアント情報を取得する
	get_connection_stats	bool get_connection_stats ( void )	クライアント接続に関する統計情報を返す
	get_warnings	mysqli_warning get_warnings ( void )	SHOW WARNINGS の結果を取得する
	init	mysqli init ( void )	MySQLi を初期化し、mysqli_real_connect() で使用するリソースを返す
	kill	bool kill ( int $processid )	サーバーに MySQL スレッドの停止を問い合わせる
	more_results	bool more_results ( void )	マルチクエリからの結果がまだ残っているかどうかを調べる
	multi_query	bool multi_query ( string $query )	データベース上でクエリを実行する
	next_result	bool next_result ( void )	multi_query の、次の結果を準備する
	options	bool options ( int $option , mixed $value )	オプションを設定する
	ping	bool ping ( void )	サーバーとの接続をチェックし、もし切断されている場合は再接続を試みる
	poll	public static int poll ( array &$read , array &$error , array &$reject , int $sec [, int $usec ] )	接続を問い合わせる
	prepare	mysqli_stmt prepare ( string $query )	実行するための SQL ステートメントを準備する
	query	mixed query ( string $query [, int $resultmode = MYSQLI_STORE_RESULT ] )	データベース上でクエリを実行する
	real_connect	bool real_connect ([ string $host [, string $username [, string $passwd [, string $dbname [, int $port [, string $socket [, int $flags ]]]]]]] )	mysql サーバーとの接続をオープンする
	escape_string	string escape_string ( string $escapestr )
	real_query	bool real_query ( string $query )	SQL クエリを実行する
	reap_async_query	public mysqli_result reap_async_query ( void )	非同期クエリから結果を取得する
	refresh	public bool refresh ( int $options )	リフレッシュする
	rollback	bool rollback ([ int $flags [, string $name ]] )	現在のトランザクションをロールバックする
	rpl_query_type	int rpl_query_type ( string $query )	RPL クエリの型を返す
	select_db	bool select_db ( string $dbname )	クエリを実行するためのデフォルトのデータベースを選択する
	send_query	bool send_query ( string $query )	クエリを送信する
	set_charset	bool set_charset ( string $charset )	クライアントのデフォルト文字セットを設定する
	set_local_infile_handler	bool set_local_infile_handler ( mysqli $link , callable $read_func )	LOAD DATA LOCAL INFILE コマンド用のコールバック関数を設定する
	ssl_set	bool ssl_set ( string $key , string $cert , string $ca , string $capath , string $cipher )	SSL を使用したセキュアな接続を確立する
	stat	string stat ( void )	現在のシステム状態を取得する
	stmt_init	mysqli_stmt stmt_init ( void )	ステートメントを初期化し、mysqli_stmt_prepare で使用するオブジェクトを返す
	store_result	mysqli_result store_result ( void )	直近のクエリから結果セットを転送する
	use_result	mysqli_result use_result ( void )	結果セットの取得を開始する
MysqlndUhConnection	changeUser	public bool changeUser ( mysqlnd_connection $connection , string $user , string $password , string $database , bool $silent , int $passwd_len )	Changes the user of the specified mysqlnd database connection
	charsetName	public string charsetName ( mysqlnd_connection $connection )	Returns the default character set for the database connection
	close	public bool close ( mysqlnd_connection $connection , int $close_type )	Closes a previously opened database connection
	connect	public bool connect ( mysqlnd_connection $connection , string $host , string $use" , string $password , string $database , int $port , string $socket , int $mysql_flags )	Open a new connection to the MySQL server
	__construct	public __construct ( void )	The __construct purpose
	endPSession	public bool endPSession ( mysqlnd_connection $connection )	End a persistent connection
	escapeString	public string escapeString ( mysqlnd_connection $connection , string $escape_string )	Escapes special characters in a string for use in an SQL statement,    taking into account the current charset of the connection
	getAffectedRows	public int getAffectedRows ( mysqlnd_connection $connection )	Gets the number of affected rows in a previous MySQL operation
	getErrorNumber	public int getErrorNumber ( mysqlnd_connection $connection )	Returns the error code for the most recent function call
	getErrorString	public string getErrorString ( mysqlnd_connection $connection )	Returns a string description of the last error
	getFieldCount	public int getFieldCount ( mysqlnd_connection $connection )	Returns the number of columns for the most recent query
	getHostInformation	public string getHostInformation ( mysqlnd_connection $connection )	Returns a string representing the type of connection used
	getLastInsertId	public int getLastInsertId ( mysqlnd_connection $connection )	Returns the auto generated id used in the last query.
	getLastMessage	public void getLastMessage ( mysqlnd_connection $connection )	Retrieves information about the most recently executed query
	getProtocolInformation	public string getProtocolInformation ( mysqlnd_connection $connection )	Returns the version of the MySQL protocol used
	getServerInformation	public string getServerInformation ( mysqlnd_connection $connection )	Returns the version of the MySQL server
	getServerStatistics	public string getServerStatistics ( mysqlnd_connection $connection )	Gets the current system status
	getServerVersion	public int getServerVersion ( mysqlnd_connection $connection )	Returns the version of the MySQL server as an integer
	getSqlstate	public string getSqlstate ( mysqlnd_connection $connection )	Returns the SQLSTATE error from previous MySQL operation
	getStatistics	public array getStatistics ( mysqlnd_connection $connection )	Returns statistics about the client connection.
	getThreadId	public int getThreadId ( mysqlnd_connection $connection )	Returns the thread ID for the current connection
	getWarningCount	public int getWarningCount ( mysqlnd_connection $connection )	Returns the number of warnings from the last query for the given link
	init	public bool init ( mysqlnd_connection $connection )	Initialize mysqlnd connection
	killConnection	public bool killConnection ( mysqlnd_connection $connection , int $pid )	Asks the server to kill a MySQL thread
	listFields	public array listFields ( mysqlnd_connection $connection , string $table , string $achtung_wild )	List MySQL table fields
	listMethod	public void listMethod ( mysqlnd_connection $connection , string $query , string $achtung_wild , string $par1 )	Wrapper for assorted list commands
	moreResults	public bool moreResults ( mysqlnd_connection $connection )	Check if there are any more query results from a multi query
	nextResult	public bool nextResult ( mysqlnd_connection $connection )	Prepare next result from multi_query
	ping	public bool ping ( mysqlnd_connection $connection )	Pings a server connection, or tries to reconnect if the connection has gone down
	query	public bool query ( mysqlnd_connection $connection , string $query )	Performs a query on the database
	queryReadResultsetHeader	public bool queryReadResultsetHeader ( mysqlnd_connection $connection , mysqlnd_statement $mysqlnd_stmt )	Read a result set header
	reapQuery	public bool reapQuery ( mysqlnd_connection $connection )	Get result from async query
	refreshServer	public bool refreshServer ( mysqlnd_connection $connection , int $options )	Flush or reset tables and caches
	restartPSession	public bool restartPSession ( mysqlnd_connection $connection )	Restart a persistent mysqlnd connection
	selectDb	public bool selectDb ( mysqlnd_connection $connection , string $database )	Selects the default database for database queries
	sendClose	public bool sendClose ( mysqlnd_connection $connection )	Sends a close command to MySQL
	sendQuery	public bool sendQuery ( mysqlnd_connection $connection , string $query )	Sends a query to MySQL
	serverDumpDebugInformation	public bool serverDumpDebugInformation ( mysqlnd_connection $connection )	Dump debugging information into the log for the MySQL server
	setAutocommit	public bool setAutocommit ( mysqlnd_connection $connection , int $mode )	Turns on or off auto-committing database modifications
	setCharset	public bool setCharset ( mysqlnd_connection $connection , string $charset )	Sets the default client character set
	setClientOption	public bool setClientOption ( mysqlnd_connection $connection , int $option , int $value )	Sets a client option
	setServerOption	public void setServerOption ( mysqlnd_connection $connection , int $option )	Sets a server option
	shutdownServer	public void shutdownServer ( string $MYSQLND_UH_RES_MYSQLND_NAME , string $"level" )	The shutdownServer purpose
	simpleCommand	public bool simpleCommand ( mysqlnd_connection $connection , int $command , string $arg , int $ok_packet , bool $silent , bool $ignore_upsert_status )	Sends a basic COM_* command
	simpleCommandHandleResponse	public bool simpleCommandHandleResponse ( mysqlnd_connection $connection , int $ok_packet , bool $silent , int $command , bool $ignore_upsert_status )	Process a response for a basic COM_* command send to the client
	sslSet	public bool sslSet ( mysqlnd_connection $connection , string $key , string $cert , string $ca , string $capath , string $cipher )	Used for establishing secure connections using SSL
	stmtInit	public resource stmtInit ( mysqlnd_connection $connection )	Initializes a statement and returns a resource for use with mysqli_statement::prepare
	storeResult	public resource storeResult ( mysqlnd_connection $connection )	Transfers a result set from the last query
	txCommit	public bool txCommit ( mysqlnd_connection $connection )	Commits the current transaction
	txRollback	public bool txRollback ( mysqlnd_connection $connection )	Rolls back current transaction
	useResult	public resource useResult ( mysqlnd_connection $connection )	Initiate a result set retrieval
MysqlndUhPreparedStatement	__construct	public __construct ( void )	The __construct purpose
	execute	public bool execute ( mysqlnd_prepared_statement $statement )	Executes a prepared Query
	prepare	public bool prepare ( mysqlnd_prepared_statement $statement , string $query )	Prepare an SQL statement for execution
NoRewindIterator	__construct	public __construct ( Iterator $iterator )	NoRewindIterator を作成する
	current	public mixed current ( void )	現在の値を取得する
	getInnerIterator	public iterator getInnerIterator ( void )	内部イテレータを取得する
	key	public mixed key ( void )	現在のキーを取得する
	next	public void next ( void )	次の要素に移動する
	rewind	public void rewind ( void )	内部イテレータの巻き戻し操作を阻止する
	valid	public bool valid ( void )	イテレータの有効性を検証する
	IteratorIterator::__construct	public IteratorIterator::__construct ( Traversable $iterator )
	IteratorIterator::current	public mixed IteratorIterator::current ( void )
	IteratorIterator::getInnerIterator	public Traversable IteratorIterator::getInnerIterator ( void )
	IteratorIterator::key	public scalar IteratorIterator::key ( void )
	IteratorIterator::next	public void IteratorIterator::next ( void )
	IteratorIterator::rewind	public void IteratorIterator::rewind ( void )
	IteratorIterator::valid	public bool IteratorIterator::valid ( void )
Normalizer	isNormalized	public static bool isNormalized ( string $input [, string $form = Normalizer::FORM_C ] )	渡された文字列が、指定した正規化を適用済みかどうかを調べる
	normalize	public static string normalize ( string $input [, string $form = Normalizer::FORM_C ] )	渡された入力を正規化し、正規化後の文字列を返す
NumberFormatter	__construct	public __construct ( string $locale , int $style [, string $pattern ] )
	create	public static NumberFormatter create ( string $locale , int $style [, string $pattern ] )	数値フォーマッタを作成する
	formatCurrency	public string formatCurrency ( float $value , string $currency )	通貨の値をフォーマットする
	format	public string format ( number $value [, int $type ] )	数値をフォーマットする
	getAttribute	public int getAttribute ( int $attr )	属性を取得する
	getErrorCode	public int getErrorCode ( void )	フォーマッタの直近のエラーコードを取得する
	getErrorMessage	public string getErrorMessage ( void )	フォーマッタの直近のエラーメッセージを取得する
	getLocale	public string getLocale ([ int $type ] )	フォーマッタのロケールを取得する
	getPattern	public string getPattern ( void )	フォーマッタのパターンを取得する
	getSymbol	public string getSymbol ( int $attr )	記号を取得する
	getTextAttribute	public string getTextAttribute ( int $attr )	テキストの属性を取得する
	parseCurrency	public float parseCurrency ( string $value , string &$currency [, int &$position ] )	通貨をパースする
	parse	public mixed parse ( string $value [, int $type [, int &$position ]] )	数値をパースする
	setAttribute	public bool setAttribute ( int $attr , int $value )	属性を設定する
	setPattern	public bool setPattern ( string $pattern )	フォーマッタのパターンを設定する
	setSymbol	public bool setSymbol ( int $attr , string $value )	記号の値を設定する
	setTextAttribute	public bool setTextAttribute ( int $attr , string $value )	テキスト属性を設定する
OAuth	$debug	 public $debug ;
	$sslChecks	 public $sslChecks ;
	$debugInfo	 public $debugInfo ;
	__construct	public __construct ( string $consumer_key , string $consumer_secret [, string $signature_method = OAUTH_SIG_METHOD_HMACSHA1 [, int $auth_type = 0 ]] )	新しい OAuth オブジェクトを作成する
	__destruct	public void __destruct ( void )	デストラクタ
	disableDebug	public bool disableDebug ( void )	デバッグを無効にする
	disableRedirects	public bool disableRedirects ( void )	リダイレクトを無効にする
	disableSSLChecks	public bool disableSSLChecks ( void )	SSL チェックを無効にする
	enableDebug	public bool enableDebug ( void )	デバッグを有効にする
	enableRedirects	public bool enableRedirects ( void )	リダイレクトを有効にする
	enableSSLChecks	public bool enableSSLChecks ( void )	SSL チェックを有効にする
	fetch	public mixed fetch ( string $protected_resource_url [, array $extra_parameters [, string $http_method [, array $http_headers ]]] )	OAuth で保護されたリソースを取得する
	generateSignature	public string generateSignature ( string $http_method , string $url [, mixed $extra_parameters ] )	シグネチャを生成する
	getAccessToken	public array getAccessToken ( string $access_token_url [, string $verifier_token ] )	アクセストークンを取得する
	getCAPath	public array getCAPath ( void )	CA 情報を取得する
	getLastResponse	public string getLastResponse ( void )	直近のレスポンスを取得する
	getLastResponseHeaders	public string getLastResponseHeaders ( void )	最後のレスポンスのヘッダを取得する
	getLastResponseInfo	public array getLastResponseInfo ( void )	直近のレスポンスの HTTP 情報を取得する
	getRequestHeader	public string getRequestHeader ( string $http_method , string $url [, mixed $extra_parameters ] )	OAuth ヘッダ文字列シグネチャを生成する
	getRequestToken	public array getRequestToken ( string $request_token_url [, string $callback_url ] )	リクエストトークンを取得する
	setAuthType	public mixed setAuthType ( int $auth_type )	認証方式を設定する
	setCAPath	public mixed setCAPath ([ string $ca_path [, string $ca_info ]] )	CA パスおよび情報を設定する
	setNonce	public mixed setNonce ( string $nonce )	続くリクエスト用のノンスを設定する
	setRequestEngine	public void setRequestEngine ( int $reqengine )	setRequestEngine
	setRSACertificate	public mixed setRSACertificate ( string $cert )	RSA 証明書を設定する
	setSSLChecks	public bool setSSLChecks ( int $sslcheck )	リクエストに固有の SSL チェックを調整する
	setTimestamp	public mixed setTimestamp ( string $timestamp )	タイムスタンプを設定する
	setToken	public bool setToken ( string $token , string $token_secret )	トークンと secret を設定する
	setVersion	public bool setVersion ( string $version )	OAuth のバージョンを設定する
OAuthException	$lastResponse	 public $lastResponse ;
	$debugInfo	 public $debugInfo ;
	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
OAuthProvider	addRequiredParameter	final public bool addRequiredParameter ( string $req_params )	必須パラメータを追加する
	callconsumerHandler	public void callconsumerHandler ( void )	consumerNonceHandler コールバックをコールする
	callTimestampNonceHandler	public void callTimestampNonceHandler ( void )	timestampNonceHandler コールバックをコールする
	calltokenHandler	public void calltokenHandler ( void )	tokenNonceHandler コールバックをコールする
	checkOAuthRequest	public void checkOAuthRequest ([ string $uri [, string $method ]] )	oauth リクエストをチェックする
	__construct	public __construct ([ array $params_array ] )	新しい OAuthProvider オブジェクトを作る
	consumerHandler	public void consumerHandler ( callable $callback_function )	consumerHandler コールバックを設定する
	generateToken	final public static string generateToken ( int $size [, bool $strong = false ] )	ランダムなトークンを生成する
	is2LeggedEndpoint	public void is2LeggedEndpoint ( mixed $params_array )	is2LeggedEndpoint
	isRequestTokenEndpoint	public void isRequestTokenEndpoint ( bool $will_issue_request_token )	isRequestTokenEndpoint を設定する
	removeRequiredParameter	final public bool removeRequiredParameter ( string $req_params )	必須パラメータを削除する
	reportProblem	final public static string reportProblem ( string $oauthexception [, bool $send_headers = true ] )	問題を報告する
	setParam	final public bool setParam ( string $param_key [, mixed $param_val ] )	パラメータを設定する
	setRequestTokenPath	final public bool setRequestTokenPath ( string $path )	リクエストトークンのパスを設定する
	timestampNonceHandler	public void timestampNonceHandler ( callable $callback_function )	timestampNonceHandler コールバックを設定する
	tokenHandler	public void tokenHandler ( callable $callback_function )	tokenHandler コールバックを設定する
OuterIterator	getInnerIterator	public Iterator getInnerIterator ( void )	現在のエントリの内部イテレータを返す
	Iterator::current	abstract public mixed Iterator::current ( void )
	Iterator::key	abstract public scalar Iterator::key ( void )
	Iterator::next	abstract public void Iterator::next ( void )
	Iterator::rewind	abstract public void Iterator::rewind ( void )
	Iterator::valid	abstract public boolean Iterator::valid ( void )
OutOfBoundsException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
OutOfRangeException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
OverflowException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
ParentIterator	accept	public bool accept ( void )	受け入れ可能かどうかを調べる
	__construct	public __construct ( RecursiveIterator $iterator )	ParentIterator を作成する
	getChildren	public ParentIterator getChildren ( void )	ParentIterator に含まれる内部イテレータの子を返す
	hasChildren	public bool hasChildren ( void )	内部イテレータの現在の要素が子を持つかどうかをチェックする
	next	public void next ( void )	イテレータを前に移動する
	rewind	public void rewind ( void )	イテレータを巻き戻す
PDO	__construct	public __construct ( string $dsn [, string $username [, string $password [, array $driver_options ]]] )	データベースへの接続を表す PDO インスタンスを生成する
	beginTransaction	public bool beginTransaction ( void )	トランザクションを開始する
	commit	public bool commit ( void )	トランザクションをコミットする
	errorCode	public mixed errorCode ( void )	データベースハンドラにおける直近の操作に関連する SQLSTATE を取得する
	errorInfo	public array errorInfo ( void )	データベースハンドラにおける直近の操作に関連する拡張エラー情報を取得する
	exec	public int exec ( string $statement )	SQL ステートメントを実行し、作用した行数を返す
	getAttribute	public mixed getAttribute ( int $attribute )	データベース接続の属性を取得する
	getAvailableDrivers	public static array getAvailableDrivers ( void )	利用可能な PDO ドライバの配列を返す
	inTransaction	public bool inTransaction ( void )	トランザクション内かどうかを調べる
	lastInsertId	public string lastInsertId ([ string $name = NULL ] )	最後に挿入された行の ID あるいはシーケンスの値を返す
	prepare	public PDOStatement prepare ( string $statement [, array $driver_options = array() ] )	文を実行する準備を行い、文オブジェクトを返す
	query	public PDOStatement query ( string $statement )	SQL ステートメントを実行し、結果セットを PDOStatement オブジェクトとして返す
	quote	public string quote ( string $string [, int $parameter_type = PDO::PARAM_STR ] )	クエリ用の文字列をクオートする
	rollBack	public bool rollBack ( void )	トランザクションをロールバックする
	setAttribute	public bool setAttribute ( int $attribute , mixed $value )	属性を設定する
PDOException	$errorInfo	 public array $errorInfo ;
	$code	 protected string $code ;
	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
PDOStatement	$queryString	readonly string $queryString;
	bindColumn	public bool bindColumn ( mixed $column , mixed &$param [, int $type [, int $maxlen [, mixed $driverdata ]]] )	カラムを PHP 変数にバインドする
	bindParam	public bool bindParam ( mixed $parameter , mixed &$variable [, int $data_type = PDO::PARAM_STR [, int $length [, mixed $driver_options ]]] )	指定された変数名にパラメータをバインドする
	bindValue	public bool bindValue ( mixed $parameter , mixed $value [, int $data_type = PDO::PARAM_STR ] )	値をパラメータにバインドする
	closeCursor	public bool closeCursor ( void )	カーソルを閉じてステートメントを再実行できるようにする
	columnCount	public int columnCount ( void )	結果セット中のカラム数を返す
	debugDumpParams	public void debugDumpParams ( void )	SQL プリペアドコマンドを出力する
	errorCode	public string errorCode ( void )	文ハンドラにおける直近の操作に関連する SQLSTATE を取得する
	errorInfo	public array errorInfo ( void )	文ハンドラにおける直近の操作に関連する拡張エラー情報を取得する
	execute	public bool execute ([ array $input_parameters ] )	プリペアドステートメントを実行する
	fetch	public mixed fetch ([ int $fetch_style [, int $cursor_orientation = PDO::FETCH_ORI_NEXT [, int $cursor_offset = 0 ]]] )	結果セットから次の行を取得する
	fetchAll	public array fetchAll ([ int $fetch_style [, mixed $fetch_argument [, array $ctor_args = array() ]]] )	全ての結果行を含む配列を返す
	fetchColumn	public string fetchColumn ([ int $column_number = 0 ] )	結果セットの次行から単一カラムを返す
	fetchObject	public mixed fetchObject ([ string $class_name = "stdClass" [, array $ctor_args ]] )	次の行を取得し、それをオブジェクトとして返す
	getAttribute	public mixed getAttribute ( int $attribute )	文の属性を取得する
	getColumnMeta	public array getColumnMeta ( int $column )	結果セットのカラムに対するメタデータを返す
	nextRowset	public bool nextRowset ( void )	複数の行セットを返す文ハンドラで次の行セットに移動する
	rowCount	public int rowCount ( void )	直近の SQL ステートメントによって作用した行数を返す
	setAttribute	public bool setAttribute ( int $attribute , mixed $value )	文の属性を設定する
	setFetchMode	public bool setFetchMode ( int $mode )	この文に対するデフォルトのフェッチモードを設定する
Phar	addEmptyDir	public void addEmptyDir ( string $dirname )	空のディレクトリを phar アーカイブに追加する
	addFile	public void addFile ( string $file [, string $localname ] )	ファイルシステム上のファイルを phar アーカイブに追加する
	addFromString	public void addFromString ( string $localname , string $contents )	ファイルシステム上のファイルを phar アーカイブに追加する
	apiVersion	final public static string apiVersion ( void )	API のバージョンを返す
	buildFromDirectory	public array buildFromDirectory ( string $base_dir [, string $regex ] )	ディレクトリ内のファイルから phar を作成する
	buildFromIterator	public array buildFromIterator ( Iterator $iter [, string $base_directory ] )	イテレータから phar アーカイブを作成する
	canCompress	final public static bool canCompress ([ int $type = 0 ] )	phar 拡張モジュールが zlib あるいは bzip2 による圧縮をサポートしているかどうかを返す
	canWrite	final public static bool canWrite ( void )	phar 拡張モジュールが phar の書き込みや作成をサポートしているかどうかを返す
	compress	public object compress ( int $compression [, string $extension ] )	Phar アーカイブ全体を Gzip あるいは Bzip2 で圧縮する
	compressAllFilesBZIP2	public bool compressAllFilesBZIP2 ( void )	現在の Phar アーカイブ内のすべてのファイルを Bzip2 で圧縮する
	compressAllFilesGZ	public bool compressAllFilesGZ ( void )	現在の Phar アーカイブ内のすべてのファイルを Gzip で圧縮する
	compressFiles	public void compressFiles ( int $compression )	現在の Phar アーカイブ内のすべてのファイルを圧縮する
	__construct	public __construct ( string $fname [, int $flags [, string $alias ]] )	Phar アーカイブオブジェクトを作成する
	convertToData	public PharData convertToData ([ int $format = 9021976 [, int $compression = 9021976 [, string $extension ]]] )	phar アーカイブを実行可能でない tar あるいは zip ファイルに変換する
	convertToExecutable	public Phar convertToExecutable ([ int $format = 9021976 [, int $compression = 9021976 [, string $extension ]]] )	phar アーカイブを実行可能な別の phar アーカイブ形式に変換する
	copy	public bool copy ( string $oldfile , string $newfile )	phar アーカイブ内のファイルを、phar 内で別の新しいファイルとしてコピーする
	count	public int count ( void )	Phar アーカイブ内のエントリ (ファイル) の数を返す
	createDefaultStub	final public static string createDefaultStub ([ string $indexfile [, string $webindexfile ]] )	phar ファイルフォーマット用のスタブを作成する
	decompress	public object decompress ([ string $extension ] )	Phar アーカイブ全体の圧縮を解除する
	decompressFiles	public bool decompressFiles ( void )	現在の Phar アーカイブ内のすべてのファイルの圧縮を解除する
	delMetadata	public bool delMetadata ( void )	phar のグローバルメタデータを削除する
	delete	public bool delete ( string $entry )	phar アーカイブ内のファイルを削除する
	extractTo	public bool extractTo ( string $pathto [, string|array $files [, bool $overwrite = false ]] )	phar アーカイブの内容をディレクトリに展開する
	getMetadata	public mixed getMetadata ( void )	phar アーカイブのメタデータを返す
	getModified	public bool getModified ( void )	phar が変更されているかどうかを返す
	getSignature	public array getSignature ( void )	Phar アーカイブの MD5/SHA1/SHA256/SHA512/OpenSSL シグネチャを返す
	getStub	public string getStub ( void )	Phar アーカイブの PHP ローダーあるいは起動スタブを返す
	getSupportedCompression	final public static array getSupportedCompression ( void )	サポートする圧縮アルゴリズムの配列を返す
	getSupportedSignatures	final public static array getSupportedSignatures ( void )	サポートするシグネチャ型の配列を返す
	getVersion	public string getVersion ( void )	Phar アーカイブのバージョン情報を返す
	hasMetadata	public bool hasMetadata ( void )	ファイルがグローバルなメタデータを持つかどうかを返す
	interceptFileFuncs	final public static void interceptFileFuncs ( void )	fopen、file_get_contents、opendir などの stat 関連の関数をすべて phar に横取りさせる
	isBuffering	public bool isBuffering ( void )	Phar の書き込み操作がバッファリングされるか、あるいは直接ディスクに書き込まれるかを調べる
	isCompressed	public mixed isCompressed ( void )	phar アーカイブ全体が (.tar.gz/tar.bz などで) 圧縮されている場合に Phar::GZ あるいは PHAR::BZ2 を返す
	isFileFormat	public bool isFileFormat ( int $format )	phar アーカイブが、パラメータで指定した tar/phar/zip のいずれかの形式である場合に true を返す
	isValidPharFilename	final public static bool isValidPharFilename ( string $filename [, bool $executable = true ] )	指定したファイル名が正しい形式の phar ファイルかどうかを返す
	isWritable	public bool isWritable ( void )	phar アーカイブが変更可能な場合に true を返す
	loadPhar	final public static bool loadPhar ( string $filename [, string $alias ] )	任意の phar アーカイブを、エイリアスを指定して読み込む
	mapPhar	final public static bool mapPhar ([ string $alias [, int $dataoffset = 0 ]] )	現在実行されている (phar 形式の) ファイルを読み込み、その内容を登録する
	mount	final public static void mount ( string $pharpath , string $externalpath )	外部のパスあるいはファイルを phar アーカイブ内に仮想的にマウントする
	mungServer	final public static void mungServer ( array $munglist )	最大 4 つまでの $_SERVER 変数を実行時に変更させる
	offsetExists	public bool offsetExists ( string $offset )	ファイルが phar 内に存在するかどうかを調べる
	offsetGet	public int offsetGet ( string $offset )	指定したファイルの PharFileInfo オブジェクトを取得する
	offsetSet	public void offsetSet ( string $offset , string $value )	内部ファイルに、外部ファイルの内容を設定する
	offsetUnset	public bool offsetUnset ( string $offset )	ファイルを phar から削除する
	running	final public static string running ([ bool $retphar = true ] )	現在実行中の Phar アーカイブのフルパスあるいは完全な phar URL を返す
	setAlias	public bool setAlias ( string $alias )	Phar アーカイブのエイリアスを設定する
	setDefaultStub	public bool setDefaultStub ([ string $index [, string $webindex ]] )	Phar アーカイブの PHP ローダー (起動スタブ) をデフォルトのローダーに設定する
	setMetadata	public void setMetadata ( mixed $metadata )	phar アーカイブのメタデータを設定する
	setSignatureAlgorithm	public void setSignatureAlgorithm ( int $sigtype [, string $privatekey ] )	phar のシグネチャのアルゴリズムを設定して適用する
	setStub	public bool setStub ( string $stub [, int $len = -1 ] )	Phar アーカイブの PHP ローダ (あるいは起動スタブ) を設定する
	startBuffering	public void startBuffering ( void )	Phar の書き込み操作のバッファリングを開始するが、ディスク上の Phar オブジェクトは変更しない
	stopBuffering	public void stopBuffering ( void )	Phar アーカイブへの書き込みリクエストのバッファリングを終了し、変更内容をディスクに書き込む
	uncompressAllFiles	public bool uncompressAllFiles ( void )	現在の Phar アーカイブ内のすべてのファイルを展開する
	unlinkArchive	final public static bool unlinkArchive ( string $archive )	phar アーカイブをディスクとメモリから完全に削除する
	webPhar	final public static void webPhar ([ string $alias [, string $index = "index.php" [, string $f404 [, array $mimetypes [, callable $rewrites ]]]]] )	ウェブベースの phar で使用するフロントコントローラ
PharData	addEmptyDir	bool addEmptyDir ( string $dirname )	空のディレクトリを tar/zip アーカイブに追加する
	Phar::addFile	public void Phar::addFile ( string $file [, string $localname ] )
	addFromString	bool addFromString ( string $localname , string $contents )	ファイルシステム上のファイルを tar/zip アーカイブに追加する
	Phar::buildFromDirectory	public array Phar::buildFromDirectory ( string $base_dir [, string $regex ] )
	buildFromIterator	array buildFromIterator ( Iterator $iter [, string $base_directory ] )	イテレータから tar あるいは zip アーカイブを作成する
	compress	object compress ( int $compression [, string $extension ] )	tar/zip アーカイブ全体を Gzip あるいは Bzip2 で圧縮する
	compressFiles	bool compressFiles ( int $compression )	現在の tar/zip アーカイブ内のすべてのファイルを圧縮する
	__construct	__construct ( string $fname [, int $flags [, string $alias [, int $format = Phar::TAR ]]] )	実行可能でない tar あるいは zip アーカイブオブジェクトを作成する
	convertToData	PharData convertToData ([ int $format [, int $compression [, string $extension ]]] )	phar アーカイブを実行可能でない tar あるいは zip ファイルに変換する
	convertToExecutable	Phar convertToExecutable ([ int $format [, int $compression [, string $extension ]]] )	実行可能でない tar/zip アーカイブを実行可能な phar アーカイブ形式に変換する
	copy	bool copy ( string $oldfile , string $newfile )	phar アーカイブ内のファイルを、phar 内で別の新しいファイルとしてコピーする
	decompress	object decompress ([ string $extension ] )	Phar アーカイブ全体の圧縮を解除する
	decompressFiles	bool decompressFiles ( void )	現在の zip アーカイブ内のすべてのファイルの圧縮を解除する
	delMetadata	bool delMetadata ( void )	zip アーカイブのグローバルメタデータを削除する
	delete	bool delete ( string $entry )	tar/zip アーカイブ内のファイルを削除する
	extractTo	bool extractTo ( string $pathto [, string|array $files [, bool $overwrite = false ]] )	tar/zip アーカイブの内容をディレクトリに展開する
	isWritable	bool isWritable ( void )	tar/zip アーカイブが変更可能な場合に true を返す
	offsetSet	void offsetSet ( string $offset , string $value )	tar/zip の内部のファイルに、外部ファイルあるいは文字列の内容を設定する
	offsetUnset	bool offsetUnset ( string $offset )	ファイルを tar/zip アーカイブから削除する
	setAlias	bool setAlias ( string $alias )	ダミー関数 (Phar::setAlias は PharData では使用不能)
	setDefaultStub	bool setDefaultStub ([ string $index [, string $webindex ]] )	ダミー関数 (Phar::setDefaultStub は PharData では無効)
	Phar::setMetadata	public void Phar::setMetadata ( mixed $metadata )
	Phar::setSignatureAlgorithm	public void Phar::setSignatureAlgorithm ( int $sigtype )
	setStub	bool setStub ( string $stub [, int $len = -1 ] )	ダミー関数 (Phar::setStub は PharData では使用不能)
	Phar::addEmptyDir	public void Phar::addEmptyDir ( string $dirname )
	Phar::addFile	public void Phar::addFile ( string $file [, string $localname ] )
	Phar::addFromString	public void Phar::addFromString ( string $localname , string $contents )
	Phar::apiVersion	final public static string Phar::apiVersion ( void )
	Phar::buildFromDirectory	public array Phar::buildFromDirectory ( string $base_dir [, string $regex ] )
	Phar::buildFromIterator	public array Phar::buildFromIterator ( Iterator $iter [, string $base_directory ] )
	Phar::canCompress	final public static bool Phar::canCompress ([ int $type = 0 ] )
	Phar::canWrite	final public static bool Phar::canWrite ( void )
	Phar::compress	public object Phar::compress ( int $compression [, string $extension ] )
	Phar::compressAllFilesBZIP2	public bool Phar::compressAllFilesBZIP2 ( void )
	Phar::compressAllFilesGZ	public bool Phar::compressAllFilesGZ ( void )
	Phar::compressFiles	public void Phar::compressFiles ( int $compression )
	Phar::__construct	public Phar::__construct ( string $fname [, int $flags [, string $alias ]] )
	Phar::convertToData	public PharData Phar::convertToData ([ int $format = 9021976 [, int $compression = 9021976 [, string $extension ]]] )
	Phar::convertToExecutable	public Phar Phar::convertToExecutable ([ int $format = 9021976 [, int $compression = 9021976 [, string $extension ]]] )
	Phar::copy	public bool Phar::copy ( string $oldfile , string $newfile )
	Phar::count	public int Phar::count ( void )
	Phar::createDefaultStub	final public static string Phar::createDefaultStub ([ string $indexfile [, string $webindexfile ]] )
	Phar::decompress	public object Phar::decompress ([ string $extension ] )
	Phar::decompressFiles	public bool Phar::decompressFiles ( void )
	Phar::delMetadata	public bool Phar::delMetadata ( void )
	Phar::delete	public bool Phar::delete ( string $entry )
	Phar::extractTo	public bool Phar::extractTo ( string $pathto [, string|array $files [, bool $overwrite = false ]] )
	Phar::getMetadata	public mixed Phar::getMetadata ( void )
	Phar::getModified	public bool Phar::getModified ( void )
	Phar::getSignature	public array Phar::getSignature ( void )
	Phar::getStub	public string Phar::getStub ( void )
	Phar::getSupportedCompression	final public static array Phar::getSupportedCompression ( void )
	Phar::getSupportedSignatures	final public static array Phar::getSupportedSignatures ( void )
	Phar::getVersion	public string Phar::getVersion ( void )
	Phar::hasMetadata	public bool Phar::hasMetadata ( void )
	Phar::interceptFileFuncs	final public static void Phar::interceptFileFuncs ( void )
	Phar::isBuffering	public bool Phar::isBuffering ( void )
	Phar::isCompressed	public mixed Phar::isCompressed ( void )
	Phar::isFileFormat	public bool Phar::isFileFormat ( int $format )
	Phar::isValidPharFilename	final public static bool Phar::isValidPharFilename ( string $filename [, bool $executable = true ] )
	Phar::isWritable	public bool Phar::isWritable ( void )
	Phar::loadPhar	final public static bool Phar::loadPhar ( string $filename [, string $alias ] )
	Phar::mapPhar	final public static bool Phar::mapPhar ([ string $alias [, int $dataoffset = 0 ]] )
	Phar::mount	final public static void Phar::mount ( string $pharpath , string $externalpath )
	Phar::mungServer	final public static void Phar::mungServer ( array $munglist )
	Phar::offsetExists	public bool Phar::offsetExists ( string $offset )
	Phar::offsetGet	public int Phar::offsetGet ( string $offset )
	Phar::offsetSet	public void Phar::offsetSet ( string $offset , string $value )
	Phar::offsetUnset	public bool Phar::offsetUnset ( string $offset )
	Phar::running	final public static string Phar::running ([ bool $retphar = true ] )
	Phar::setAlias	public bool Phar::setAlias ( string $alias )
	Phar::setDefaultStub	public bool Phar::setDefaultStub ([ string $index [, string $webindex ]] )
	Phar::setMetadata	public void Phar::setMetadata ( mixed $metadata )
	Phar::setSignatureAlgorithm	public void Phar::setSignatureAlgorithm ( int $sigtype [, string $privatekey ] )
	Phar::setStub	public bool Phar::setStub ( string $stub [, int $len = -1 ] )
	Phar::startBuffering	public void Phar::startBuffering ( void )
	Phar::stopBuffering	public void Phar::stopBuffering ( void )
	Phar::uncompressAllFiles	public bool Phar::uncompressAllFiles ( void )
	Phar::unlinkArchive	final public static bool Phar::unlinkArchive ( string $archive )
	Phar::webPhar	final public static void Phar::webPhar ([ string $alias [, string $index = "index.php" [, string $f404 [, array $mimetypes [, callable $rewrites ]]]]] )
PharException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
PharFileInfo	chmod	public void chmod ( int $permissions )	ファイル固有のパーミッションビットを設定する
	compress	public bool compress ( int $compression )	現在の Phar エントリを zlib あるいは bzip2 のいずれかで圧縮する
	__construct	public __construct ( string $entry )	Phar エントリオブジェクトを作成する
	decompress	public bool decompress ( void )	phar 内の現在の Phar エントリの圧縮を解除する
	delMetadata	public bool delMetadata ( void )	エントリのメタデータを削除する
	getCRC32	public int getCRC32 ( void )	CRC32 コードを返すか、CRC がチェックできない場合に例外をスローする
	getCompressedSize	public int getCompressedSize ( void )	Phar アーカイブ内での実際のファイルの大きさ (圧縮された状態) を返す
	getMetadata	public mixed getMetadata ( void )	ファイルとともに保存されている、ファイル固有のメタデータを返す
	getPharFlags	public int getPharFlags ( void )	Phar ファイルエントリのフラグを返す
	hasMetadata	public bool hasMetadata ( void )	エントリのメタデータを返す
	isCRCChecked	public bool isCRCChecked ( void )	ファイルエントリの CRC が検証されているかどうかを調べる
	isCompressed	public bool isCompressed ([ int $compression_type = 9021976 ] )	エントリが圧縮されているかどうかを調べる
	isCompressedBZIP2	public bool isCompressedBZIP2 ( void )	エントリが bzip2 で圧縮されているかどうかを調べる
	isCompressedGZ	public bool isCompressedGZ ( void )	エントリが gz で圧縮されているかどうかを調べる
	setCompressedBZIP2	public bool setCompressedBZIP2 ( void )	phar 内の現在の Phar エントリを、Bzip2 で圧縮する
	setCompressedGZ	public bool setCompressedGZ ( void )	phar 内の現在の Phar エントリを、gz で圧縮する
	setMetadata	public void setMetadata ( mixed $metadata )	ファイルとともに保存する、ファイル固有のメタデータを設定する
	setUncompressed	public bool setUncompressed ( void )	phar 内の現在の Phar エントリが圧縮されている場合に、それを展開する
php_user_filter	$filtername	 public $filtername ;
	$params	 public $params ;
	filter	public int filter ( resource $in , resource $out , int &$consumed , bool $closing )
	onClose	public void onClose ( void )
	onCreate	public bool onCreate ( void )
QuickHashIntHash	CHECK_FOR_DUPES	 const integer CHECK_FOR_DUPES = 1 ;
	DO_NOT_USE_ZEND_ALLOC	 const integer DO_NOT_USE_ZEND_ALLOC = 2 ;
	HASHER_NO_HASH	 const integer HASHER_NO_HASH = 256 ;
	HASHER_JENKINS1	 const integer HASHER_JENKINS1 = 512 ;
	HASHER_JENKINS2	 const integer HASHER_JENKINS2 = 1024 ;
	add	public bool add ( int $key [, int $value ] )	新たなエントリをハッシュに追加する
	__construct	public __construct ( int $size [, int $options ] )	新しい QuickHashIntHash オブジェクトを作る
	delete	public bool delete ( int $key )	エントリをハッシュから削除する
	exists	public bool exists ( int $key )	キーがハッシュに存在するかどうかを調べる
	get	public int get ( int $key )	キーを指定してハッシュから値を取得する
	getSize	public int getSize ( void )	ハッシュの要素数を返す
	loadFromFile	public static QuickHashIntHash loadFromFile ( string $filename [, int $options ] )	ファイルからハッシュを作るファクトリーメソッド
	loadFromString	public static QuickHashIntHash loadFromString ( string $contents [, int $options ] )	文字列からハッシュを作るファクトリーメソッド
	saveToFile	public void saveToFile ( string $filename )	メモリ上のハッシュをディスクに保存する
	saveToString	public string saveToString ( void )	シリアライズしたハッシュを返す
	set	public bool set ( int $key , int $value )	ハッシュ内のエントリの値を更新 (エントリが存在しない場合は新しく追加) する
	update	public bool update ( int $key , int $value )	ハッシュのエントリを新しい値で更新する
QuickHashIntSet	CHECK_FOR_DUPES	 const integer CHECK_FOR_DUPES = 1 ;
	DO_NOT_USE_ZEND_ALLOC	 const integer DO_NOT_USE_ZEND_ALLOC = 2 ;
	HASHER_NO_HASH	 const integer HASHER_NO_HASH = 256 ;
	HASHER_JENKINS1	 const integer HASHER_JENKINS1 = 512 ;
	HASHER_JENKINS2	 const integer HASHER_JENKINS2 = 1024 ;
	add	public bool add ( int $key )	新たなエントリをセットに追加する
	__construct	public __construct ( int $size [, int $options ] )	新しい QuickHashIntSet オブジェクトを作る
	delete	public bool delete ( int $key )	エントリをセットから削除する
	exists	public bool exists ( int $key )	キーがセットに存在するかどうかを調べる
	getSize	public int getSize ( void )	セットの要素数を返す
	loadFromFile	public static QuickHashIntSet loadFromFile ( string $filename [, int $size [, int $options ]] )	ファイルからセットを作るファクトリーメソッド
	loadFromString	public static QuickHashIntSet loadFromString ( string $contents [, int $size [, int $options ]] )	文字列からセットを作るファクトリーメソッド
	saveToFile	public void saveToFile ( string $filename )	メモリ上のセットをディスクに保存する
	saveToString	public string saveToString ( void )	シリアライズしたセットを返す
QuickHashIntStringHash	CHECK_FOR_DUPES	 const integer CHECK_FOR_DUPES = 1 ;
	DO_NOT_USE_ZEND_ALLOC	 const integer DO_NOT_USE_ZEND_ALLOC = 2 ;
	HASHER_NO_HASH	 const integer HASHER_NO_HASH = 256 ;
	HASHER_JENKINS1	 const integer HASHER_JENKINS1 = 512 ;
	HASHER_JENKINS2	 const integer HASHER_JENKINS2 = 1024 ;
	add	public bool add ( int $key , string $value )	新たなエントリをハッシュに追加する
	__construct	public __construct ( int $size [, int $options = 0 ] )	新しい QuickHashIntStringHash オブジェクトを作る
	delete	public bool delete ( int $key )	エントリをハッシュから削除する
	exists	public bool exists ( int $key )	キーがハッシュに存在するかどうかを調べる
	get	public mixed get ( int $key )	キーを指定してハッシュから値を取得する
	getSize	public int getSize ( void )	ハッシュの要素数を返す
	loadFromFile	public static QuickHashIntStringHash loadFromFile ( string $filename [, int $size = 0 [, int $options = 0 ]] )	ファイルからハッシュを作るファクトリーメソッド
	loadFromString	public static QuickHashIntStringHash loadFromString ( string $contents [, int $size = 0 [, int $options = 0 ]] )	文字列からハッシュを作るファクトリーメソッド
	saveToFile	public void saveToFile ( string $filename )	メモリ上のハッシュをディスクに保存する
	saveToString	public string saveToString ( void )	シリアライズしたハッシュを返す
	set	public int set ( int $key , string $value )	ハッシュ内のエントリの値を更新 (エントリが存在しない場合は新しく追加) する
	update	public bool update ( int $key , string $value )	ハッシュのエントリを新しい値で更新する
QuickHashStringIntHash	CHECK_FOR_DUPES	 const integer CHECK_FOR_DUPES = 1 ;
	DO_NOT_USE_ZEND_ALLOC	 const integer DO_NOT_USE_ZEND_ALLOC = 2 ;
	add	public bool add ( string $key , int $value )	新たなエントリをハッシュに追加する
	__construct	public __construct ( int $size [, int $options = 0 ] )	新しい QuickHashStringIntHash オブジェクトを作る
	delete	public bool delete ( string $key )	エントリをハッシュから削除する
	exists	public bool exists ( string $key )	キーがハッシュに存在するかどうかを調べる
	get	public mixed get ( string $key )	キーを指定してハッシュから値を取得する
	getSize	public int getSize ( void )	ハッシュの要素数を返す
	loadFromFile	public static QuickHashStringIntHash loadFromFile ( string $filename [, int $size = 0 [, int $options = 0 ]] )	ファイルからハッシュを作るファクトリーメソッド
	loadFromString	public static QuickHashStringIntHash loadFromString ( string $contents [, int $size = 0 [, int $options = 0 ]] )	文字列からハッシュを作るファクトリーメソッド
	saveToFile	public void saveToFile ( string $filename )	メモリ上のハッシュをディスクに保存する
	saveToString	public string saveToString ( void )	シリアライズしたハッシュを返す
	set	public int set ( string $key , int $value )	ハッシュ内のエントリの値を更新 (エントリが存在しない場合は新しく追加) する
	update	public bool update ( string $key , int $value )	ハッシュのエントリを新しい値で更新する
RangeException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
RarArchive	close	public bool close ( void )	Rar アーカイブをクローズし、全リソースを開放する
	getComment	public string getComment ( void )	RAR アーカイブのコメントテキストを取得する
	getEntries	public array getEntries ( void )	RAR アーカイブからエントリの全一覧を取得する
	getEntry	public RarEntry getEntry ( string $entryname )	Rar アーカイブからエントリオブジェクトを取得する
	isBroken	public bool isBroken ( void )	アーカイブが壊れている (未完成である) かどうかを調べる
	isSolid	public bool isSolid ( void )	RAR アーカイブがソリッドであるかどうかを調べる
	open	public static RarArchive open ( string $filename [, string $password = NULL [, callable $volume_callback = NULL ]] )	Rar アーカイブをオープンする
	setAllowBroken	public bool setAllowBroken ( bool $allow_broken )	壊れたアーカイブのオープンを許可するかどうかを設定する
	__toString	public string __toString ( void )	テキスト形式で取得する
RarEntry	HOST_MSDOS	 const integer HOST_MSDOS = 0 ;
	HOST_OS2	 const integer HOST_OS2 = 1 ;
	HOST_WIN32	 const integer HOST_WIN32 = 2 ;
	HOST_UNIX	 const integer HOST_UNIX = 3 ;
	HOST_MACOS	 const integer HOST_MACOS = 4 ;
	HOST_BEOS	 const integer HOST_BEOS = 5 ;
	ATTRIBUTE_WIN_READONLY	 const integer ATTRIBUTE_WIN_READONLY = 1 ;
	ATTRIBUTE_WIN_HIDDEN	 const integer ATTRIBUTE_WIN_HIDDEN = 2 ;
	ATTRIBUTE_WIN_SYSTEM	 const integer ATTRIBUTE_WIN_SYSTEM = 4 ;
	ATTRIBUTE_WIN_DIRECTORY	 const integer ATTRIBUTE_WIN_DIRECTORY = 16 ;
	ATTRIBUTE_WIN_ARCHIVE	 const integer ATTRIBUTE_WIN_ARCHIVE = 32 ;
	ATTRIBUTE_WIN_DEVICE	 const integer ATTRIBUTE_WIN_DEVICE = 64 ;
	ATTRIBUTE_WIN_NORMAL	 const integer ATTRIBUTE_WIN_NORMAL = 128 ;
	ATTRIBUTE_WIN_TEMPORARY	 const integer ATTRIBUTE_WIN_TEMPORARY = 256 ;
	ATTRIBUTE_WIN_SPARSE_FILE	 const integer ATTRIBUTE_WIN_SPARSE_FILE = 512 ;
	ATTRIBUTE_WIN_REPARSE_POINT	 const integer ATTRIBUTE_WIN_REPARSE_POINT = 1024 ;
	ATTRIBUTE_WIN_COMPRESSED	 const integer ATTRIBUTE_WIN_COMPRESSED = 2048 ;
	ATTRIBUTE_WIN_OFFLINE	 const integer ATTRIBUTE_WIN_OFFLINE = 4096 ;
	ATTRIBUTE_WIN_NOT_CONTENT_INDEXED	 const integer ATTRIBUTE_WIN_NOT_CONTENT_INDEXED = 8192 ;
	ATTRIBUTE_WIN_ENCRYPTED	 const integer ATTRIBUTE_WIN_ENCRYPTED = 16384 ;
	ATTRIBUTE_WIN_VIRTUAL	 const integer ATTRIBUTE_WIN_VIRTUAL = 65536 ;
	ATTRIBUTE_UNIX_WORLD_EXECUTE	 const integer ATTRIBUTE_UNIX_WORLD_EXECUTE = 1 ;
	ATTRIBUTE_UNIX_WORLD_WRITE	 const integer ATTRIBUTE_UNIX_WORLD_WRITE = 2 ;
	ATTRIBUTE_UNIX_WORLD_READ	 const integer ATTRIBUTE_UNIX_WORLD_READ = 4 ;
	ATTRIBUTE_UNIX_GROUP_EXECUTE	 const integer ATTRIBUTE_UNIX_GROUP_EXECUTE = 8 ;
	ATTRIBUTE_UNIX_GROUP_WRITE	 const integer ATTRIBUTE_UNIX_GROUP_WRITE = 16 ;
	ATTRIBUTE_UNIX_GROUP_READ	 const integer ATTRIBUTE_UNIX_GROUP_READ = 32 ;
	ATTRIBUTE_UNIX_OWNER_EXECUTE	 const integer ATTRIBUTE_UNIX_OWNER_EXECUTE = 64 ;
	ATTRIBUTE_UNIX_OWNER_WRITE	 const integer ATTRIBUTE_UNIX_OWNER_WRITE = 128 ;
	ATTRIBUTE_UNIX_OWNER_READ	 const integer ATTRIBUTE_UNIX_OWNER_READ = 256 ;
	ATTRIBUTE_UNIX_STICKY	 const integer ATTRIBUTE_UNIX_STICKY = 512 ;
	ATTRIBUTE_UNIX_SETGID	 const integer ATTRIBUTE_UNIX_SETGID = 1024 ;
	ATTRIBUTE_UNIX_SETUID	 const integer ATTRIBUTE_UNIX_SETUID = 2048 ;
	ATTRIBUTE_UNIX_FINAL_QUARTET	 const integer ATTRIBUTE_UNIX_FINAL_QUARTET = 61440 ;
	ATTRIBUTE_UNIX_FIFO	 const integer ATTRIBUTE_UNIX_FIFO = 4096 ;
	ATTRIBUTE_UNIX_CHAR_DEV	 const integer ATTRIBUTE_UNIX_CHAR_DEV = 8192 ;
	ATTRIBUTE_UNIX_DIRECTORY	 const integer ATTRIBUTE_UNIX_DIRECTORY = 16384 ;
	ATTRIBUTE_UNIX_BLOCK_DEV	 const integer ATTRIBUTE_UNIX_BLOCK_DEV = 24576 ;
	ATTRIBUTE_UNIX_REGULAR_FILE	 const integer ATTRIBUTE_UNIX_REGULAR_FILE = 32768 ;
	ATTRIBUTE_UNIX_SYM_LINK	 const integer ATTRIBUTE_UNIX_SYM_LINK = 40960 ;
	ATTRIBUTE_UNIX_SOCKET	 const integer ATTRIBUTE_UNIX_SOCKET = 49152 ;
	extract	public bool extract ( string $dir [, string $filepath = '' [, string $password = NULL [, bool $extended_data = false ]]] )	アーカイブのエントリを展開する
	getAttr	public int getAttr ( void )	エントリの属性を取得する
	getCrc	public string getCrc ( void )	エントリの CRC を取得する
	getFileTime	public string getFileTime ( void )	エントリの最終更新時刻を取得する
	getHostOs	public int getHostOs ( void )	エントリのホスト OS を取得する
	getMethod	public int getMethod ( void )	エントリの圧縮方法を取得する
	getName	public string getName ( void )	エントリの名前を取得する
	getPackedSize	public int getPackedSize ( void )	圧縮後のエントリのサイズを取得する
	getStream	public resource getStream ([ string $password ] )	このエントリのファイルハンドラを取得する
	getUnpackedSize	public int getUnpackedSize ( void )	展開後のエントリのサイズを取得する
	getVersion	public int getVersion ( void )	このエントリを展開するのに必要な RAR プログラムの最低バージョンを取得する
	isDirectory	public bool isDirectory ( void )	このエントリがディレクトリであるかどうかを調べる
	isEncrypted	public bool isEncrypted ( void )	このエントリが暗号化されているかどうかを調べる
	__toString	public string __toString ( void )	エントリのテキスト表現を取得する
RarException	isUsingExceptions	public static bool isUsingExceptions ( void )	例外によるエラー処理を使っているかどうかを調べる
	setUsingExceptions	public static void setUsingExceptions ( bool $using_exceptions )	例外によるエラー処理の有効化および無効化を行う
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
RecursiveArrayIterator	getChildren	public RecursiveArrayIterator getChildren ( void )	現在のエントリが配列あるいはオブジェクトである場合に、そのイテレータを返す
	hasChildren	public bool hasChildren ( void )	現在のエントリが配列あるいはオブジェクトであるかどうかを返す
	ArrayIterator::append	public void ArrayIterator::append ( mixed $value )
	ArrayIterator::asort	public void ArrayIterator::asort ( void )
	ArrayIterator::__construct	public ArrayIterator::__construct ([ mixed $array = array() [, int $flags = 0 ]] )
	ArrayIterator::count	public int ArrayIterator::count ( void )
	ArrayIterator::current	public mixed ArrayIterator::current ( void )
	ArrayIterator::getArrayCopy	public array ArrayIterator::getArrayCopy ( void )
	ArrayIterator::getFlags	public void ArrayIterator::getFlags ( void )
	ArrayIterator::key	public mixed ArrayIterator::key ( void )
	ArrayIterator::ksort	public void ArrayIterator::ksort ( void )
	ArrayIterator::natcasesort	public void ArrayIterator::natcasesort ( void )
	ArrayIterator::natsort	public void ArrayIterator::natsort ( void )
	ArrayIterator::next	public void ArrayIterator::next ( void )
	ArrayIterator::offsetExists	public void ArrayIterator::offsetExists ( string $index )
	ArrayIterator::offsetGet	public mixed ArrayIterator::offsetGet ( string $index )
	ArrayIterator::offsetSet	public void ArrayIterator::offsetSet ( string $index , string $newval )
	ArrayIterator::offsetUnset	public void ArrayIterator::offsetUnset ( string $index )
	ArrayIterator::rewind	public void ArrayIterator::rewind ( void )
	ArrayIterator::seek	public void ArrayIterator::seek ( int $position )
	ArrayIterator::serialize	public string ArrayIterator::serialize ( void )
	ArrayIterator::setFlags	public void ArrayIterator::setFlags ( string $flags )
	ArrayIterator::uasort	public void ArrayIterator::uasort ( string $cmp_function )
	ArrayIterator::uksort	public void ArrayIterator::uksort ( string $cmp_function )
	ArrayIterator::unserialize	public string ArrayIterator::unserialize ( string $serialized )
	ArrayIterator::valid	public bool ArrayIterator::valid ( void )
RecursiveCachingIterator	__construct	public __construct ( Iterator $iterator [, string $flags = self::CALL_TOSTRING ] )	コンストラクタ
	getChildren	public RecursiveCachingIterator getChildren ( void )	内部イテレータの子を RecursiveCachingIterator として返す
	hasChildren	public bool hasChildren ( void )	内部イテレータの現在の要素が子を持つかどうかチェックする
	CachingIterator::__construct	public CachingIterator::__construct ( Iterator $iterator [, string $flags = self::CALL_TOSTRING ] )
	CachingIterator::count	public int CachingIterator::count ( void )
	CachingIterator::current	public void CachingIterator::current ( void )
	CachingIterator::getCache	public void CachingIterator::getCache ( void )
	CachingIterator::getFlags	public void CachingIterator::getFlags ( void )
	CachingIterator::getInnerIterator	public Iterator CachingIterator::getInnerIterator ( void )
	CachingIterator::hasNext	public void CachingIterator::hasNext ( void )
	CachingIterator::key	public scalar CachingIterator::key ( void )
	CachingIterator::next	public void CachingIterator::next ( void )
	CachingIterator::offsetExists	public void CachingIterator::offsetExists ( string $index )
	CachingIterator::offsetGet	public void CachingIterator::offsetGet ( string $index )
	CachingIterator::offsetSet	public void CachingIterator::offsetSet ( string $index , string $newval )
	CachingIterator::offsetUnset	public void CachingIterator::offsetUnset ( string $index )
	CachingIterator::rewind	public void CachingIterator::rewind ( void )
	CachingIterator::setFlags	public void CachingIterator::setFlags ( bitmask $flags )
	CachingIterator::__toString	public void CachingIterator::__toString ( void )
	CachingIterator::valid	public void CachingIterator::valid ( void )
RecursiveCallbackFilterIterator	__construct	public __construct ( RecursiveIterator $iterator , string $callback )	RecursiveIterator から RecursiveCallbackFilterIterator を作成する
	getChildren	public RecursiveCallbackFilterIterator getChildren ( void )	RecursiveCallbackFilterIterator に含まれる内部イテレータの子を返す
	hasChildren	public void hasChildren ( void )	内部イテレータの現在の要素が子を持つかどうかを調べる
	CallbackFilterIterator::accept	public string CallbackFilterIterator::accept ( void )
RecursiveDirectoryIterator	__construct	public __construct ( string $path [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO ] )	RecursiveDirectoryIterator を作成する
	getChildren	public mixed getChildren ( void )	ディレクトリであれば、現在のエントリに対するイテレータを返す
	getSubPath	public string getSubPath ( void )	サブパスを取得する
	getSubPathname	public string getSubPathname ( void )	サブパスと名前を取得する
	hasChildren	public bool hasChildren ([ bool $allow_links = false ] )	現在のエントリがディレクトリかつ '.' もしくは '..' でないかどうかを返す
	key	public string key ( void )	現在のディレクトリエントリのパスとファイル名を返す
	next	public void next ( void )	次のエントリに移動する
	rewind	public void rewind ( void )	ディレクトリを最初に巻き戻す
	FilesystemIterator::__construct	public FilesystemIterator::__construct ( string $path [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS ] )
	FilesystemIterator::current	public mixed FilesystemIterator::current ( void )
	FilesystemIterator::getFlags	public int FilesystemIterator::getFlags ( void )
	FilesystemIterator::key	public string FilesystemIterator::key ( void )
	FilesystemIterator::next	public void FilesystemIterator::next ( void )
	FilesystemIterator::rewind	public void FilesystemIterator::rewind ( void )
	FilesystemIterator::setFlags	public void FilesystemIterator::setFlags ([ int $flags ] )
RecursiveFilterIterator	__construct	public __construct ( RecursiveIterator $iterator )	RecursiveIterator から RecursiveFilterIterator を作成する
	getChildren	public void getChildren ( void )	RecursiveFilterIterator に含まれる内部イテレータの子を返す
	hasChildren	public void hasChildren ( void )	内部イテレータの現在の要素が子を持つかどうかを調べる
	FilterIterator::accept	public abstract bool FilterIterator::accept ( void )
	FilterIterator::__construct	public FilterIterator::__construct ( Iterator $iterator )
	FilterIterator::current	public mixed FilterIterator::current ( void )
	FilterIterator::getInnerIterator	public Iterator FilterIterator::getInnerIterator ( void )
	FilterIterator::key	public mixed FilterIterator::key ( void )
	FilterIterator::next	public void FilterIterator::next ( void )
	FilterIterator::rewind	public void FilterIterator::rewind ( void )
	FilterIterator::valid	public bool FilterIterator::valid ( void )
RecursiveIterator	getChildren	public RecursiveIterator getChildren ( void )	現在のエントリのイテレータを返す
	hasChildren	public bool hasChildren ( void )	現在のエントリのイテレータを作れるかどうかを返す
	Iterator::current	abstract public mixed Iterator::current ( void )
	Iterator::key	abstract public scalar Iterator::key ( void )
	Iterator::next	abstract public void Iterator::next ( void )
	Iterator::rewind	abstract public void Iterator::rewind ( void )
	Iterator::valid	abstract public boolean Iterator::valid ( void )
RecursiveIteratorIterator	LEAVES_ONLY	 const integer LEAVES_ONLY = 0 ;
	SELF_FIRST	 const integer SELF_FIRST = 1 ;
	CHILD_FIRST	 const integer CHILD_FIRST = 2 ;
	CATCH_GET_CHILD	 const integer CATCH_GET_CHILD = 16 ;
	beginChildren	public void beginChildren ( void )	子を開始する
	beginIteration	public void beginIteration ( void )	反復処理を開始する
	callGetChildren	public RecursiveIterator callGetChildren ( void )	子を取得する
	callHasChildren	public bool callHasChildren ( void )	子を持つかどうかを調べる
	__construct	public __construct ( Traversable $iterator [, int $mode = RecursiveIteratorIterator::LEAVES_ONLY [, int $flags = 0 ]] )	RecursiveIteratorIterator を作成する
	current	public mixed current ( void )	現在の要素の値にアクセスする
	endChildren	public void endChildren ( void )	子を終了する
	endIteration	public void endIteration ( void )	反復処理を終了する
	getDepth	public int getDepth ( void )	再帰的なイテレーションにおける現在の深さを取得する
	getInnerIterator	public iterator getInnerIterator ( void )	内部イテレータを取得する
	getMaxDepth	public mixed getMaxDepth ( void )	最大の深さを取得する
	getSubIterator	public RecursiveIterator getSubIterator ([ int $level ] )	現在の有効なサブイテレータを取得する
	key	public mixed key ( void )	現在のキーにアクセスする
	next	public void next ( void )	次の要素に移動する
	nextElement	public void nextElement ( void )	次の要素
	rewind	public void rewind ( void )	トップレベルの内部イテレータの先頭要素にイテレータを巻き戻す
	setMaxDepth	public void setMaxDepth ([ string $max_depth = -1 ] )	最大の深さを設定する
	valid	public bool valid ( void )	現在の位置が有効かどうかをチェックする
	OuterIterator::getInnerIterator	public Iterator OuterIterator::getInnerIterator ( void )
RecursiveRegexIterator	__construct	public __construct ( RecursiveIterator $iterator , string $regex [, int $mode = self::MATCH [, int $flags = 0 [, int $preg_flags = 0 ]]] )	新しい RecursiveRegexIterator を作成する
	getChildren	public RecursiveRegexIterator getChildren ( void )	現在のエントリのイテレータを返す
	hasChildren	public bool hasChildren ( void )	現在のエントリのイテレータが取得可能かどうかを返す
	RecursiveIterator::getChildren	public RecursiveIterator RecursiveIterator::getChildren ( void )
	RecursiveIterator::hasChildren	public bool RecursiveIterator::hasChildren ( void )
	RegexIterator::accept	public bool RegexIterator::accept ( void )
	RegexIterator::getFlags	public int RegexIterator::getFlags ( void )
	RegexIterator::getMode	public int RegexIterator::getMode ( void )
	RegexIterator::getPregFlags	public int RegexIterator::getPregFlags ( void )
	RegexIterator::getRegex	public string RegexIterator::getRegex ( void )
	RegexIterator::setFlags	public void RegexIterator::setFlags ( int $flags )
	RegexIterator::setMode	public void RegexIterator::setMode ( int $mode )
	RegexIterator::setPregFlags	public void RegexIterator::setPregFlags ( int $preg_flags )
RecursiveTreeIterator	BYPASS_CURRENT	 const integer BYPASS_CURRENT = 4 ;
	BYPASS_KEY	 const integer BYPASS_KEY = 8 ;
	PREFIX_LEFT	 const integer PREFIX_LEFT = 0 ;
	PREFIX_MID_HAS_NEXT	 const integer PREFIX_MID_HAS_NEXT = 1 ;
	PREFIX_MID_LAST	 const integer PREFIX_MID_LAST = 2 ;
	PREFIX_END_HAS_NEXT	 const integer PREFIX_END_HAS_NEXT = 3 ;
	PREFIX_END_LAST	 const integer PREFIX_END_LAST = 4 ;
	PREFIX_RIGHT	 const integer PREFIX_RIGHT = 5 ;
	beginChildren	public void beginChildren ( void )	子を開始する
	beginIteration	public RecursiveIterator beginIteration ( void )	反復処理を開始する
	callGetChildren	public RecursiveIterator callGetChildren ( void )	子を取得する
	callHasChildren	public bool callHasChildren ( void )	子を持っているかどうかを調べる
	__construct	public __construct ( RecursiveIterator|IteratorAggregate $it [, int $flags = RecursiveTreeIterator::BYPASS_KEY [, int $cit_flags = CachingIterator::CATCH_GET_CHILD [, int $mode = RecursiveIteratorIterator::SELF_FIRST ]]] )	RecursiveTreeIterator を作成する
	current	public string current ( void )	現在の要素を取得する
	endChildren	public void endChildren ( void )	子を終了する
	endIteration	public void endIteration ( void )	反復処理を終了する
	getEntry	public string getEntry ( void )	現在のエントリを取得する
	getPostfix	public void getPostfix ( void )	接尾辞を取得する
	getPrefix	public string getPrefix ( void )	接頭辞を取得する
	key	public string key ( void )	現在の要素のキーを取得する
	next	public void next ( void )	次の要素に移動する
	nextElement	public void nextElement ( void )	次の要素
	rewind	public void rewind ( void )	イテレータを巻き戻す
	setPrefixPart	public void setPrefixPart ( int $part , string $value )	接頭辞の部分を設定する
	valid	public bool valid ( void )	有効性を調べる
	RecursiveIteratorIterator::beginChildren	public void RecursiveIteratorIterator::beginChildren ( void )
	RecursiveIteratorIterator::beginIteration	public void RecursiveIteratorIterator::beginIteration ( void )
	RecursiveIteratorIterator::callGetChildren	public RecursiveIterator RecursiveIteratorIterator::callGetChildren ( void )
	RecursiveIteratorIterator::callHasChildren	public bool RecursiveIteratorIterator::callHasChildren ( void )
	RecursiveIteratorIterator::__construct	public RecursiveIteratorIterator::__construct ( Traversable $iterator [, int $mode = RecursiveIteratorIterator::LEAVES_ONLY [, int $flags = 0 ]] )
	RecursiveIteratorIterator::current	public mixed RecursiveIteratorIterator::current ( void )
	RecursiveIteratorIterator::endChildren	public void RecursiveIteratorIterator::endChildren ( void )
	RecursiveIteratorIterator::endIteration	public void RecursiveIteratorIterator::endIteration ( void )
	RecursiveIteratorIterator::getDepth	public int RecursiveIteratorIterator::getDepth ( void )
	RecursiveIteratorIterator::getInnerIterator	public iterator RecursiveIteratorIterator::getInnerIterator ( void )
	RecursiveIteratorIterator::getMaxDepth	public mixed RecursiveIteratorIterator::getMaxDepth ( void )
	RecursiveIteratorIterator::getSubIterator	public RecursiveIterator RecursiveIteratorIterator::getSubIterator ([ int $level ] )
	RecursiveIteratorIterator::key	public mixed RecursiveIteratorIterator::key ( void )
	RecursiveIteratorIterator::next	public void RecursiveIteratorIterator::next ( void )
	RecursiveIteratorIterator::nextElement	public void RecursiveIteratorIterator::nextElement ( void )
	RecursiveIteratorIterator::rewind	public void RecursiveIteratorIterator::rewind ( void )
	RecursiveIteratorIterator::setMaxDepth	public void RecursiveIteratorIterator::setMaxDepth ([ string $max_depth = -1 ] )
	RecursiveIteratorIterator::valid	public bool RecursiveIteratorIterator::valid ( void )
Reflection	export	public static string export ( Reflector $reflector [, bool $return = false ] )	エクスポートする
	getModifierNames	public static array getModifierNames ( int $modifiers )	修飾子の名前を取得する
ReflectionClass	IS_IMPLICIT_ABSTRACT	 const integer IS_IMPLICIT_ABSTRACT = 16 ;
	IS_EXPLICIT_ABSTRACT	 const integer IS_EXPLICIT_ABSTRACT = 32 ;
	IS_FINAL	 const integer IS_FINAL = 64 ;
	$name	 public $name ;
	__construct	public __construct ( mixed $argument )	ReflectionClass を作成する
	export	public static string export ( mixed $argument [, bool $return = false ] )	クラスをエクスポートする
	getConstant	public mixed getConstant ( string $name )	定義されている定数を取得する
	getConstants	public array getConstants ( void )	定数を取得する
	getConstructor	public object getConstructor ( void )	クラスのコンストラクタを取得する
	getDefaultProperties	public array getDefaultProperties ( void )	デフォルトプロパティを取得する
	getDocComment	public string getDocComment ( void )	ドキュメントコメントを取得する
	getEndLine	public int getEndLine ( void )	終了行を取得する
	getExtension	public ReflectionExtension getExtension ( void )	クラスを定義する拡張モジュールを表す ReflectionExtension オブジェクトを取得する
	getExtensionName	public string getExtensionName ( void )	クラスを定義する拡張モジュールの名前を取得する
	getFileName	public string getFileName ( void )	クラスが定義されているファイルのファイル名を取得する
	getInterfaceNames	public array getInterfaceNames ( void )	インターフェイスの名前を取得する
	getInterfaces	public array getInterfaces ( void )	インターフェイスを取得する
	getMethod	public ReflectionMethod getMethod ( string $name )	クラスメソッドの ReflectionMethod を取得する
	getMethods	public array getMethods ([ int $filter ] )	メソッドの配列を取得する
	getModifiers	public int getModifiers ( void )	修飾子を取得する
	getName	public string getName ( void )	クラスの名前を取得する
	getNamespaceName	public string getNamespaceName ( void )	名前空間の名前を取得する
	getParentClass	public object getParentClass ( void )	親クラスを取得する
	getProperties	public array getProperties ([ int $filter ] )	プロパティを取得する
	getProperty	public ReflectionProperty getProperty ( string $name )	クラスのプロパティを表す ReflectionProperty を取得する
	getShortName	public string getShortName ( void )	短い名前を取得する
	getStartLine	public int getStartLine ( void )	開始行を取得する
	getStaticProperties	public array getStaticProperties ( void )	静的なプロパティを取得する
	getStaticPropertyValue	public mixed getStaticPropertyValue ( string $name [, mixed &$def_value ] )	静的なプロパティの値を取得する
	getTraitAliases	public array getTraitAliases ( void )	トレイトのエイリアスの配列を返す
	getTraitNames	public array getTraitNames ( void )	このクラスが使うトレイトの名前の配列を返す
	getTraits	public array getTraits ( void )	このクラスが使うトレイトの配列を返す
	hasConstant	public bool hasConstant ( string $name )	定数が定義されているかどうかを調べる
	hasMethod	public bool hasMethod ( string $name )	メソッドが定義されているかどうかを調べる
	hasProperty	public bool hasProperty ( string $name )	プロパティが定義されているかどうかを調べる
	implementsInterface	public bool implementsInterface ( string $interface )	インターフェイスの実装を調べる
	inNamespace	public bool inNamespace ( void )	名前空間内にあるかどうかを調べる
	isAbstract	public bool isAbstract ( void )	抽象クラスであるかどうかを調べる
	isCloneable	public bool isCloneable ( void )	このクラスがクローン可能かどうかを返す
	isFinal	public bool isFinal ( void )	final クラスであるかどうかを調べる
	isInstance	public bool isInstance ( object $object )	クラスのインスタンスであるかどうかを調べる
	isInstantiable	public bool isInstantiable ( void )	クラスのインスタンス化が可能であるかどうかを調べる
	isInterface	public bool isInterface ( void )	このクラスがインターフェイスであるかどうかを調べる
	isInternal	public bool isInternal ( void )	拡張モジュールあるいはコアで定義された内部クラスであるかどうかを調べる
	isIterateable	public bool isIterateable ( void )	反復処理が可能であるかどうかを調べる
	isSubclassOf	public bool isSubclassOf ( string $class )	サブクラスであるかどうかを調べる
	isTrait	public bool isTrait ( void )	トレイトであるかどうかを返す
	isUserDefined	public bool isUserDefined ( void )	ユーザー定義であるかどうかを調べる
	newInstance	public object newInstance ( mixed $args [, mixed $... ] )	指定した引数でクラスの新しいインスタンスを作成する
	newInstanceArgs	public object newInstanceArgs ([ array $args ] )	指定した引数でクラスの新しいインスタンスを作成する
	newInstanceWithoutConstructor	public object newInstanceWithoutConstructor ( void )	コンストラクタを起動せずに新しいクラスのインスタンスを作成する
	setStaticPropertyValue	public void setStaticPropertyValue ( string $name , string $value )	静的なプロパティの値を設定する
	__toString	public string __toString ( void )	ReflectionClass オブジェクトの文字列表現を返す
ReflectionException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
ReflectionExtension	$name	 public $name ;
	__clone	final private void __clone ( void )	クローンする
	__construct	public __construct ( string $name )	ReflectionExtension を作成する
	export	public static string export ( string $name [, string $return = false ] )	エクスポートする
	getClasses	public array getClasses ( void )	クラスを取得する
	getClassNames	public array getClassNames ( void )	クラス名を取得する
	getConstants	public array getConstants ( void )	定数を取得する
	getDependencies	public array getDependencies ( void )	依存性を取得する
	getFunctions	public array getFunctions ( void )	拡張モジュールの関数を取得する
	getINIEntries	public array getINIEntries ( void )	拡張モジュールの ini エントリを取得する
	getName	public string getName ( void )	拡張モジュール名を取得する
	getVersion	public string getVersion ( void )	拡張モジュールのバージョンを取得する
	info	public void info ( void )	拡張モジュールの情報を表示する
	isPersistent	public void isPersistent ( void )	この拡張モジュールが永続性のあるものかどうかを返す
	isTemporary	public void isTemporary ( void )	この拡張モジュールが一時的なものかどうかを返す
	__toString	public string __toString ( void )	文字列に変換する
ReflectionFunction	IS_DEPRECATED	 const integer IS_DEPRECATED = 262144 ;
	$name	 public $name ;
	__construct	public __construct ( mixed $name )	ReflectionFunction オブジェクトを作成する
	export	public static string export ( string $name [, string $return ] )	関数をエクスポートする
	getClosure	public Closure getClosure ( void )	この関数に動的に作成されたクロージャを返す
	invoke	public mixed invoke ([ mixed $parameter [, mixed $... ]] )	関数を起動する
	invokeArgs	public mixed invokeArgs ( array $args )	引数を指定して関数を起動する
	isDisabled	public bool isDisabled ( void )	関数が無効になっているかどうかを調べる
	__toString	public string __toString ( void )	文字列に変換する
	ReflectionFunctionAbstract::__clone	final private void ReflectionFunctionAbstract::__clone ( void )
	ReflectionFunctionAbstract::getClosureScopeClass	public ReflectionClass ReflectionFunctionAbstract::getClosureScopeClass ( void )
	ReflectionFunctionAbstract::getClosureThis	public object ReflectionFunctionAbstract::getClosureThis ( void )
	ReflectionFunctionAbstract::getDocComment	public string ReflectionFunctionAbstract::getDocComment ( void )
	ReflectionFunctionAbstract::getEndLine	public int ReflectionFunctionAbstract::getEndLine ( void )
	ReflectionFunctionAbstract::getExtension	public ReflectionExtension ReflectionFunctionAbstract::getExtension ( void )
	ReflectionFunctionAbstract::getExtensionName	public string ReflectionFunctionAbstract::getExtensionName ( void )
	ReflectionFunctionAbstract::getFileName	public string ReflectionFunctionAbstract::getFileName ( void )
	ReflectionFunctionAbstract::getName	public string ReflectionFunctionAbstract::getName ( void )
	ReflectionFunctionAbstract::getNamespaceName	public string ReflectionFunctionAbstract::getNamespaceName ( void )
	ReflectionFunctionAbstract::getNumberOfParameters	public int ReflectionFunctionAbstract::getNumberOfParameters ( void )
	ReflectionFunctionAbstract::getNumberOfRequiredParameters	public int ReflectionFunctionAbstract::getNumberOfRequiredParameters ( void )
	ReflectionFunctionAbstract::getParameters	public array ReflectionFunctionAbstract::getParameters ( void )
	ReflectionFunctionAbstract::getShortName	public string ReflectionFunctionAbstract::getShortName ( void )
	ReflectionFunctionAbstract::getStartLine	public int ReflectionFunctionAbstract::getStartLine ( void )
	ReflectionFunctionAbstract::getStaticVariables	public array ReflectionFunctionAbstract::getStaticVariables ( void )
	ReflectionFunctionAbstract::inNamespace	public bool ReflectionFunctionAbstract::inNamespace ( void )
	ReflectionFunctionAbstract::isClosure	public bool ReflectionFunctionAbstract::isClosure ( void )
	ReflectionFunctionAbstract::isDeprecated	public bool ReflectionFunctionAbstract::isDeprecated ( void )
	ReflectionFunctionAbstract::isGenerator	public bool ReflectionFunctionAbstract::isGenerator ( void )
	ReflectionFunctionAbstract::isInternal	public bool ReflectionFunctionAbstract::isInternal ( void )
	ReflectionFunctionAbstract::isUserDefined	public bool ReflectionFunctionAbstract::isUserDefined ( void )
	ReflectionFunctionAbstract::returnsReference	public bool ReflectionFunctionAbstract::returnsReference ( void )
	ReflectionFunctionAbstract::__toString	abstract public void ReflectionFunctionAbstract::__toString ( void )
ReflectionFunctionAbstract	$name	 public $name ;
	__clone	final private void __clone ( void )	関数のクローンを作成する
	getClosureScopeClass	public ReflectionClass getClosureScopeClass ( void )	クロージャに関連づけられたスコープを返す
	getClosureThis	public object getClosureThis ( void )	クロージャにバインドした this ポインタを返す
	getDocComment	public string getDocComment ( void )	ドキュメントコメントを取得する
	getEndLine	public int getEndLine ( void )	終了行番号を取得する
	getExtension	public ReflectionExtension getExtension ( void )	拡張モジュールの情報を取得する
	getExtensionName	public string getExtensionName ( void )	拡張モジュールの名前を取得する
	getFileName	public string getFileName ( void )	ファイル名を取得する
	getName	public string getName ( void )	関数名を取得する
	getNamespaceName	public string getNamespaceName ( void )	名前空間名を取得する
	getNumberOfParameters	public int getNumberOfParameters ( void )	パラメータ数を取得する
	getNumberOfRequiredParameters	public int getNumberOfRequiredParameters ( void )	必須パラメータの数を取得する
	getParameters	public array getParameters ( void )	パラメータを取得する
	getShortName	public string getShortName ( void )	関数の短い名前を取得する
	getStartLine	public int getStartLine ( void )	開始行番号を取得する
	getStaticVariables	public array getStaticVariables ( void )	静的変数を取得する
	inNamespace	public bool inNamespace ( void )	関数が名前空間内にあるかどうかを調べる
	isClosure	public bool isClosure ( void )	クロージャであるかどうかを調べる
	isDeprecated	public bool isDeprecated ( void )	非推奨であるかどうかを調べる
	isGenerator	public bool isGenerator ( void )	この関数がジェネレータかどうかを返す
	isInternal	public bool isInternal ( void )	内部関数かどうかを調べる
	isUserDefined	public bool isUserDefined ( void )	ユーザー定義関数であるかどうかを調べる
	returnsReference	public bool returnsReference ( void )	参照返しかどうかを調べる
	__toString	abstract public void __toString ( void )	文字列に変換する
ReflectionMethod	IS_STATIC	 const integer IS_STATIC = 1 ;
	IS_PUBLIC	 const integer IS_PUBLIC = 256 ;
	IS_PROTECTED	 const integer IS_PROTECTED = 512 ;
	IS_PRIVATE	 const integer IS_PRIVATE = 1024 ;
	IS_ABSTRACT	 const integer IS_ABSTRACT = 2 ;
	IS_FINAL	 const integer IS_FINAL = 4 ;
	$name	 public $name ;
	$class	 public $class ;
	__construct	public __construct ( mixed $class , string $name )	ReflectionMethod を作成する
	export	public static string export ( string $class , string $name [, bool $return = false ] )	メソッドをエクスポートする
	getClosure	public Closure getClosure ( string $object )	このメソッドに動的に作成されたクロージャを返す
	getDeclaringClass	public ReflectionClass getDeclaringClass ( void )	メソッドが宣言されているクラスを取得する
	getModifiers	public int getModifiers ( void )	メソッドの修飾子を取得する
	getPrototype	public ReflectionMethod getPrototype ( void )	メソッドのプロトタイプを (存在すれば) 取得する
	invoke	public mixed invoke ( object $object [, mixed $parameter [, mixed $... ]] )	実行する
	invokeArgs	public mixed invokeArgs ( object $object , array $args )	実行する
	isAbstract	public bool isAbstract ( void )	抽象メソッドであるかどうかを調べる
	isConstructor	public bool isConstructor ( void )	コンストラクタであるかどうかを調べる
	isDestructor	public bool isDestructor ( void )	デストラクタであるかどうかを調べる
	isFinal	public bool isFinal ( void )	final メソッドであるかどうかを調べる
	isPrivate	public bool isPrivate ( void )	private メソッドであるかどうかを調べる
	isProtected	public bool isProtected ( void )	protected メソッドであるかどうかを調べる
	isPublic	public bool isPublic ( void )	public メソッドであるかどうかを調べる
	isStatic	public bool isStatic ( void )	静的メソッドであるかどうかを調べる
	setAccessible	public void setAccessible ( bool $accessible )	メソッドのアクセス範囲を設定する
	__toString	public string __toString ( void )	ReflectionMethod オブジェクトの文字列表現を返す
	ReflectionFunctionAbstract::__clone	final private void ReflectionFunctionAbstract::__clone ( void )
	ReflectionFunctionAbstract::getClosureScopeClass	public ReflectionClass ReflectionFunctionAbstract::getClosureScopeClass ( void )
	ReflectionFunctionAbstract::getClosureThis	public object ReflectionFunctionAbstract::getClosureThis ( void )
	ReflectionFunctionAbstract::getDocComment	public string ReflectionFunctionAbstract::getDocComment ( void )
	ReflectionFunctionAbstract::getEndLine	public int ReflectionFunctionAbstract::getEndLine ( void )
	ReflectionFunctionAbstract::getExtension	public ReflectionExtension ReflectionFunctionAbstract::getExtension ( void )
	ReflectionFunctionAbstract::getExtensionName	public string ReflectionFunctionAbstract::getExtensionName ( void )
	ReflectionFunctionAbstract::getFileName	public string ReflectionFunctionAbstract::getFileName ( void )
	ReflectionFunctionAbstract::getName	public string ReflectionFunctionAbstract::getName ( void )
	ReflectionFunctionAbstract::getNamespaceName	public string ReflectionFunctionAbstract::getNamespaceName ( void )
	ReflectionFunctionAbstract::getNumberOfParameters	public int ReflectionFunctionAbstract::getNumberOfParameters ( void )
	ReflectionFunctionAbstract::getNumberOfRequiredParameters	public int ReflectionFunctionAbstract::getNumberOfRequiredParameters ( void )
	ReflectionFunctionAbstract::getParameters	public array ReflectionFunctionAbstract::getParameters ( void )
	ReflectionFunctionAbstract::getShortName	public string ReflectionFunctionAbstract::getShortName ( void )
	ReflectionFunctionAbstract::getStartLine	public int ReflectionFunctionAbstract::getStartLine ( void )
	ReflectionFunctionAbstract::getStaticVariables	public array ReflectionFunctionAbstract::getStaticVariables ( void )
	ReflectionFunctionAbstract::inNamespace	public bool ReflectionFunctionAbstract::inNamespace ( void )
	ReflectionFunctionAbstract::isClosure	public bool ReflectionFunctionAbstract::isClosure ( void )
	ReflectionFunctionAbstract::isDeprecated	public bool ReflectionFunctionAbstract::isDeprecated ( void )
	ReflectionFunctionAbstract::isGenerator	public bool ReflectionFunctionAbstract::isGenerator ( void )
	ReflectionFunctionAbstract::isInternal	public bool ReflectionFunctionAbstract::isInternal ( void )
	ReflectionFunctionAbstract::isUserDefined	public bool ReflectionFunctionAbstract::isUserDefined ( void )
	ReflectionFunctionAbstract::returnsReference	public bool ReflectionFunctionAbstract::returnsReference ( void )
	ReflectionFunctionAbstract::__toString	abstract public void ReflectionFunctionAbstract::__toString ( void )
ReflectionObject	IS_IMPLICIT_ABSTRACT	 const integer IS_IMPLICIT_ABSTRACT = 16 ;
	IS_EXPLICIT_ABSTRACT	 const integer IS_EXPLICIT_ABSTRACT = 32 ;
	IS_FINAL	 const integer IS_FINAL = 64 ;
	$name	 public $name ;
	__construct	public __construct ( object $argument )	ReflectionObject を作成する
	export	public static string export ( string $argument [, bool $return ] )	エクスポートする
	ReflectionClass::__construct	public ReflectionClass::__construct ( mixed $argument )
	ReflectionClass::export	public static string ReflectionClass::export ( mixed $argument [, bool $return = false ] )
	ReflectionClass::getConstant	public mixed ReflectionClass::getConstant ( string $name )
	ReflectionClass::getConstants	public array ReflectionClass::getConstants ( void )
	ReflectionClass::getConstructor	public object ReflectionClass::getConstructor ( void )
	ReflectionClass::getDefaultProperties	public array ReflectionClass::getDefaultProperties ( void )
	ReflectionClass::getDocComment	public string ReflectionClass::getDocComment ( void )
	ReflectionClass::getEndLine	public int ReflectionClass::getEndLine ( void )
	ReflectionClass::getExtension	public ReflectionExtension ReflectionClass::getExtension ( void )
	ReflectionClass::getExtensionName	public string ReflectionClass::getExtensionName ( void )
	ReflectionClass::getFileName	public string ReflectionClass::getFileName ( void )
	ReflectionClass::getInterfaceNames	public array ReflectionClass::getInterfaceNames ( void )
	ReflectionClass::getInterfaces	public array ReflectionClass::getInterfaces ( void )
	ReflectionClass::getMethod	public ReflectionMethod ReflectionClass::getMethod ( string $name )
	ReflectionClass::getMethods	public array ReflectionClass::getMethods ([ int $filter ] )
	ReflectionClass::getModifiers	public int ReflectionClass::getModifiers ( void )
	ReflectionClass::getName	public string ReflectionClass::getName ( void )
	ReflectionClass::getNamespaceName	public string ReflectionClass::getNamespaceName ( void )
	ReflectionClass::getParentClass	public object ReflectionClass::getParentClass ( void )
	ReflectionClass::getProperties	public array ReflectionClass::getProperties ([ int $filter ] )
	ReflectionClass::getProperty	public ReflectionProperty ReflectionClass::getProperty ( string $name )
	ReflectionClass::getShortName	public string ReflectionClass::getShortName ( void )
	ReflectionClass::getStartLine	public int ReflectionClass::getStartLine ( void )
	ReflectionClass::getStaticProperties	public array ReflectionClass::getStaticProperties ( void )
	ReflectionClass::getStaticPropertyValue	public mixed ReflectionClass::getStaticPropertyValue ( string $name [, mixed &$def_value ] )
	ReflectionClass::getTraitAliases	public array ReflectionClass::getTraitAliases ( void )
	ReflectionClass::getTraitNames	public array ReflectionClass::getTraitNames ( void )
	ReflectionClass::getTraits	public array ReflectionClass::getTraits ( void )
	ReflectionClass::hasConstant	public bool ReflectionClass::hasConstant ( string $name )
	ReflectionClass::hasMethod	public bool ReflectionClass::hasMethod ( string $name )
	ReflectionClass::hasProperty	public bool ReflectionClass::hasProperty ( string $name )
	ReflectionClass::implementsInterface	public bool ReflectionClass::implementsInterface ( string $interface )
	ReflectionClass::inNamespace	public bool ReflectionClass::inNamespace ( void )
	ReflectionClass::isAbstract	public bool ReflectionClass::isAbstract ( void )
	ReflectionClass::isCloneable	public bool ReflectionClass::isCloneable ( void )
	ReflectionClass::isFinal	public bool ReflectionClass::isFinal ( void )
	ReflectionClass::isInstance	public bool ReflectionClass::isInstance ( object $object )
	ReflectionClass::isInstantiable	public bool ReflectionClass::isInstantiable ( void )
	ReflectionClass::isInterface	public bool ReflectionClass::isInterface ( void )
	ReflectionClass::isInternal	public bool ReflectionClass::isInternal ( void )
	ReflectionClass::isIterateable	public bool ReflectionClass::isIterateable ( void )
	ReflectionClass::isSubclassOf	public bool ReflectionClass::isSubclassOf ( string $class )
	ReflectionClass::isTrait	public bool ReflectionClass::isTrait ( void )
	ReflectionClass::isUserDefined	public bool ReflectionClass::isUserDefined ( void )
	ReflectionClass::newInstance	public object ReflectionClass::newInstance ( mixed $args [, mixed $... ] )
	ReflectionClass::newInstanceArgs	public object ReflectionClass::newInstanceArgs ([ array $args ] )
	ReflectionClass::newInstanceWithoutConstructor	public object ReflectionClass::newInstanceWithoutConstructor ( void )
	ReflectionClass::setStaticPropertyValue	public void ReflectionClass::setStaticPropertyValue ( string $name , string $value )
	ReflectionClass::__toString	public string ReflectionClass::__toString ( void )
ReflectionParameter	$name	 public $name ;
	allowsNull	public bool allowsNull ( void )	null を許可するかどうかを調べる
	canBePassedByValue	public bool canBePassedByValue ( void )	このパラメータが値渡し可能かどうかを返す
	__clone	final private void __clone ( void )	クローンする
	__construct	public __construct ( string $function , string $parameter )	コンストラクタ
	export	public static string export ( string $function , string $parameter [, bool $return ] )	エクスポートする
	getClass	public ReflectionClass getClass ( void )	クラスを取得する
	getDeclaringClass	public ReflectionClass getDeclaringClass ( void )	宣言しているクラスを取得する
	getDeclaringFunction	public ReflectionFunction getDeclaringFunction ( void )	宣言している関数を取得する
	getDefaultValue	public mixed getDefaultValue ( void )	パラメータのデフォルト値を取得する
	getDefaultValueConstantName	public string getDefaultValueConstantName ( void )	デフォルト値が定数あるいは null の場合に、その定数名を返す
	getName	public string getName ( void )	パラメータ名を取得する
	getPosition	public int getPosition ( void )	パラメータの位置を取得する
	isArray	public bool isArray ( void )	配列を受け取るパラメータであるかどうかを調べる
	isCallable	public bool isCallable ( void )	パラメータが callable かどうかを返す
	isDefaultValueAvailable	public bool isDefaultValueAvailable ( void )	デフォルト値が存在するかどうかを調べる
	isDefaultValueConstant	public bool isDefaultValueConstant ( void )	このパラメータのデフォルト値が定数かどうかを返す
	isOptional	public bool isOptional ( void )	省略可能であるかどうかを調べる
	isPassedByReference	public bool isPassedByReference ( void )	参照渡しかどうかを調べる
	__toString	public string __toString ( void )	文字列に変換する
ReflectionProperty	IS_STATIC	 const integer IS_STATIC = 1 ;
	IS_PUBLIC	 const integer IS_PUBLIC = 256 ;
	IS_PROTECTED	 const integer IS_PROTECTED = 512 ;
	IS_PRIVATE	 const integer IS_PRIVATE = 1024 ;
	$name	 public $name ;
	$class	 public $class ;
	__clone	final private void __clone ( void )	クローンする
	__construct	public __construct ( mixed $class , string $name )	ReflectionProperty オブジェクトを作成する
	export	public static string export ( mixed $class , string $name [, bool $return ] )	エクスポートする
	getDeclaringClass	public ReflectionClass getDeclaringClass ( void )	宣言しているクラスを取得する
	getDocComment	public string getDocComment ( void )	ドキュメントコメントを取得する
	getModifiers	public int getModifiers ( void )	修飾子を取得する
	getName	public string getName ( void )	プロパティ名を取得する
	getValue	public mixed getValue ( object $object )	値を取得する
	isDefault	public bool isDefault ( void )	デフォルト値であるかどうかを調べる
	isPrivate	public bool isPrivate ( void )	private プロパティであるかどうかを調べる
	isProtected	public bool isProtected ( void )	protected プロパティであるかどうかを調べる
	isPublic	public bool isPublic ( void )	public プロパティであるかどうかを調べる
	isStatic	public bool isStatic ( void )	静的プロパティであるかどうかを調べる
	setAccessible	public void setAccessible ( bool $accessible )	プロパティのアクセス範囲を設定する
	setValue	public void setValue ( object $object , mixed $value )	プロパティの値を設定する
	__toString	public string __toString ( void )	文字列に変換する
ReflectionZendExtension	$name	 public $name ;
	__clone	final private void __clone ( void )	Clone のハンドラ
	__construct	public __construct ( string $name )	コンストラクタ
	export	public static string export ( string $name [, string $return ] )	エクスポート
	getAuthor	public string getAuthor ( void )	作者を取得する
	getCopyright	public string getCopyright ( void )	著作権情報を取得する
	getName	public string getName ( void )	名前を取得する
	getURL	public string getURL ( void )	URL を取得する
	getVersion	public string getVersion ( void )	バージョンを取得する
	__toString	public string __toString ( void )	文字列変換のハンドラ
Reflector	export	abstract public static string export ( void )	エクスポートする
	__toString	abstract public string __toString ( void )	文字列に変換する
RegexIterator	MATCH	 const integer MATCH = 0 ;
	GET_MATCH	 const integer GET_MATCH = 1 ;
	ALL_MATCHES	 const integer ALL_MATCHES = 2 ;
	SPLIT	 const integer SPLIT = 3 ;
	REPLACE	 const integer REPLACE = 4 ;
	USE_KEY	 const integer USE_KEY = 1 ;
	__construct	public __construct ( Iterator $iterator , string $regex [, int $mode = self::MATCH [, int $flags = 0 [, int $preg_flags = 0 ]]] )	新しい RegexIterator を作成する
	accept	public bool accept ( void )	受け入れ状況を取得する
	getFlags	public int getFlags ( void )	フラグを取得する
	getMode	public int getMode ( void )	操作モードを返す
	getPregFlags	public int getPregFlags ( void )	正規表現フラグを返す
	getRegex	public string getRegex ( void )	現在の正規表現を返す
	setFlags	public void setFlags ( int $flags )	フラグを設定する
	setMode	public void setMode ( int $mode )	操作モードを設定する
	setPregFlags	public void setPregFlags ( int $preg_flags )	正規表現フラグを設定する
	FilterIterator::accept	public abstract bool FilterIterator::accept ( void )
	FilterIterator::__construct	public FilterIterator::__construct ( Iterator $iterator )
	FilterIterator::current	public mixed FilterIterator::current ( void )
	FilterIterator::getInnerIterator	public Iterator FilterIterator::getInnerIterator ( void )
	FilterIterator::key	public mixed FilterIterator::key ( void )
	FilterIterator::next	public void FilterIterator::next ( void )
	FilterIterator::rewind	public void FilterIterator::rewind ( void )
	FilterIterator::valid	public bool FilterIterator::valid ( void )
ResourceBundle	__construct	public __construct ( string $locale , string $bundlename [, bool $fallback ] )
	count	public int count ( void )	バンドル内の要素数を取得する
	create	public static ResourceBundle create ( string $locale , string $bundlename [, bool $fallback ] )	リソースバンドルを作成する
	getErrorCode	public int getErrorCode ( void )	バンドルの直近のエラーコードを取得する
	getErrorMessage	public string getErrorMessage ( void )	バンドルの直近のエラーメッセージを取得する
	get	public mixed get ( string|int $index )	バンドルからデータを取得する
	getLocales	public array getLocales ( string $bundlename )
RRDCreator	addArchive	public void addArchive ( string $description )	Adds RRA - archive of data values for each data source.
	addDataSource	public void addDataSource ( string $description )	Adds data source definition for RRD database.
	__construct	public __construct ( string $path [, string $startTime [, int $step = 0 ]] )	Creates new RRDCreator instance
	save	public bool save ( void )	Saves the RRD database to a file
RRDGraph	__construct	public __construct ( string $path )	Creates new RRDGraph instance
	save	public array save ( void )	Saves the result of query into image
	saveVerbose	public array saveVerbose ( void )	Saves the RRD database query into image and returns the verbose    information about generated graph.
	setOptions	public void setOptions ( array $options )	Sets the options for rrd graph export
RRDUpdater	__construct	public __construct ( string $path )	Creates new RRDUpdater instance
	update	public bool update ( array $values [, string $time = time() ] )	Update the RRD database file
RuntimeException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
SeekableIterator	seek	abstract public void seek ( int $position )	位置を移動する
	Iterator::current	abstract public mixed Iterator::current ( void )
	Iterator::key	abstract public scalar Iterator::key ( void )
	Iterator::next	abstract public void Iterator::next ( void )
	Iterator::rewind	abstract public void Iterator::rewind ( void )
	Iterator::valid	abstract public boolean Iterator::valid ( void )
Serializable	serialize	abstract public string serialize ( void )	オブジェクトの文字列表現
	unserialize	abstract public void unserialize ( string $serialized )	オブジェクトを作成する
SessionHandler	close	public bool close ( void )	セッションを閉じる
	destroy	public bool destroy ( string $session_id )	セッションを破棄する
	gc	public bool gc ( int $maxlifetime )	古いセッションを削除する
	open	public bool open ( string $save_path , string $session_id )	セッションを開始する
	read	public string read ( string $session_id )	セッションのデータを読み込む
	write	public bool write ( string $session_id , string $session_data )	セッションのデータを書き込む
SessionHandlerInterface	close	abstract public bool close ( void )	セッションを閉じる
	destroy	abstract public bool destroy ( string $session_id )	セッションを破棄する
	gc	abstract public bool gc ( string $maxlifetime )	古いセッションを削除する
	open	abstract public bool open ( string $save_path , string $name )	セッションを開始する
	read	abstract public string read ( string $session_id )	セッションのデータを読み込む
	write	abstract public bool write ( string $session_id , string $session_data )	セッションのデータを書き込む
SimpleXMLElement	__construct	final public __construct ( string $data [, int $options = 0 [, bool $data_is_url = false [, string $ns = "" [, bool $is_prefix = false ]]]] )	新しい SimpleXMLElement オブジェクトを作成する
	addAttribute	public void addAttribute ( string $name [, string $value [, string $namespace ]] )	SimpleXML 要素に属性を追加する
	addChild	public SimpleXMLElement addChild ( string $name [, string $value [, string $namespace ]] )	XML ノードに子要素を追加する
	asXML	public mixed asXML ([ string $filename ] )	SimpleXML 要素に基づき整形式の XML 文字列を返す
	attributes	public SimpleXMLElement attributes ([ string $ns = NULL [, bool $is_prefix = false ]] )	要素の属性を定義する
	children	public SimpleXMLElement children ([ string $ns [, bool $is_prefix = false ]] )	指定したノードの子ノードを見付ける
	count	public int count ( void )	子要素を数える
	getDocNamespaces	public array getDocNamespaces ([ bool $recursive = false [, bool $from_root = true ]] )	ドキュメントで宣言されている名前空間を返す
	getName	public string getName ( void )	XML 要素の名前を取得する
	getNamespaces	public array getNamespaces ([ bool $recursive = false ] )	ドキュメントで使用している名前空間を返す
	registerXPathNamespace	public bool registerXPathNamespace ( string $prefix , string $ns )	次の XPath クエリ用の prefix/ns コンテキストを作成する
	xpath	public array xpath ( string $path )	XML データに Xpath クエリを実行する
SimpleXMLIterator	current	public mixed current ( void )	現在の SimpleXML エントリを返す
	getChildren	public SimpleXMLIterator getChildren ( void )	現在の要素の子要素を返す
	hasChildren	public bool hasChildren ( void )	現在の要素が子要素を持つかどうかを調べる
	key	public mixed key ( void )	現在のキーを返す
	next	public void next ( void )	次の要素に移動する
	rewind	public void rewind ( void )	最初の要素に巻き戻す
	valid	public bool valid ( void )	現在の要素が有効かどうかを調べる
	SimpleXMLElement::__construct	final public SimpleXMLElement::__construct ( string $data [, int $options = 0 [, bool $data_is_url = false [, string $ns = "" [, bool $is_prefix = false ]]]] )
	SimpleXMLElement::addAttribute	public void SimpleXMLElement::addAttribute ( string $name [, string $value [, string $namespace ]] )
	SimpleXMLElement::addChild	public SimpleXMLElement SimpleXMLElement::addChild ( string $name [, string $value [, string $namespace ]] )
	SimpleXMLElement::asXML	public mixed SimpleXMLElement::asXML ([ string $filename ] )
	SimpleXMLElement::attributes	public SimpleXMLElement SimpleXMLElement::attributes ([ string $ns = NULL [, bool $is_prefix = false ]] )
	SimpleXMLElement::children	public SimpleXMLElement SimpleXMLElement::children ([ string $ns [, bool $is_prefix = false ]] )
	SimpleXMLElement::count	public int SimpleXMLElement::count ( void )
	SimpleXMLElement::getDocNamespaces	public array SimpleXMLElement::getDocNamespaces ([ bool $recursive = false [, bool $from_root = true ]] )
	SimpleXMLElement::getName	public string SimpleXMLElement::getName ( void )
	SimpleXMLElement::getNamespaces	public array SimpleXMLElement::getNamespaces ([ bool $recursive = false ] )
	SimpleXMLElement::registerXPathNamespace	public bool SimpleXMLElement::registerXPathNamespace ( string $prefix , string $ns )
	SimpleXMLElement::xpath	public array SimpleXMLElement::xpath ( string $path )
SNMP	$max_oids	 public int $max_oids ;
	$valueretrieval	 public int $valueretrieval ;
	$quick_print	 public bool $quick_print ;
	$enum_print	 public bool $enum_print ;
	$oid_output_format	 public int $oid_output_format ;
	$oid_increasing_check	 public bool $oid_increasing_check ;
	$exceptions_enabled	 public int $exceptions_enabled ;
	$info	 public array $info ;
	ERRNO_NOERROR	 const integer ERRNO_NOERROR = 0 ;
	ERRNO_GENERIC	 const integer ERRNO_GENERIC = 2 ;
	ERRNO_TIMEOUT	 const integer ERRNO_TIMEOUT = 4 ;
	ERRNO_ERROR_IN_REPLY	 const integer ERRNO_ERROR_IN_REPLY = 8 ;
	ERRNO_OID_NOT_INCREASING	 const integer ERRNO_OID_NOT_INCREASING = 16 ;
	ERRNO_OID_PARSING_ERROR	 const integer ERRNO_OID_PARSING_ERROR = 32 ;
	ERRNO_MULTIPLE_SET_QUERIES	 const integer ERRNO_MULTIPLE_SET_QUERIES = 64 ;
	ERRNO_ANY	 const integer ERRNO_ANY = 126 ;
	VERSION_1	 const integer VERSION_1 = 0 ;
	VERSION_2C	 const integer VERSION_2C = 1 ;
	VERSION_2c	 const integer VERSION_2c = 1 ;
	VERSION_3	 const integer VERSION_3 = 3 ;
	__construct	public __construct ( int $version , string $hostname , string $community [, int $timeout = 1000000 [, int $retries = 5 ]] )	リモート SNMP エージェントへのセッションを表す SNMP インスタンスを作成する
	close	public bool close ( void )	SNMP セッションを閉じる
	get	public mixed get ( mixed $object_id [, bool $preserve_keys = false ] )	SNMP オブジェクトを取得する
	getErrno	public int getErrno ( void )	直近のエラーコードを取得する
	getError	public string getError ( void )	直近のエラーメッセージを取得する
	getnext	public mixed getnext ( mixed $object_id )	指定したオブジェクト ID に続く SNMP オブジェクトを取得する
	set	public bool set ( mixed $object_id , mixed $type , mixed $value )	SNMP オブジェクトの値を設定する
	setSecurity	public bool setSecurity ( string $sec_level [, string $auth_protocol = [, string $auth_passphrase = [, string $priv_protocol = [, string $priv_passphrase = [, string $contextName = [, string $contextEngineID = ]]]]]] ) 	セキュリティ関連の SNMPv3 セッションパラメータを設定する
	walk	public array walk ( string $object_id [, bool $suffix_as_key = FALSE [, int $max_repetitions [, int $non_repeaters ]]] )	SNMP オブジェクトのサブツリーを取得する
SNMPException	$code	 protected string $code ;
	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
SoapClient	__call	public mixed __call ( string $function_name , string $arguments )	SOAP 関数をコールする (非推奨)
	SoapClient	public SoapClient ( mixed $wsdl [, array $options ] )	SoapClient コンストラクタ
	__doRequest	public string __doRequest ( string $request , string $location , string $action , int $version [, int $one_way = 0 ] )	SOAP リクエストを実行する
	__getFunctions	public array __getFunctions ( void )	SOAP 関数の一覧を返す
	__getLastRequest	public string __getLastRequest ( void )	直近の SOAP リクエストを返す
	__getLastRequestHeaders	public string __getLastRequestHeaders ( void )	直近の SOAP リクエストヘッダを返す
	__getLastResponse	public string __getLastResponse ( void )	直近の SOAP レスポンスを返す
	__getLastResponseHeaders	public string __getLastResponseHeaders ( void )	直近の SOAP レスポンスヘッダを返す
	__getTypes	public array __getTypes ( void )	SOAP 型の一覧を返す
	__setCookie	public void __setCookie ( string $name [, string $value ] )	SOAP リクエストと共に送信されるクッキーを設定する
	__setLocation	public string __setLocation ([ string $new_location ] )	使用するウェブサービスの場所を設定する
	__setSoapHeaders	public bool __setSoapHeaders ([ mixed $soapheaders ] )	以降のコール用の SOAP ヘッダを設定する
	__soapCall	public mixed __soapCall ( string $function_name , array $arguments [, array $options [, mixed $input_headers [, array &$output_headers ]]] )	SOAP 関数をコールする
	SoapClient	public SoapClient ( mixed $wsdl [, array $options ] )	SoapClient コンストラクタ
SoapFault	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	__construct	__construct ( string $faultcode , string $faultstring [, string $faultactor [, string $detail [, string $faultname [, string $headerfault ]]]] )	SoapFault コンストラクタ
	SoapFault	SoapFault ( string $faultcode , string $faultstring [, string $faultactor [, string $detail [, string $faultname [, string $headerfault ]]]] )	SoapFault コンストラクタ
	__toString	public string __toString ( void )	SoapFault の文字列表現を取得する
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
SoapHeader	__construct	__construct ( string $namespace , string $name [, mixed $data [, bool $mustunderstand [, string $actor ]]] )	SoapHeader コンストラクタ
	SoapHeader	SoapHeader ( string $namespace , string $name [, mixed $data [, bool $mustunderstand = false [, string $actor ]]] )	SoapHeader コンストラクタ
SoapParam	__construct	__construct ( mixed $data , string $name )	SoapParam コンストラクタ
	SoapParam	SoapParam ( mixed $data , string $name )	SoapParam コンストラクタ
SoapServer	addFunction	public void addFunction ( mixed $functions )	SOAP リクエストによって処理される単一もしくはいくつかの関数を追加する
	addSoapHeader	public void addSoapHeader ( SoapHeader $object )	SOAP ヘッダをレスポンスに追加する
	__construct	public __construct ( mixed $wsdl [, array $options ] )	SoapServer コンストラクタ
	fault	public void fault ( string $code , string $string [, string $actor [, string $details [, string $name ]]] )	エラーを示す SoapServer フォールト を発行する
	getFunctions	public array getFunctions ( void )	定義されている関数の一覧を返す
	handle	public void handle ([ string $soap_request ] )	SOAP リクエストを処理する
	setClass	public void setClass ( string $class_name [, mixed $args [, mixed $... ]] )	SOAP リクエストを処理するクラスを設定する
	setObject	public void setObject ( object $object )	SOAP リクエストの処理に使用するオブジェクトを設定する
	setPersistence	public void setPersistence ( int $mode )	SoapServer の持続モードを設定する
	SoapServer	public SoapServer ( mixed $wsdl [, array $options ] )	SoapServer コンストラクタ
SoapVar	__construct	__construct ( string $data , string $encoding [, string $type_name [, string $type_namespace [, string $node_name [, string $node_namespace ]]]] )	SoapVar コンストラクタ
	SoapVar	SoapVar ( mixed $data , string $encoding [, string $type_name [, string $type_namespace [, string $node_name [, string $node_namespace ]]]] )	SoapVar コンストラクタ
SolrClient	SEARCH_SERVLET_TYPE	 const integer SEARCH_SERVLET_TYPE = 1 ;
	UPDATE_SERVLET_TYPE	 const integer UPDATE_SERVLET_TYPE = 2 ;
	THREADS_SERVLET_TYPE	 const integer THREADS_SERVLET_TYPE = 4 ;
	PING_SERVLET_TYPE	 const integer PING_SERVLET_TYPE = 8 ;
	TERMS_SERVLET_TYPE	 const integer TERMS_SERVLET_TYPE = 16 ;
	DEFAULT_SEARCH_SERVLET	 const string DEFAULT_SEARCH_SERVLET = select ;
	DEFAULT_UPDATE_SERVLET	 const string DEFAULT_UPDATE_SERVLET = update ;
	DEFAULT_THREADS_SERVLET	 const string DEFAULT_THREADS_SERVLET = admin/threads ;
	DEFAULT_PING_SERVLET	 const string DEFAULT_PING_SERVLET = admin/ping ;
	DEFAULT_TERMS_SERVLET	 const string DEFAULT_TERMS_SERVLET = terms ;
	addDocument	public SolrUpdateResponse addDocument ( SolrInputDocument $doc [, bool $allowDups = false [, int $commitWithin = 0 ]] )	Adds a document to the index
	addDocuments	public void addDocuments ( array $docs [, bool $allowDups = false [, int $commitWithin = 0 ]] )	Adds a collection of SolrInputDocument instances to the index
	commit	public SolrUpdateResponse commit ([ int $maxSegments = "1" [, bool $waitFlush = true [, bool $waitSearcher = true ]]] )	Finalizes all add/deletes made to the index
	__construct	public __construct ( array $clientOptions )	Constructor for the SolrClient object
	deleteById	public SolrUpdateResponse deleteById ( string $id )	Delete by Id
	deleteByIds	public SolrUpdateResponse deleteByIds ( array $ids )	Deletes by Ids
	deleteByQueries	public SolrUpdateResponse deleteByQueries ( array $queries )	Removes all documents matching any of the queries
	deleteByQuery	public SolrUpdateResponse deleteByQuery ( string $query )	Deletes all documents matching the given query
	__destruct	public void __destruct ( void )	SolrClient に対するデストラクタ
	getDebug	public string getDebug ( void )	Returns the debug data for the last connection attempt
	getOptions	public array getOptions ( void )	Returns the client options set internally
	optimize	public SolrUpdateResponse optimize ([ int $maxSegments = "1" [, bool $waitFlush = true [, bool $waitSearcher = true ]]] )	Defragments the index
	ping	public SolrPingResponse ping ( void )	Checks if Solr server is still up
	query	public SolrQueryResponse query ( SolrParams $query )	Sends a query to the server
	request	public void request ( string $raw_request )	Sends a raw update request
	rollback	public SolrUpdateResponse rollback ( void )	Rollbacks all add/deletes made to the index since the last commit
	setResponseWriter	public void setResponseWriter ( string $responseWriter )	Sets the response writer used to prepare the response from Solr
	setServlet	public bool setServlet ( int $type , string $value )	Changes the specified servlet type to a new value
	threads	public void threads ( void )	スレッドの状態をチェック
SolrClientException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	$sourceline	 protected integer $sourceline ;
	$sourcefile	 protected string $sourcefile ;
	$zif_name	 protected string $zif_name ;
	getInternalInfo	public array getInternalInfo ( void )	例外がスローされた際の内部情報を返す
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
	SolrException::getInternalInfo	public array SolrException::getInternalInfo ( void )
SolrDocument	SORT_DEFAULT	 const integer SORT_DEFAULT = 1 ;
	SORT_ASC	 const integer SORT_ASC = 1 ;
	SORT_DESC	 const integer SORT_DESC = 2 ;
	SORT_FIELD_NAME	 const integer SORT_FIELD_NAME = 1 ;
	SORT_FIELD_VALUE_COUNT	 const integer SORT_FIELD_VALUE_COUNT = 2 ;
	SORT_FIELD_BOOST_VALUE	 const integer SORT_FIELD_BOOST_VALUE = 4 ;
	addField	public bool addField ( string $fieldName , string $fieldValue )	文書にフィールドを追加
	clear	public bool clear ( void )	Drops all the fields in the document
	__clone	public void __clone ( void )	SolrDocument オブジェクトのコピーを作成
	__construct	public __construct ( void )	コンストラクタ
	current	public SolrDocumentField current ( void )	現行のフィールドを取得
	deleteField	public bool deleteField ( string $fieldName )	文書からフィールドを除去
	__destruct	public void __destruct ( void )	デストラクタ
	fieldExists	public bool fieldExists ( string $fieldName )	Checks if a field exists in the document
	__get	public SolrDocumentField __get ( string $fieldName )	プロパティとしてフィールドにアクセス
	getField	public SolrDocumentField getField ( string $fieldName )	名前でフィールドを取得
	getFieldCount	public int getFieldCount ( void )	この文書内のフィールド数を返す
	getFieldNames	public array getFieldNames ( void )	文書内のフィールド名の配列を返す
	getInputDocument	public SolrInputDocument getInputDocument ( void )	Returns a SolrInputDocument equivalent of the object
	__isset	public bool __isset ( string $fieldName )	フィールドが存在するかチェック
	key	public string key ( void )	現行のキーを返す
	merge	public bool merge ( SolrDocument $sourceDoc [, bool $overwrite = true ] )	Merges source to the current SolrDocument
	next	public void next ( void )	内部ポインタを次のフィールドに移動
	offsetExists	public bool offsetExists ( string $fieldName )	特定のフィールドが存在するかどうかチェック
	offsetGet	public SolrDocumentField offsetGet ( string $fieldName )	フィールドを取得
	offsetSet	public void offsetSet ( string $fieldName , string $fieldValue )	文書にフィールドを追加
	offsetUnset	public void offsetUnset ( string $fieldName )	フィールドを除去
	reset	public bool reset ( void )	SolrDocument::clear()へのエイリアス
	rewind	public void rewind ( void )	内部ポインタを先頭にリセット
	serialize	public string serialize ( void )	カスタムのシリアライズで使われます
	__set	public bool __set ( string $fieldName , string $fieldValue )	Adds another field to the document
	sort	public bool sort ( int $sortOrderBy [, int $sortDirection = SolrDocument::SORT_ASC ] )	Sorts the fields in the document
	toArray	public array toArray ( void )	文書の配列表現を返す
	unserialize	public void unserialize ( string $serialized )	Custom serialization of SolrDocument objects
	__unset	public bool __unset ( string $fieldName )	文書からフィールドを除去
	valid	public bool valid ( void )	Checks if the current position internally is still valid
SolrDocumentField	$name	 readonly public string $name ;
	$boost	 readonly public float $boost ;
	$values	 readonly public array $values ;
	__construct	public __construct ( void )	コンストラクタ
	__destruct	public void __destruct ( void )	デストラクタ
SolrException	$sourceline	 protected integer $sourceline ;
	$sourcefile	 protected string $sourcefile ;
	$zif_name	 protected string $zif_name ;
	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	getInternalInfo	public array getInternalInfo ( void )	例外がスローされた際の内部情報を返す
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
SolrGenericResponse	PARSE_SOLR_OBJ	 const integer PARSE_SOLR_OBJ = 0 ;
	PARSE_SOLR_DOC	 const integer PARSE_SOLR_DOC = 1 ;
	SolrResponse::PARSE_SOLR_OBJ	 const integer SolrResponse::PARSE_SOLR_OBJ = 0 ;
	SolrResponse::PARSE_SOLR_DOC	 const integer SolrResponse::PARSE_SOLR_DOC = 1 ;
	$http_status	 protected integer $http_status ;
	$parser_mode	 protected integer $parser_mode ;
	$success	 protected bool $success ;
	$http_status_message	 protected string $http_status_message ;
	$http_request_url	 protected string $http_request_url ;
	$http_raw_request_headers	 protected string $http_raw_request_headers ;
	$http_raw_request	 protected string $http_raw_request ;
	$http_raw_response_headers	 protected string $http_raw_response_headers ;
	$http_raw_response	 protected string $http_raw_response ;
	$http_digested_response	 protected string $http_digested_response ;
	__construct	public __construct ( void )	コンストラクタ
	__destruct	public void __destruct ( void )	デストラクタ
	SolrResponse::getDigestedResponse	public string SolrResponse::getDigestedResponse ( void )
	SolrResponse::getHttpStatus	public int SolrResponse::getHttpStatus ( void )
	SolrResponse::getHttpStatusMessage	public string SolrResponse::getHttpStatusMessage ( void )
	SolrResponse::getRawRequest	public string SolrResponse::getRawRequest ( void )
	SolrResponse::getRawRequestHeaders	public string SolrResponse::getRawRequestHeaders ( void )
	SolrResponse::getRawResponse	public string SolrResponse::getRawResponse ( void )
	SolrResponse::getRawResponseHeaders	public string SolrResponse::getRawResponseHeaders ( void )
	SolrResponse::getRequestUrl	public string SolrResponse::getRequestUrl ( void )
	SolrResponse::getResponse	public SolrObject SolrResponse::getResponse ( void )
	SolrResponse::setParseMode	public bool SolrResponse::setParseMode ([ int $parser_mode = 0 ] )
	SolrResponse::success	public bool SolrResponse::success ( void )
SolrIllegalArgumentException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	$sourceline	 protected integer $sourceline ;
	$sourcefile	 protected string $sourcefile ;
	$zif_name	 protected string $zif_name ;
	getInternalInfo	public array getInternalInfo ( void )	例外がスローされた際の内部情報を返す
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
	SolrException::getInternalInfo	public array SolrException::getInternalInfo ( void )
SolrIllegalOperationException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	$sourceline	 protected integer $sourceline ;
	$sourcefile	 protected string $sourcefile ;
	$zif_name	 protected string $zif_name ;
	getInternalInfo	public array getInternalInfo ( void )	例外がスローされた際の内部情報を返す
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
	SolrException::getInternalInfo	public array SolrException::getInternalInfo ( void )
SolrInputDocument	SORT_DEFAULT	 const integer SORT_DEFAULT = 1 ;
	SORT_ASC	 const integer SORT_ASC = 1 ;
	SORT_DESC	 const integer SORT_DESC = 2 ;
	SORT_FIELD_NAME	 const integer SORT_FIELD_NAME = 1 ;
	SORT_FIELD_VALUE_COUNT	 const integer SORT_FIELD_VALUE_COUNT = 2 ;
	SORT_FIELD_BOOST_VALUE	 const integer SORT_FIELD_BOOST_VALUE = 4 ;
	addField	public bool addField ( string $fieldName , string $fieldValue [, float $fieldBoostValue = 0.0 ] )	文書にフィールドを追加
	clear	public bool clear ( void )	入力した文書をリセット
	__clone	public void __clone ( void )	SolrDocument のコピーを作成
	__construct	public __construct ( void )	コンストラクタ
	deleteField	public bool deleteField ( string $fieldName )	文書からフィールドを除去
	__destruct	public void __destruct ( void )	デストラクタ
	fieldExists	public bool fieldExists ( string $fieldName )	フィールドが存在するかチェック
	getBoost	public float getBoost ( void )	文書に対する現行の boost 値を取得
	getField	public SolrDocumentField getField ( string $fieldName )	名前でフィールドを取得
	getFieldBoost	public float getFieldBoost ( string $fieldName )	特定のフィールドに対する boost 値を取得
	getFieldCount	public int getFieldCount ( void )	文書内のフィールド数を返す
	getFieldNames	public array getFieldNames ( void )	文書内のフィールドを全て含む配列を返す
	merge	public bool merge ( SolrInputDocument $sourceDoc [, bool $overwrite = true ] )	Merges one input document into another
	reset	public bool reset ( void )	これは、SolrInputDocument::clear のエイリアスです
	setBoost	public bool setBoost ( float $documentBoostValue )	この文書に対する boost 値を設定
	setFieldBoost	public bool setFieldBoost ( string $fieldName , float $fieldBoostValue )	フィールドに対するインデキシング時間の boost 値を設定
	sort	public bool sort ( int $sortOrderBy [, int $sortDirection = SolrInputDocument::SORT_ASC ] )	Sorts the fields within the document
	toArray	public array toArray ( void )	入力した文書の配列表現を返す
SolrModifiableParams	__construct	public __construct ( void )	コンストラクタ
	__destruct	public void __destruct ( void )	デストラクタ
	SolrParams::add	final public SolrParams SolrParams::add ( string $name , string $value )
	SolrParams::addParam	public SolrParams SolrParams::addParam ( string $name , string $value )
	SolrParams::get	final public mixed SolrParams::get ( string $param_name )
	SolrParams::getParam	final public mixed SolrParams::getParam ([ string $param_name ] )
	SolrParams::getParams	final public array SolrParams::getParams ( void )
	SolrParams::getPreparedParams	final public array SolrParams::getPreparedParams ( void )
	SolrParams::serialize	final public string SolrParams::serialize ( void )
	SolrParams::set	final public void SolrParams::set ( string $name , string $value )
	SolrParams::setParam	public SolrParams SolrParams::setParam ( string $name , string $value )
	SolrParams::toString	final public string SolrParams::toString ([ bool $url_encode = false ] )
	SolrParams::unserialize	final public void SolrParams::unserialize ( string $serialized )
SolrObject	__construct	public __construct ( void )	Solr オブジェクトを生成
	__destruct	public void __destruct ( void )	デストラクタ
	getPropertyNames	public array getPropertyNames ( void )	全てのプロパティ名の配列を返す
	offsetExists	public bool offsetExists ( string $property_name )	プロパティが存在するかチェック
	offsetGet	public mixed offsetGet ( string $property_name )	プロパティを取得するために使用される
	offsetSet	public void offsetSet ( string $property_name , string $property_value )	プロパティに対して値を設定
	offsetUnset	public void offsetUnset ( string $property_name )	プロパティに対して値を設定
SolrParams	add	final public SolrParams add ( string $name , string $value )	これは、SolrParams::addParam に対するエイリアスです
	addParam	public SolrParams addParam ( string $name , string $value )	オブジェクトにパラメータを追加
	get	final public mixed get ( string $param_name )	これは、SolrParams::getParam に対するエイリアスです。
	getParam	final public mixed getParam ([ string $param_name ] )	パラメータ値を返す
	getParams	final public array getParams ( void )	URL エンコードされていないパラメータの配列を返す
	getPreparedParams	final public array getPreparedParams ( void )	URL エンコードされたパラメータの配列を返す
	serialize	final public string serialize ( void )	カスタムのシリアライズで使われます
	set	final public void set ( string $name , string $value )	SolrParams::setParam のエイリアス
	setParam	public SolrParams setParam ( string $name , string $value )	パラメータを指定された値に設定
	toString	final public string toString ([ bool $url_encode = false ] )	オブジェクト内の名前と値のペアのパラメータを全て返します
	unserialize	final public void unserialize ( string $serialized )	カスタムのシリアライズで使われます
SolrPingResponse	PARSE_SOLR_OBJ	 const integer PARSE_SOLR_OBJ = 0 ;
	PARSE_SOLR_DOC	 const integer PARSE_SOLR_DOC = 1 ;
	__construct	public __construct ( void )	コンストラクタ
	__destruct	public void __destruct ( void )	デストラクタ
	getResponse	public string getResponse ( void )	サーバーからのレスポンスを返す
	SolrResponse::getDigestedResponse	public string SolrResponse::getDigestedResponse ( void )
	SolrResponse::getHttpStatus	public int SolrResponse::getHttpStatus ( void )
	SolrResponse::getHttpStatusMessage	public string SolrResponse::getHttpStatusMessage ( void )
	SolrResponse::getRawRequest	public string SolrResponse::getRawRequest ( void )
	SolrResponse::getRawRequestHeaders	public string SolrResponse::getRawRequestHeaders ( void )
	SolrResponse::getRawResponse	public string SolrResponse::getRawResponse ( void )
	SolrResponse::getRawResponseHeaders	public string SolrResponse::getRawResponseHeaders ( void )
	SolrResponse::getRequestUrl	public string SolrResponse::getRequestUrl ( void )
	SolrResponse::getResponse	public SolrObject SolrResponse::getResponse ( void )
	SolrResponse::setParseMode	public bool SolrResponse::setParseMode ([ int $parser_mode = 0 ] )
	SolrResponse::success	public bool SolrResponse::success ( void )
SolrQuery	ORDER_ASC	 const integer ORDER_ASC = 0 ;
	ORDER_DESC	 const integer ORDER_DESC = 1 ;
	FACET_SORT_INDEX	 const integer FACET_SORT_INDEX = 0 ;
	FACET_SORT_COUNT	 const integer FACET_SORT_COUNT = 1 ;
	TERMS_SORT_INDEX	 const integer TERMS_SORT_INDEX = 0 ;
	TERMS_SORT_COUNT	 const integer TERMS_SORT_COUNT = 1 ;
	addFacetDateField	public SolrQuery addFacetDateField ( string $dateField )	Maps to facet.date
	addFacetDateOther	public SolrQuery addFacetDateOther ( string $value [, string $field_override ] )	Adds another facet.date.other parameter
	addFacetField	public SolrQuery addFacetField ( string $field )	Adds another field to the facet
	addFacetQuery	public SolrQuery addFacetQuery ( string $facetQuery )	Adds a facet query
	addField	public SolrQuery addField ( string $field )	Specifies which fields to return in the result
	addFilterQuery	public SolrQuery addFilterQuery ( string $fq )	Specifies a filter query
	addHighlightField	public SolrQuery addHighlightField ( string $field )	Maps to hl.fl
	addMltField	public SolrQuery addMltField ( string $field )	Sets a field to use for similarity
	addMltQueryField	public SolrQuery addMltQueryField ( string $field , float $boost )	Maps to mlt.qf
	addSortField	public SolrQuery addSortField ( string $field [, int $order = SolrQuery::ORDER_DESC ] )	Used to control how the results should be sorted
	addStatsFacet	public SolrQuery addStatsFacet ( string $field )	Requests a return of sub results for values within the given facet
	addStatsField	public SolrQuery addStatsField ( string $field )	Maps to stats.field parameter
	__construct	public __construct ([ string $q ] )	コンストラクタ
	__destruct	public void __destruct ( void )	デストラクタ
	getFacet	public bool getFacet ( void )	Returns the value of the facet parameter
	getFacetDateEnd	public string getFacetDateEnd ([ string $field_override ] )	Returns the value for the facet.date.end parameter
	getFacetDateFields	public array getFacetDateFields ( void )	Returns all the facet.date fields
	getFacetDateGap	public string getFacetDateGap ([ string $field_override ] )	Returns the value of the facet.date.gap parameter
	getFacetDateHardEnd	public string getFacetDateHardEnd ([ string $field_override ] )	Returns the value of the facet.date.hardend parameter
	getFacetDateOther	public array getFacetDateOther ([ string $field_override ] )	Returns the value for the facet.date.other parameter
	getFacetDateStart	public string getFacetDateStart ([ string $field_override ] )	Returns the  lower bound for the first date range for all date faceting on this field
	getFacetFields	public array getFacetFields ( void )	Returns all the facet fields
	getFacetLimit	public int getFacetLimit ([ string $field_override ] )	Returns the maximum number of constraint counts that should be returned for the facet fields
	getFacetMethod	public string getFacetMethod ([ string $field_override ] )	Returns the value of the facet.method parameter
	getFacetMinCount	public int getFacetMinCount ([ string $field_override ] )	Returns the minimum counts for facet fields should be included in the response
	getFacetMissing	public bool getFacetMissing ([ string $field_override ] )	Returns the current state of the facet.missing parameter
	getFacetOffset	public int getFacetOffset ([ string $field_override ] )	Returns an offset into the list of constraints to be used for pagination
	getFacetPrefix	public string getFacetPrefix ([ string $field_override ] )	Returns the facet prefix
	getFacetQueries	public array getFacetQueries ( void )	Returns all the facet queries
	getFacetSort	public int getFacetSort ([ string $field_override ] )	Returns the facet sort type
	getFields	public array getFields ( void )	Returns the list of fields that will be returned in the response
	getFilterQueries	public array getFilterQueries ( void )	Returns an array of filter queries
	getHighlight	public bool getHighlight ( void )	Returns the state of the hl parameter
	getHighlightAlternateField	public string getHighlightAlternateField ([ string $field_override ] )	Returns the highlight field to use as backup or default
	getHighlightFields	public array getHighlightFields ( void )	Returns all the fields that Solr should generate highlighted snippets for
	getHighlightFormatter	public string getHighlightFormatter ([ string $field_override ] )	Returns the formatter for the highlighted output
	getHighlightFragmenter	public string getHighlightFragmenter ([ string $field_override ] )	Returns the text snippet generator for highlighted text
	getHighlightFragsize	public int getHighlightFragsize ([ string $field_override ] )	Returns the number of characters of fragments to consider for highlighting
	getHighlightHighlightMultiTerm	public bool getHighlightHighlightMultiTerm ( void )	Returns whether or not to enable highlighting for range/wildcard/fuzzy/prefix queries
	getHighlightMaxAlternateFieldLength	public int getHighlightMaxAlternateFieldLength ([ string $field_override ] )	Returns the maximum number of characters of the field to return
	getHighlightMaxAnalyzedChars	public int getHighlightMaxAnalyzedChars ( void )	Returns the maximum number of characters into a document to look for suitable snippets
	getHighlightMergeContiguous	public bool getHighlightMergeContiguous ([ string $field_override ] )	Returns whether or not the collapse contiguous fragments into a single fragment
	getHighlightRegexMaxAnalyzedChars	public int getHighlightRegexMaxAnalyzedChars ( void )	Returns the maximum number of characters from a field when using the regex fragmenter
	getHighlightRegexPattern	public string getHighlightRegexPattern ( void )	Returns the regular expression for fragmenting
	getHighlightRegexSlop	public float getHighlightRegexSlop ( void )	Returns the deviation factor from the ideal fragment size
	getHighlightRequireFieldMatch	public bool getHighlightRequireFieldMatch ( void )	Returns if a field will only be highlighted if the query matched in this particular field
	getHighlightSimplePost	public string getHighlightSimplePost ([ string $field_override ] )	Returns the text which appears after a highlighted term
	getHighlightSimplePre	public string getHighlightSimplePre ([ string $field_override ] )	Returns the text which appears before a highlighted term
	getHighlightSnippets	public int getHighlightSnippets ([ string $field_override ] )	Returns the maximum number of highlighted snippets to generate per field
	getHighlightUsePhraseHighlighter	public bool getHighlightUsePhraseHighlighter ( void )	Returns the state of the hl.usePhraseHighlighter parameter
	getMlt	public bool getMlt ( void )	Returns whether or not MoreLikeThis results should be enabled
	getMltBoost	public bool getMltBoost ( void )	Returns whether or not the query will be boosted by the interesting term relevance
	getMltCount	public int getMltCount ( void )	Returns the number of similar documents to return for each result
	getMltFields	public array getMltFields ( void )	Returns all the fields to use for similarity
	getMltMaxNumQueryTerms	public int getMltMaxNumQueryTerms ( void )	Returns the maximum number of query terms that will be included in any generated query
	getMltMaxNumTokens	public int getMltMaxNumTokens ( void )	Returns the maximum number of tokens to parse in each document field that is not stored with TermVector support
	getMltMaxWordLength	public int getMltMaxWordLength ( void )	Returns the maximum word length above which words will be ignored
	getMltMinDocFrequency	public int getMltMinDocFrequency ( void )	Returns the treshold frequency at which words will be ignored which do not occur in at least this many docs
	getMltMinTermFrequency	public int getMltMinTermFrequency ( void )	Returns the frequency below which terms will be ignored in the source document
	getMltMinWordLength	public int getMltMinWordLength ( void )	Returns the minimum word length below which words will be ignored
	getMltQueryFields	public array getMltQueryFields ( void )	Returns the query fields and their boosts
	getQuery	public string getQuery ( void )	主なクエリーを返す
	getRows	public int getRows ( void )	Returns the maximum number of documents
	getSortFields	public array getSortFields ( void )	Returns all the sort fields
	getStart	public int getStart ( void )	Returns the offset in the complete result set
	getStats	public bool getStats ( void )	Returns whether or not stats is enabled
	getStatsFacets	public array getStatsFacets ( void )	Returns all the stats facets that were set
	getStatsFields	public array getStatsFields ( void )	Returns all the statistics fields
	getTerms	public bool getTerms ( void )	Returns whether or not the TermsComponent is enabled
	getTermsField	public string getTermsField ( void )	Returns the field from which the terms are retrieved
	getTermsIncludeLowerBound	public bool getTermsIncludeLowerBound ( void )	Returns whether or not to include the lower bound in the result set
	getTermsIncludeUpperBound	public bool getTermsIncludeUpperBound ( void )	Returns whether or not to include the upper bound term in the result set
	getTermsLimit	public int getTermsLimit ( void )	Returns the maximum number of terms Solr should return
	getTermsLowerBound	public string getTermsLowerBound ( void )	Returns the term to start at
	getTermsMaxCount	public int getTermsMaxCount ( void )	Returns the maximum document frequency
	getTermsMinCount	public int getTermsMinCount ( void )	Returns the minimum document frequency to return in order to be included
	getTermsPrefix	public string getTermsPrefix ( void )	Returns the term prefix
	getTermsReturnRaw	public bool getTermsReturnRaw ( void )	Whether or not to return raw characters
	getTermsSort	public int getTermsSort ( void )	Returns an integer indicating how terms are sorted
	getTermsUpperBound	public string getTermsUpperBound ( void )	Returns the term to stop at
	getTimeAllowed	public int getTimeAllowed ( void )	Returns the time in milliseconds allowed for the query to finish
	removeFacetDateField	public SolrQuery removeFacetDateField ( string $field )	Removes one of the facet date fields
	removeFacetDateOther	public SolrQuery removeFacetDateOther ( string $value [, string $field_override ] )	Removes one of the facet.date.other parameters
	removeFacetField	public SolrQuery removeFacetField ( string $field )	Removes one of the facet.date parameters
	removeFacetQuery	public SolrQuery removeFacetQuery ( string $value )	Removes one of the facet.query parameters
	removeField	public SolrQuery removeField ( string $field )	Removes a field from the list of fields
	removeFilterQuery	public SolrQuery removeFilterQuery ( string $fq )	Removes a filter query
	removeHighlightField	public SolrQuery removeHighlightField ( string $field )	Removes one of the fields used for highlighting
	removeMltField	public SolrQuery removeMltField ( string $field )	Removes one of the moreLikeThis fields
	removeMltQueryField	public SolrQuery removeMltQueryField ( string $queryField )	Removes one of the moreLikeThis query fields
	removeSortField	public SolrQuery removeSortField ( string $field )	Removes one of the sort fields
	removeStatsFacet	public SolrQuery removeStatsFacet ( string $value )	Removes one of the stats.facet parameters
	removeStatsField	public SolrQuery removeStatsField ( string $field )	Removes one of the stats.field parameters
	setEchoHandler	public SolrQuery setEchoHandler ( bool $flag )	Toggles the echoHandler parameter
	setEchoParams	public SolrQuery setEchoParams ( string $type )	Determines what kind of parameters to include in the response
	setExplainOther	public SolrQuery setExplainOther ( string $query )	Sets the explainOther common query parameter
	setFacet	public SolrQuery setFacet ( bool $flag )	Maps to the facet parameter. Enables or disables facetting
	setFacetDateEnd	public SolrQuery setFacetDateEnd ( string $value [, string $field_override ] )	Maps to facet.date.end
	setFacetDateGap	public SolrQuery setFacetDateGap ( string $value [, string $field_override ] )	Maps to facet.date.gap
	setFacetDateHardEnd	public SolrQuery setFacetDateHardEnd ( bool $value [, string $field_override ] )	Maps to facet.date.hardend
	setFacetDateStart	public SolrQuery setFacetDateStart ( string $value [, string $field_override ] )	Maps to facet.date.start
	setFacetEnumCacheMinDefaultFrequency	public SolrQuery setFacetEnumCacheMinDefaultFrequency ( int $frequency [, string $field_override ] )	Sets the minimum document frequency used for determining term count
	setFacetLimit	public SolrQuery setFacetLimit ( int $limit [, string $field_override ] )	Maps to facet.limit
	setFacetMethod	public SolrQuery setFacetMethod ( string $method [, string $field_override ] )	Specifies the type of algorithm to use when faceting a field
	setFacetMinCount	public SolrQuery setFacetMinCount ( int $mincount [, string $field_override ] )	Maps to facet.mincount
	setFacetMissing	public SolrQuery setFacetMissing ( bool $flag [, string $field_override ] )	Maps to facet.missing
	setFacetOffset	public SolrQuery setFacetOffset ( int $offset [, string $field_override ] )	Sets the offset into the list of constraints to allow for pagination
	setFacetPrefix	public SolrQuery setFacetPrefix ( string $prefix [, string $field_override ] )	Specifies a string prefix with which to limits the terms on which to facet
	setFacetSort	public SolrQuery setFacetSort ( int $facetSort [, string $field_override ] )	Determines the ordering of the facet field constraints
	setHighlight	public SolrQuery setHighlight ( bool $flag )	Enables or disables highlighting
	setHighlightAlternateField	public SolrQuery setHighlightAlternateField ( string $field [, string $field_override ] )	Specifies the backup field to use
	setHighlightFormatter	public SolrQuery setHighlightFormatter ( string $formatter [, string $field_override ] )	Specify a formatter for the highlight output
	setHighlightFragmenter	public SolrQuery setHighlightFragmenter ( string $fragmenter [, string $field_override ] )	Sets a text snippet generator for highlighted text
	setHighlightFragsize	public SolrQuery setHighlightFragsize ( int $size [, string $field_override ] )	The size of fragments to consider for highlighting
	setHighlightHighlightMultiTerm	public SolrQuery setHighlightHighlightMultiTerm ( bool $flag )	Use SpanScorer to highlight phrase terms
	setHighlightMaxAlternateFieldLength	public SolrQuery setHighlightMaxAlternateFieldLength ( int $fieldLength [, string $field_override ] )	Sets the maximum number of characters of the field to return
	setHighlightMaxAnalyzedChars	public SolrQuery setHighlightMaxAnalyzedChars ( int $value )	Specifies the number of characters into a document to look for suitable snippets
	setHighlightMergeContiguous	public SolrQuery setHighlightMergeContiguous ( bool $flag [, string $field_override ] )	Whether or not to collapse contiguous fragments into a single fragment
	setHighlightRegexMaxAnalyzedChars	public SolrQuery setHighlightRegexMaxAnalyzedChars ( int $maxAnalyzedChars )	Specify the maximum number of characters to analyze
	setHighlightRegexPattern	public SolrQuery setHighlightRegexPattern ( string $value )	Specify the regular expression for fragmenting
	setHighlightRegexSlop	public SolrQuery setHighlightRegexSlop ( float $factor )	Sets the factor by which the regex fragmenter can stray from the ideal fragment size
	setHighlightRequireFieldMatch	public SolrQuery setHighlightRequireFieldMatch ( bool $flag )	Require field matching during highlighting
	setHighlightSimplePost	public SolrQuery setHighlightSimplePost ( string $simplePost [, string $field_override ] )	Sets the text which appears after a highlighted term
	setHighlightSimplePre	public SolrQuery setHighlightSimplePre ( string $simplePre [, string $field_override ] )	Sets the text which appears before a highlighted term
	setHighlightSnippets	public SolrQuery setHighlightSnippets ( int $value [, string $field_override ] )	Sets the maximum number of highlighted snippets to generate per field
	setHighlightUsePhraseHighlighter	public SolrQuery setHighlightUsePhraseHighlighter ( bool $flag )	Whether to highlight phrase terms only when they appear within the query phrase
	setMlt	public SolrQuery setMlt ( bool $flag )	Enables or disables moreLikeThis
	setMltBoost	public SolrQuery setMltBoost ( bool $flag )	Set if the query will be boosted by the interesting term relevance
	setMltCount	public SolrQuery setMltCount ( int $count )	Set the number of similar documents to return for each result
	setMltMaxNumQueryTerms	public SolrQuery setMltMaxNumQueryTerms ( int $value )	Sets the maximum number of query terms included
	setMltMaxNumTokens	public SolrQuery setMltMaxNumTokens ( int $value )	Specifies the maximum number of tokens to parse
	setMltMaxWordLength	public SolrQuery setMltMaxWordLength ( int $maxWordLength )	Sets the maximum word length
	setMltMinDocFrequency	public SolrQuery setMltMinDocFrequency ( int $minDocFrequency )	Sets the mltMinDoc frequency
	setMltMinTermFrequency	public SolrQuery setMltMinTermFrequency ( int $minTermFrequency )	Sets the frequency below which terms will be ignored in the source docs
	setMltMinWordLength	public SolrQuery setMltMinWordLength ( int $minWordLength )	Sets the minimum word length
	setOmitHeader	public SolrQuery setOmitHeader ( bool $flag )	Exclude the header from the returned results
	setQuery	public SolrQuery setQuery ( string $query )	検索クエリーを設定
	setRows	public SolrQuery setRows ( int $rows )	Specifies the maximum number of rows to return in the result
	setShowDebugInfo	public SolrQuery setShowDebugInfo ( bool $flag )	Flag to show debug information
	setStart	public SolrQuery setStart ( int $start )	Specifies the number of rows to skip
	setStats	public SolrQuery setStats ( bool $flag )	Enables or disables the Stats component
	setTerms	public SolrQuery setTerms ( bool $flag )	Enables or disables the TermsComponent
	setTermsField	public SolrQuery setTermsField ( string $fieldname )	Sets the name of the field to get the Terms from
	setTermsIncludeLowerBound	public SolrQuery setTermsIncludeLowerBound ( bool $flag )	Include the lower bound term in the result set
	setTermsIncludeUpperBound	public SolrQuery setTermsIncludeUpperBound ( bool $flag )	Include the upper bound term in the result set
	setTermsLimit	public SolrQuery setTermsLimit ( int $limit )	Sets the maximum number of terms to return
	setTermsLowerBound	public SolrQuery setTermsLowerBound ( string $lowerBound )	Specifies the Term to start from
	setTermsMaxCount	public SolrQuery setTermsMaxCount ( int $frequency )	Sets the maximum document frequency
	setTermsMinCount	public SolrQuery setTermsMinCount ( int $frequency )	Sets the minimum document frequency
	setTermsPrefix	public SolrQuery setTermsPrefix ( string $prefix )	Restrict matches to terms that start with the prefix
	setTermsReturnRaw	public SolrQuery setTermsReturnRaw ( bool $flag )	Return the raw characters of the indexed term
	setTermsSort	public SolrQuery setTermsSort ( int $sortType )	Specifies how to sort the returned terms
	setTermsUpperBound	public SolrQuery setTermsUpperBound ( string $upperBound )	Sets the term to stop at
	setTimeAllowed	public SolrQuery setTimeAllowed ( int $timeAllowed )	The time allowed for search to finish
	SolrModifiableParams::__construct	public SolrModifiableParams::__construct ( void )
	SolrModifiableParams::__destruct	public void SolrModifiableParams::__destruct ( void )
SolrQueryResponse	PARSE_SOLR_OBJ	 const integer PARSE_SOLR_OBJ = 0 ;
	PARSE_SOLR_DOC	 const integer PARSE_SOLR_DOC = 1 ;
	SolrResponse::PARSE_SOLR_OBJ	 const integer SolrResponse::PARSE_SOLR_OBJ = 0 ;
	SolrResponse::PARSE_SOLR_DOC	 const integer SolrResponse::PARSE_SOLR_DOC = 1 ;
	$http_status	 protected integer $http_status ;
	$parser_mode	 protected integer $parser_mode ;
	$success	 protected bool $success ;
	$http_status_message	 protected string $http_status_message ;
	$http_request_url	 protected string $http_request_url ;
	$http_raw_request_headers	 protected string $http_raw_request_headers ;
	$http_raw_request	 protected string $http_raw_request ;
	$http_raw_response_headers	 protected string $http_raw_response_headers ;
	$http_raw_response	 protected string $http_raw_response ;
	$http_digested_response	 protected string $http_digested_response ;
	__construct	public __construct ( void )	コンストラクタ
	__destruct	public void __destruct ( void )	デストラクタ
	SolrResponse::getDigestedResponse	public string SolrResponse::getDigestedResponse ( void )
	SolrResponse::getHttpStatus	public int SolrResponse::getHttpStatus ( void )
	SolrResponse::getHttpStatusMessage	public string SolrResponse::getHttpStatusMessage ( void )
	SolrResponse::getRawRequest	public string SolrResponse::getRawRequest ( void )
	SolrResponse::getRawRequestHeaders	public string SolrResponse::getRawRequestHeaders ( void )
	SolrResponse::getRawResponse	public string SolrResponse::getRawResponse ( void )
	SolrResponse::getRawResponseHeaders	public string SolrResponse::getRawResponseHeaders ( void )
	SolrResponse::getRequestUrl	public string SolrResponse::getRequestUrl ( void )
	SolrResponse::getResponse	public SolrObject SolrResponse::getResponse ( void )
	SolrResponse::setParseMode	public bool SolrResponse::setParseMode ([ int $parser_mode = 0 ] )
	SolrResponse::success	public bool SolrResponse::success ( void )
SolrResponse	PARSE_SOLR_OBJ	 const integer PARSE_SOLR_OBJ = 0 ;
	PARSE_SOLR_DOC	 const integer PARSE_SOLR_DOC = 1 ;
	$http_status	 protected integer $http_status ;
	$parser_mode	 protected integer $parser_mode ;
	$success	 protected bool $success ;
	$http_status_message	 protected string $http_status_message ;
	$http_request_url	 protected string $http_request_url ;
	$http_raw_request_headers	 protected string $http_raw_request_headers ;
	$http_raw_request	 protected string $http_raw_request ;
	$http_raw_response_headers	 protected string $http_raw_response_headers ;
	$http_raw_response	 protected string $http_raw_response ;
	$http_digested_response	 protected string $http_digested_response ;
	getDigestedResponse	public string getDigestedResponse ( void )	シリアライズされた PHP データとして XML レスポンスを返す
	getHttpStatus	public int getHttpStatus ( void )	レスポンスの HTTP ステータスを返す
	getHttpStatusMessage	public string getHttpStatusMessage ( void )	HTTP ステータスに関する詳細を返す
	getRawRequest	public string getRawRequest ( void )	Solr サーバーに送られた生のリクエストを返す
	getRawRequestHeaders	public string getRawRequestHeaders ( void )	Solr サーバーに送られた生のリクエストヘッダを返す
	getRawResponse	public string getRawResponse ( void )	Solr サーバーからの生のレスポンスを返す
	getRawResponseHeaders	public string getRawResponseHeaders ( void )	Solr サーバーからの生のレスポンスヘッダを返す
	getRequestUrl	public string getRequestUrl ( void )	リクエストが送られた完全な URL を返す
	getResponse	public SolrObject getResponse ( void )	サーバーからの XML レスポンスを表現する SolrObject を返す
	setParseMode	public bool setParseMode ([ int $parser_mode = 0 ] )	パースモードを設定
	success	public bool success ( void )	リクエストが成功したか
SolrUpdateResponse	PARSE_SOLR_OBJ	 const integer PARSE_SOLR_OBJ = 0 ;
	PARSE_SOLR_DOC	 const integer PARSE_SOLR_DOC = 1 ;
	SolrResponse::PARSE_SOLR_OBJ	 const integer SolrResponse::PARSE_SOLR_OBJ = 0 ;
	SolrResponse::PARSE_SOLR_DOC	 const integer SolrResponse::PARSE_SOLR_DOC = 1 ;
	$http_status	 protected integer $http_status ;
	$parser_mode	 protected integer $parser_mode ;
	$success	 protected bool $success ;
	$http_status_message	 protected string $http_status_message ;
	$http_request_url	 protected string $http_request_url ;
	$http_raw_request_headers	 protected string $http_raw_request_headers ;
	$http_raw_request	 protected string $http_raw_request ;
	$http_raw_response_headers	 protected string $http_raw_response_headers ;
	$http_raw_response	 protected string $http_raw_response ;
	$http_digested_response	 protected string $http_digested_response ;
	__construct	public __construct ( void )	コンストラクタ
	__destruct	public void __destruct ( void )	デストラクタ
	SolrResponse::getDigestedResponse	public string SolrResponse::getDigestedResponse ( void )
	SolrResponse::getHttpStatus	public int SolrResponse::getHttpStatus ( void )
	SolrResponse::getHttpStatusMessage	public string SolrResponse::getHttpStatusMessage ( void )
	SolrResponse::getRawRequest	public string SolrResponse::getRawRequest ( void )
	SolrResponse::getRawRequestHeaders	public string SolrResponse::getRawRequestHeaders ( void )
	SolrResponse::getRawResponse	public string SolrResponse::getRawResponse ( void )
	SolrResponse::getRawResponseHeaders	public string SolrResponse::getRawResponseHeaders ( void )
	SolrResponse::getRequestUrl	public string SolrResponse::getRequestUrl ( void )
	SolrResponse::getResponse	public SolrObject SolrResponse::getResponse ( void )
	SolrResponse::setParseMode	public bool SolrResponse::setParseMode ([ int $parser_mode = 0 ] )
	SolrResponse::success	public bool SolrResponse::success ( void )
SolrUtils	digestXmlResponse	public static SolrObject digestXmlResponse ( string $xmlresponse [, int $parse_mode = 0 ] )	Parses an response XML string into a SolrObject
	escapeQueryChars	public static string escapeQueryChars ( string $str )	Escapes a lucene query string
	getSolrVersion	public static string getSolrVersion ( void )	Solr エクステンションの現行バージョンを返す
	queryPhrase	public static string queryPhrase ( string $str )	Prepares a phrase from an unescaped lucene string
SphinxClient	addQuery	public int addQuery ( string $query [, string $index = "*" [, string $comment = "" ]] )	マルチクエリバッチにクエリを追加する
	buildExcerpts	public array buildExcerpts ( array $docs , string $index , string $words [, array $opts ] )	テキストの抜粋を作成する
	buildKeywords	public array buildKeywords ( string $query , string $index , bool $hits )	キーワードをクエリから抽出する
	close	public bool close ( void )	Closes previously opened persistent connection
	__construct	public __construct ( void )	新しい SphinxClient オブジェクトを作成する
	escapeString	public string escapeString ( string $string )	特殊文字をエスケープする
	getLastError	public string getLastError ( void )	直近のエラーメッセージを取得する
	getLastWarning	public string getLastWarning ( void )	直近の警告を取得する
	open	public bool open ( void )	Opens persistent connection to the server
	query	public array query ( string $query [, string $index = "*" [, string $comment = "" ]] )	Execute search query
	resetFilters	public void resetFilters ( void )	Clear all filters
	resetGroupBy	public void resetGroupBy ( void )	Clear all group-by settings
	runQueries	public array runQueries ( void )	Run a batch of search queries
	setArrayResult	public bool setArrayResult ( bool $array_result = false )	Change the format of result set array
	setConnectTimeout	public bool setConnectTimeout ( float $timeout )	Set connection timeout
	setFieldWeights	public bool setFieldWeights ( array $weights )	Set field weights
	setFilter	public bool setFilter ( string $attribute , array $values [, bool $exclude = false ] )	Add new integer values set filter
	setFilterFloatRange	public bool setFilterFloatRange ( string $attribute , float $min , float $max [, bool $exclude = false ] )	Add new float range filter
	setFilterRange	public bool setFilterRange ( string $attribute , int $min , int $max [, bool $exclude = false ] )	Add new integer range filter
	setGeoAnchor	public bool setGeoAnchor ( string $attrlat , string $attrlong , float $latitude , float $longitude )	Set anchor point for a geosphere distance calculations
	setGroupBy	public bool setGroupBy ( string $attribute , int $func [, string $groupsort = "@group desc" ] )	Set grouping attribute
	setGroupDistinct	public bool setGroupDistinct ( string $attribute )	Set attribute name for per-group distinct values count calculations
	setIDRange	public bool setIDRange ( int $min , int $max )	Set a range of accepted document IDs
	setIndexWeights	public bool setIndexWeights ( array $weights )	Set per-index weights
	setLimits	public bool setLimits ( int $offset , int $limit [, int $max_matches = 0 [, int $cutoff = 0 ]] )	Set offset and limit of the result set
	setMatchMode	public bool setMatchMode ( int $mode )	Set full-text query matching mode
	setMaxQueryTime	public bool setMaxQueryTime ( int $qtime )	Set maximum query time
	setOverride	public bool setOverride ( string $attribute , int $type , array $values )	Sets temporary per-document attribute value    overrides
	setRankingMode	public bool setRankingMode ( int $ranker )	Set ranking mode
	setRetries	public bool setRetries ( int $count [, int $delay = 0 ] )	Set retry count and delay
	setSelect	public bool setSelect ( string $clause )	Set select clause
	setServer	public bool setServer ( string $server , int $port )	Set searchd host and port
	setSortMode	public bool setSortMode ( int $mode [, string $sortby ] )	Set matches sorting mode
	status	public array status ( void )	Queries searchd status
	updateAttributes	public int updateAttributes ( string $index , array $attributes , array $values [, bool $mva = false ] )	Update document attributes
SplBool	__default	 const boolean __default = false ;
	false	 const boolean false = false ;
	true	 const boolean true = true ;
	SplEnum::getConstList	public array SplEnum::getConstList ([ bool $include_default = false ] )
SplDoublyLinkedList	__construct	public __construct ( void )	新しい双方向リンクリストを作成する
	bottom	public mixed bottom ( void )	双方向リンクリストの最初のノードを取得する
	count	public int count ( void )	双方向リンクリストの要素数を数える
	current	public mixed current ( void )	現在の配列の要素を返す
	getIteratorMode	public int getIteratorMode ( void )	反復処理のモードを返す
	isEmpty	public bool isEmpty ( void )	双方向リンクリストが空かどうかを調べる
	key	public mixed key ( void )	現在のノードのインデックスを返す
	next	public void next ( void )	次のエントリに移動する
	offsetExists	public bool offsetExists ( mixed $index )	指定した $index が存在するかどうかを返す
	offsetGet	public mixed offsetGet ( mixed $index )	指定した $index の値を返す
	offsetSet	public void offsetSet ( mixed $index , mixed $newval )	指定した $index の値を $newval に設定する
	offsetUnset	public void offsetUnset ( mixed $index )	指定した $index の値を削除する
	pop	public mixed pop ( void )	双方向リンクリストの末尾からノードを取り出す
	prev	public void prev ( void )	前のエントリに移動する
	push	public void push ( mixed $value )	双方向リンクリストの末尾に要素を追加する
	rewind	public void rewind ( void )	イテレータを先頭に巻き戻す
	serialize	public string serialize ( void )	ストレージをシリアライズする
	setIteratorMode	public void setIteratorMode ( int $mode )	反復処理のモードを設定する
	shift	public mixed shift ( void )	双方向リンクリストの先頭からノードを取り出す
	top	public mixed top ( void )	双方向リンクリストの最後のノードを取得する
	unserialize	public void unserialize ( string $serialized )	ストレージをデシリアライズする
	unshift	public void unshift ( mixed $value )	双方向リンクリストの先頭に要素を追加する
	valid	public bool valid ( void )	双方向リンクリストにまだノードがあるかどうかを調べる
SplEnum	__default	 const NULL __default = null ;
	getConstList	public array getConstList ([ bool $include_default = false ] )	すべての定数 (取り得る値) を配列で返す
	SplType::__construct	SplType::__construct ([ mixed $initial_value [, bool $strict ]] )
SplFileInfo	__construct	public __construct ( string $file_name )	新しい SplFileInfo オブジェクトを作成する
	getATime	public int getATime ( void )	ファイルの最終アクセス時刻を取得する
	getBasename	public string getBasename ([ string $suffix ] )	ファイルのベース名を取得する
	getCTime	public int getCTime ( void )	inode 変更時刻を取得する
	getExtension	public string getExtension ( void )	ファイルの拡張子を取得する
	getFileInfo	public SplFileInfo getFileInfo ([ string $class_name ] )	ファイルの SplFileInfo オブジェクトを取得する
	getFilename	public string getFilename ( void )	ファイル名を取得する
	getGroup	public int getGroup ( void )	ファイルのグループを取得する
	getInode	public int getInode ( void )	ファイルの inode を取得する
	getLinkTarget	public string getLinkTarget ( void )	リンク先を取得する
	getMTime	public int getMTime ( void )	最終変更時刻を取得する
	getOwner	public int getOwner ( void )	ファイルの所有者を取得する
	getPath	public string getPath ( void )	ファイル名を除いたパスを取得する
	getPathInfo	public SplFileInfo getPathInfo ([ string $class_name ] )	パスの SplFileInfo オブジェクトを取得する
	getPathname	public string getPathname ( void )	ファイルへのパスを取得する
	getPerms	public int getPerms ( void )	ファイルのパーミッションを取得する
	getRealPath	public string getRealPath ( void )	ファイルへの絶対パスを取得する
	getSize	public int getSize ( void )	ファイルサイズを取得する
	getType	public string getType ( void )	ファイルタイプを取得する
	isDir	public bool isDir ( void )	ファイルがディレクトリかどうかを調べる
	isExecutable	public bool isExecutable ( void )	ファイルが実行可能かどうかを調べる
	isFile	public bool isFile ( void )	オブジェクトの参照先が通常のファイルであるかどうかを調べる
	isLink	public bool isLink ( void )	ファイルがリンクであるかどうかを調べる
	isReadable	public bool isReadable ( void )	ファイルが読み込み可能か調べる
	isWritable	public bool isWritable ( void )	エントリが書き込み可能であるかどうかを調べる
	openFile	public SplFileObject openFile ([ string $open_mode = r [, bool $use_include_path = false [, resource $context = NULL ]]] )	ファイルの SplFileObject オブジェクトを取得する
	setFileClass	public void setFileClass ([ string $class_name ] )	SplFileInfo::openFile で使用するクラス名を設定する
	setInfoClass	public void setInfoClass ([ string $class_name ] )	getFileInfo および getPathInfo で使用するクラスを設定する
	__toString	public void __toString ( void )	ファイルへのパスを文字列で返す
SplFileObject	DROP_NEW_LINE	 const integer DROP_NEW_LINE = 1 ;
	READ_AHEAD	 const integer READ_AHEAD = 2 ;
	SKIP_EMPTY	 const integer SKIP_EMPTY = 4 ;
	READ_CSV	 const integer READ_CSV = 8 ;
	__construct	public __construct ( string $filename [, string $open_mode = "r" [, bool $use_include_path = false [, resource $context ]]] )	新しいファイルオブジェクトを作成する
	current	public string|array current ( void )	ファイルの現在の行を取得する
	eof	public bool eof ( void )	ファイルの終端に到達しているか調べる
	fflush	public bool fflush ( void )	出力をファイルにフラッシュする
	fgetc	public string fgetc ( void )	ファイルから文字を取り出す
	fgetcsv	public array fgetcsv ([ string $delimiter = "," [, string $enclosure = "\"" [, string $escape = "\\" ]]] )	ファイルから行を取り出し CSV フィールドとして処理する
	fgets	public string fgets ( void )	ファイルから 1 行取り出す
	fgetss	public string fgetss ([ string $allowable_tags ] )	ファイルから 1 行取り出し HTML タグを取り除く
	flock	public bool flock ( int $operation [, int &$wouldblock ] )	簡易なファイルロックを行う
	fpassthru	public int fpassthru ( void )	ファイルポインタに残っているデータをすべて出力する
	fputcsv	public int fputcsv ( array $fields [, string $delimiter = ',' [, string $enclosure = '"' ]] )	フィールドの配列を CSV の行として書き出す
	fscanf	public mixed fscanf ( string $format [, mixed &$... ] )	フォーマットに従ってファイルからの入力をパースする
	fseek	public int fseek ( int $offset [, int $whence = SEEK_SET ] )	ファイルポインタを移動させる
	fstat	public array fstat ( void )	ファイルの情報を得る
	ftell	public int ftell ( void )	ファイルポインタの現在位置を返す
	ftruncate	public bool ftruncate ( int $size )	ファイルを指定した長さに丸める
	fwrite	public int fwrite ( string $str [, int $length ] )	ファイルに書き込む
	getChildren	public void getChildren ( void )	用途はなし
	getCsvControl	public array getCsvControl ( void )	CSV の区切りと囲み文字を取得する
	getFlags	public int getFlags ( void )	SplFileObject のフラグを取得する
	getMaxLineLen	public int getMaxLineLen ( void )	行の最大バイト数を取得する
	hasChildren	public bool hasChildren ( void )	SplFileObject は子を持ちません
	key	public int key ( void )	行番号を取得する
	next	public void next ( void )	次の行を読み出す
	rewind	public void rewind ( void )	ファイルポインタを先頭に巻き戻す
	seek	public void seek ( int $line_pos )	ファイルポインタを指定行に移動させる
	setCsvControl	public void setCsvControl ([ string $delimiter = "," [, string $enclosure = "\"" [, string $escape = "\\" ]]] )	CSV の区切り文字と囲み文字をセットする
	setFlags	public void setFlags ( int $flags )	SplFileObject のフラグをセットする
	setMaxLineLen	public void setMaxLineLen ( int $max_len )	読み込む行の最大バイト数をセットする
	__toString	public void __toString ( void )	SplFileObject::current のエイリアス
	valid	public bool valid ( void )	ファイル終端でないかチェックする
	SplFileInfo::__construct	public SplFileInfo::__construct ( string $file_name )
	SplFileInfo::getATime	public int SplFileInfo::getATime ( void )
	SplFileInfo::getBasename	public string SplFileInfo::getBasename ([ string $suffix ] )
	SplFileInfo::getCTime	public int SplFileInfo::getCTime ( void )
	SplFileInfo::getExtension	public string SplFileInfo::getExtension ( void )
	SplFileInfo::getFileInfo	public SplFileInfo SplFileInfo::getFileInfo ([ string $class_name ] )
	SplFileInfo::getFilename	public string SplFileInfo::getFilename ( void )
	SplFileInfo::getGroup	public int SplFileInfo::getGroup ( void )
	SplFileInfo::getInode	public int SplFileInfo::getInode ( void )
	SplFileInfo::getLinkTarget	public string SplFileInfo::getLinkTarget ( void )
	SplFileInfo::getMTime	public int SplFileInfo::getMTime ( void )
	SplFileInfo::getOwner	public int SplFileInfo::getOwner ( void )
	SplFileInfo::getPath	public string SplFileInfo::getPath ( void )
	SplFileInfo::getPathInfo	public SplFileInfo SplFileInfo::getPathInfo ([ string $class_name ] )
	SplFileInfo::getPathname	public string SplFileInfo::getPathname ( void )
	SplFileInfo::getPerms	public int SplFileInfo::getPerms ( void )
	SplFileInfo::getRealPath	public string SplFileInfo::getRealPath ( void )
	SplFileInfo::getSize	public int SplFileInfo::getSize ( void )
	SplFileInfo::getType	public string SplFileInfo::getType ( void )
	SplFileInfo::isDir	public bool SplFileInfo::isDir ( void )
	SplFileInfo::isExecutable	public bool SplFileInfo::isExecutable ( void )
	SplFileInfo::isFile	public bool SplFileInfo::isFile ( void )
	SplFileInfo::isLink	public bool SplFileInfo::isLink ( void )
	SplFileInfo::isReadable	public bool SplFileInfo::isReadable ( void )
	SplFileInfo::isWritable	public bool SplFileInfo::isWritable ( void )
	SplFileInfo::openFile	public SplFileObject SplFileInfo::openFile ([ string $open_mode = r [, bool $use_include_path = false [, resource $context = NULL ]]] )
	SplFileInfo::setFileClass	public void SplFileInfo::setFileClass ([ string $class_name ] )
	SplFileInfo::setInfoClass	public void SplFileInfo::setInfoClass ([ string $class_name ] )
	SplFileInfo::__toString	public void SplFileInfo::__toString ( void )
SplFixedArray	__construct	public __construct ([ int $size = 0 ] )	新しい固定長配列を作成する
	count	public int count ( void )	配列のサイズを返す
	current	public mixed current ( void )	現在の配列の要素を返す
	fromArray	public static SplFixedArray fromArray ( array $array [, bool $save_indexes = true ] )	PHP の配列を SplFixedArray インスタンスにインポートする
	getSize	public int getSize ( void )	配列のサイズを取得する
	key	public int key ( void )	現在の配列の添字を返す
	next	public void next ( void )	次のエントリに進む
	offsetExists	public bool offsetExists ( int $index )	指定した添字が存在するかどうかを返す
	offsetGet	public mixed offsetGet ( int $index )	指定した添字の値を返す
	offsetSet	public void offsetSet ( int $index , mixed $newval )	指定した添字の新しい値を設定する
	offsetUnset	public void offsetUnset ( int $index )	指定した添字の値を消去する
	rewind	public void rewind ( void )	イテレータを先頭に巻き戻す
	setSize	public int setSize ( int $size )	配列のサイズを変更する
	toArray	public array toArray ( void )	固定長配列から PHP の配列を返す
	valid	public bool valid ( void )	配列にまだ要素があるかどうかを調べる
	__wakeup	public void __wakeup ( void )	アンシリアライズ後に配列を再初期化する
SplFloat	__default	 const float __default = 0 ;
	SplType::__construct	SplType::__construct ([ mixed $initial_value [, bool $strict ]] )
SplHeap	__construct	public __construct ( void )	新しい空のヒープを作成する
	compare	abstract protected int compare ( mixed $value1 , mixed $value2 )	要素を比較し、ヒープ内の適切な位置に置く
	count	public int count ( void )	ヒープ内の要素数を数える
	current	public mixed current ( void )	イテレータが指す現在のノードを返す
	extract	public mixed extract ( void )	ヒープの先頭からノードを取り出す
	insert	public void insert ( mixed $value )	ヒープに要素を挿入する
	isEmpty	public bool isEmpty ( void )	ヒープが空かどうかを調べる
	key	public mixed key ( void )	現在のノードのインデックスを返す
	next	public void next ( void )	次のノードに移動する
	recoverFromCorruption	public void recoverFromCorruption ( void )	破壊されたヒープを復旧し、それ以降の操作をできるようにする
	rewind	public void rewind ( void )	イテレータを先頭に巻き戻す (何もしない)
	top	public mixed top ( void )	ヒープの先頭のノードを取り出す
	valid	public bool valid ( void )	ヒープにまだノードがあるかどうかを調べる
SplInt	__default	 const integer __default = 0 ;
	SplType::__construct	SplType::__construct ([ mixed $initial_value [, bool $strict ]] )
SplMaxHeap	compare	protected int compare ( mixed $value1 , mixed $value2 )	要素を比較し、ヒープ内の適切な位置に置く
	SplHeap::compare	abstract protected int SplHeap::compare ( mixed $value1 , mixed $value2 )
	SplHeap::count	public int SplHeap::count ( void )
	SplHeap::current	public mixed SplHeap::current ( void )
	SplHeap::extract	public mixed SplHeap::extract ( void )
	SplHeap::insert	public void SplHeap::insert ( mixed $value )
	SplHeap::isEmpty	public bool SplHeap::isEmpty ( void )
	SplHeap::key	public mixed SplHeap::key ( void )
	SplHeap::next	public void SplHeap::next ( void )
	SplHeap::recoverFromCorruption	public void SplHeap::recoverFromCorruption ( void )
	SplHeap::rewind	public void SplHeap::rewind ( void )
	SplHeap::top	public mixed SplHeap::top ( void )
	SplHeap::valid	public bool SplHeap::valid ( void )
SplMinHeap	compare	protected int compare ( mixed $value1 , mixed $value2 )	要素を比較し、ヒープ内の適切な位置に置く
	SplHeap::compare	abstract protected int SplHeap::compare ( mixed $value1 , mixed $value2 )
	SplHeap::count	public int SplHeap::count ( void )
	SplHeap::current	public mixed SplHeap::current ( void )
	SplHeap::extract	public mixed SplHeap::extract ( void )
	SplHeap::insert	public void SplHeap::insert ( mixed $value )
	SplHeap::isEmpty	public bool SplHeap::isEmpty ( void )
	SplHeap::key	public mixed SplHeap::key ( void )
	SplHeap::next	public void SplHeap::next ( void )
	SplHeap::recoverFromCorruption	public void SplHeap::recoverFromCorruption ( void )
	SplHeap::rewind	public void SplHeap::rewind ( void )
	SplHeap::top	public mixed SplHeap::top ( void )
	SplHeap::valid	public bool SplHeap::valid ( void )
SplObjectStorage	addAll	public void addAll ( SplObjectStorage $storage )	別のストレージからすべてのオブジェクトを追加する
	attach	public void attach ( object $object [, mixed $data = NULL ] )	オブジェクトをストレージに追加する
	contains	public bool contains ( object $object )	ストレージに特定のオブジェクトが含まれるかどうかを調べる
	count	public int count ( void )	ストレージ内のオブジェクトの数を返す
	current	public object current ( void )	現在のストレージの要素を返す
	detach	public void detach ( object $object )	オブジェクトをストレージから取り除く
	getHash	public string getHash ( object $object )	中に含むオブジェクトの一意な識別子を算出する
	getInfo	public mixed getInfo ( void )	イテレータの現在のエントリに関連づけられたデータを返す
	key	public int key ( void )	イテレータの現在位置を返す
	next	public void next ( void )	次のエントリに移動する
	offsetExists	public bool offsetExists ( object $object )	オブジェクトがストレージ内に存在するかどうかを調べる
	offsetGet	public mixed offsetGet ( object $object )	オブジェクトに関連づけられたデータを返す
	offsetSet	public void offsetSet ( object $object [, mixed $data = NULL ] )	ストレージ内のオブジェクトにデータを関連づける
	offsetUnset	public void offsetUnset ( object $object )	ストレージからオブジェクトを取り除く
	removeAll	public void removeAll ( SplObjectStorage $storage )	別のストレージに含まれているオブジェクトを現在のストレージから取り除く
	removeAllExcept	public void removeAllExcept ( SplObjectStorage $storage )	別のストレージに含まれているもの以外のすべてのオブジェクトを現在のストレージから取り除く
	rewind	public void rewind ( void )	イテレータをストレージの最初の要素に巻き戻す
	serialize	public string serialize ( void )	ストレージをシリアライズする
	setInfo	public void setInfo ( mixed $data )	イテレータの現在のエントリに関連づけるデータを設定する
	unserialize	public void unserialize ( string $serialized )	ストレージの文字列表現をアンシリアライズする
	valid	public bool valid ( void )	イテレータの現在のエントリが有効かどうかを返す
SplObserver	update	abstract public void update ( SplSubject $subject )	subject の更新を受信する
SplPriorityQueue	__construct	public __construct ( void )	新しい空のキューを作成する
	compare	public int compare ( mixed $priority1 , mixed $priority2 )	要素の優先順位を比較し、ヒープ内の適切な位置に置く
	count	public int count ( void )	キュー内の要素数を数える
	current	public mixed current ( void )	イテレータが指す現在のノードを返す
	extract	public mixed extract ( void )	ヒープの先頭からノードを取り出す
	insert	public void insert ( mixed $value , mixed $priority )	キューに要素を挿入する
	isEmpty	public bool isEmpty ( void )	キューが空かどうかを調べる
	key	public mixed key ( void )	現在のノードのインデックスを返す
	next	public void next ( void )	次のノードに移動する
	recoverFromCorruption	public void recoverFromCorruption ( void )	破壊されたキューを復旧し、それ以降の操作をできるようにする
	rewind	public void rewind ( void )	イテレータを先頭に巻き戻す (何もしない)
	setExtractFlags	public void setExtractFlags ( int $flags )	取り出しモードを設定する
	top	public mixed top ( void )	キューの先頭のノードを取り出す
	valid	public bool valid ( void )	キューにまだノードがあるかどうかを調べる
SplQueue	__construct	__construct ( void )	双方向リンクリストを使用して実装した新しい空のキューを作成する
	dequeue	mixed dequeue ( void )	キューからノードを取り出す
	enqueue	void enqueue ( mixed $value )	要素をキューに追加する
	setIteratorMode	void setIteratorMode ( int $mode )	反復処理のモードを設定する
	SplDoublyLinkedList::bottom	public mixed SplDoublyLinkedList::bottom ( void )
	SplDoublyLinkedList::count	public int SplDoublyLinkedList::count ( void )
	SplDoublyLinkedList::current	public mixed SplDoublyLinkedList::current ( void )
	SplDoublyLinkedList::getIteratorMode	public int SplDoublyLinkedList::getIteratorMode ( void )
	SplDoublyLinkedList::isEmpty	public bool SplDoublyLinkedList::isEmpty ( void )
	SplDoublyLinkedList::key	public mixed SplDoublyLinkedList::key ( void )
	SplDoublyLinkedList::next	public void SplDoublyLinkedList::next ( void )
	SplDoublyLinkedList::offsetExists	public bool SplDoublyLinkedList::offsetExists ( mixed $index )
	SplDoublyLinkedList::offsetGet	public mixed SplDoublyLinkedList::offsetGet ( mixed $index )
	SplDoublyLinkedList::offsetSet	public void SplDoublyLinkedList::offsetSet ( mixed $index , mixed $newval )
	SplDoublyLinkedList::offsetUnset	public void SplDoublyLinkedList::offsetUnset ( mixed $index )
	SplDoublyLinkedList::pop	public mixed SplDoublyLinkedList::pop ( void )
	SplDoublyLinkedList::prev	public void SplDoublyLinkedList::prev ( void )
	SplDoublyLinkedList::push	public void SplDoublyLinkedList::push ( mixed $value )
	SplDoublyLinkedList::rewind	public void SplDoublyLinkedList::rewind ( void )
	SplDoublyLinkedList::serialize	public string SplDoublyLinkedList::serialize ( void )
	SplDoublyLinkedList::setIteratorMode	public void SplDoublyLinkedList::setIteratorMode ( int $mode )
	SplDoublyLinkedList::shift	public mixed SplDoublyLinkedList::shift ( void )
	SplDoublyLinkedList::top	public mixed SplDoublyLinkedList::top ( void )
	SplDoublyLinkedList::unserialize	public void SplDoublyLinkedList::unserialize ( string $serialized )
	SplDoublyLinkedList::unshift	public void SplDoublyLinkedList::unshift ( mixed $value )
	SplDoublyLinkedList::valid	public bool SplDoublyLinkedList::valid ( void )
SplStack	__construct	__construct ( void )	双方向リンクリストを使用して実装した新しい空のスタックを作成する
	setIteratorMode	void setIteratorMode ( int $mode )	反復処理のモードを設定する
	SplDoublyLinkedList::bottom	public mixed SplDoublyLinkedList::bottom ( void )
	SplDoublyLinkedList::count	public int SplDoublyLinkedList::count ( void )
	SplDoublyLinkedList::current	public mixed SplDoublyLinkedList::current ( void )
	SplDoublyLinkedList::getIteratorMode	public int SplDoublyLinkedList::getIteratorMode ( void )
	SplDoublyLinkedList::isEmpty	public bool SplDoublyLinkedList::isEmpty ( void )
	SplDoublyLinkedList::key	public mixed SplDoublyLinkedList::key ( void )
	SplDoublyLinkedList::next	public void SplDoublyLinkedList::next ( void )
	SplDoublyLinkedList::offsetExists	public bool SplDoublyLinkedList::offsetExists ( mixed $index )
	SplDoublyLinkedList::offsetGet	public mixed SplDoublyLinkedList::offsetGet ( mixed $index )
	SplDoublyLinkedList::offsetSet	public void SplDoublyLinkedList::offsetSet ( mixed $index , mixed $newval )
	SplDoublyLinkedList::offsetUnset	public void SplDoublyLinkedList::offsetUnset ( mixed $index )
	SplDoublyLinkedList::pop	public mixed SplDoublyLinkedList::pop ( void )
	SplDoublyLinkedList::prev	public void SplDoublyLinkedList::prev ( void )
	SplDoublyLinkedList::push	public void SplDoublyLinkedList::push ( mixed $value )
	SplDoublyLinkedList::rewind	public void SplDoublyLinkedList::rewind ( void )
	SplDoublyLinkedList::serialize	public string SplDoublyLinkedList::serialize ( void )
	SplDoublyLinkedList::setIteratorMode	public void SplDoublyLinkedList::setIteratorMode ( int $mode )
	SplDoublyLinkedList::shift	public mixed SplDoublyLinkedList::shift ( void )
	SplDoublyLinkedList::top	public mixed SplDoublyLinkedList::top ( void )
	SplDoublyLinkedList::unserialize	public void SplDoublyLinkedList::unserialize ( string $serialized )
	SplDoublyLinkedList::unshift	public void SplDoublyLinkedList::unshift ( mixed $value )
	SplDoublyLinkedList::valid	public bool SplDoublyLinkedList::valid ( void )
SplString	__default	 const integer __default = 0 ;
	SplType::__construct	SplType::__construct ([ mixed $initial_value [, bool $strict ]] )
SplSubject	attach	abstract public void attach ( SplObserver $observer )	SplObserver をアタッチする
	detach	abstract public void detach ( SplObserver $observer )	observer をデタッチする
	notify	abstract public void notify ( void )	observer に通知する
SplTempFileObject	__construct	public __construct ([ int $max_memory ] )	新しい一時ファイルオブジェクトを作成する
	SplFileObject::__construct	public SplFileObject::__construct ( string $filename [, string $open_mode = "r" [, bool $use_include_path = false [, resource $context ]]] )
	SplFileObject::current	public string|array SplFileObject::current ( void )
	SplFileObject::eof	public bool SplFileObject::eof ( void )
	SplFileObject::fflush	public bool SplFileObject::fflush ( void )
	SplFileObject::fgetc	public string SplFileObject::fgetc ( void )
	SplFileObject::fgetcsv	public array SplFileObject::fgetcsv ([ string $delimiter = "," [, string $enclosure = "\"" [, string $escape = "\\" ]]] )
	SplFileObject::fgets	public string SplFileObject::fgets ( void )
	SplFileObject::fgetss	public string SplFileObject::fgetss ([ string $allowable_tags ] )
	SplFileObject::flock	public bool SplFileObject::flock ( int $operation [, int &$wouldblock ] )
	SplFileObject::fpassthru	public int SplFileObject::fpassthru ( void )
	SplFileObject::fputcsv	public int SplFileObject::fputcsv ( array $fields [, string $delimiter = ',' [, string $enclosure = '"' ]] )
	SplFileObject::fscanf	public mixed SplFileObject::fscanf ( string $format [, mixed &$... ] )
	SplFileObject::fseek	public int SplFileObject::fseek ( int $offset [, int $whence = SEEK_SET ] )
	SplFileObject::fstat	public array SplFileObject::fstat ( void )
	SplFileObject::ftell	public int SplFileObject::ftell ( void )
	SplFileObject::ftruncate	public bool SplFileObject::ftruncate ( int $size )
	SplFileObject::fwrite	public int SplFileObject::fwrite ( string $str [, int $length ] )
	SplFileObject::getChildren	public void SplFileObject::getChildren ( void )
	SplFileObject::getCsvControl	public array SplFileObject::getCsvControl ( void )
	SplFileObject::getFlags	public int SplFileObject::getFlags ( void )
	SplFileObject::getMaxLineLen	public int SplFileObject::getMaxLineLen ( void )
	SplFileObject::hasChildren	public bool SplFileObject::hasChildren ( void )
	SplFileObject::key	public int SplFileObject::key ( void )
	SplFileObject::next	public void SplFileObject::next ( void )
	SplFileObject::rewind	public void SplFileObject::rewind ( void )
	SplFileObject::seek	public void SplFileObject::seek ( int $line_pos )
	SplFileObject::setCsvControl	public void SplFileObject::setCsvControl ([ string $delimiter = "," [, string $enclosure = "\"" [, string $escape = "\\" ]]] )
	SplFileObject::setFlags	public void SplFileObject::setFlags ( int $flags )
	SplFileObject::setMaxLineLen	public void SplFileObject::setMaxLineLen ( int $max_len )
	SplFileObject::__toString	public void SplFileObject::__toString ( void )
	SplFileObject::valid	public bool SplFileObject::valid ( void )
SplType	__default	 const NULL __default = null ;
	__construct	__construct ([ mixed $initial_value [, bool $strict ]] )	何らかの型の新しい値を作成する
Spoofchecker	SINGLE_SCRIPT_CONFUSABLE	 const integer SINGLE_SCRIPT_CONFUSABLE = 1 ;
	MIXED_SCRIPT_CONFUSABLE	 const integer MIXED_SCRIPT_CONFUSABLE = 2 ;
	WHOLE_SCRIPT_CONFUSABLE	 const integer WHOLE_SCRIPT_CONFUSABLE = 4 ;
	ANY_CASE	 const integer ANY_CASE = 8 ;
	SINGLE_SCRIPT	 const integer SINGLE_SCRIPT = 16 ;
	INVISIBLE	 const integer INVISIBLE = 32 ;
	CHAR_LIMIT	 const integer CHAR_LIMIT = 64 ;
	areConfusable	public bool areConfusable ( string $s1 , string $s2 [, string &$error ] )	指定したテキストに混同しやすい文字が含まれているかどうかを調べる
	__construct	public __construct ( void )	コンストラクタ
	isSuspicious	public bool isSuspicious ( string $text [, string &$error ] )	指定したテキストに疑わしい文字が含まれているかどうかを調べる
	setAllowedLocales	public void setAllowedLocales ( string $locale_list )	チェック時に使うロケールを設定する
	setChecks	public void setChecks ( string $checks )	実行するチェックを設定する
SQLite3	busyTimeout	public bool busyTimeout ( int $msecs )	接続がビジー状態のときのハンドラを設定する
	changes	public int changes ( void )	直近の SQL 文で変更 (あるいは挿入、削除) された行の数を返す
	close	public bool close ( void )	データベースとの接続を閉じる
	__construct	public __construct ( string $filename [, int $flags [, string $encryption_key ]] )	SQLite3 オブジェクトを作成し、SQLite 3 データベースをオープンする
	createAggregate	public bool createAggregate ( string $name , mixed $step_callback , mixed $final_callback [, int $argument_count = -1 ] )	SQL の集約関数として使用する PHP 関数を登録する
	createCollation	public bool createCollation ( string $name , callable $callback )	Registers a PHP function for use as an SQL collating function
	createFunction	public bool createFunction ( string $name , mixed $callback [, int $argument_count = -1 ] )	SQL のスカラー関数として使用する PHP 関数を登録する
	escapeString	public static string escapeString ( string $value )	適切にエスケープされた文字列を返す
	exec	public bool exec ( string $query )	指定したデータベースに、結果を返さないクエリを実行する
	lastErrorCode	public int lastErrorCode ( void )	直近で失敗した SQLite リクエストの結果コードを数値で返す
	lastErrorMsg	public string lastErrorMsg ( void )	直近で失敗した SQLite リクエストについての英文テキストの説明を返す
	lastInsertRowID	public int lastInsertRowID ( void )	直近の INSERT 文でデータベースに追加された行の ID を返す
	loadExtension	public bool loadExtension ( string $shared_library )	SQLite 拡張ライブラリを読み込む
	open	public void open ( string $filename [, int $flags = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE [, string $encryption_key ]] )	SQLite データベースをオープンする
	prepare	public SQLite3Stmt prepare ( string $query )	実行する SQL 文を準備する
	query	public SQLite3Result query ( string $query )	SQL クエリを実行する
	querySingle	public mixed querySingle ( string $query [, bool $entire_row = false ] )	クエリを実行し、単一の結果を返す
	version	public static array version ( void )	SQLite3 ライブラリのバージョンを、文字列定数と数値で返す
SQLite3Result	columnName	public string columnName ( int $column_number )	n 番目のカラムの名前を返す
	columnType	public int columnType ( int $column_number )	n 番目のカラムの型を返す
	fetchArray	public array fetchArray ([ int $mode = SQLITE3_BOTH ] )	結果の行を、連想配列あるいは数値添字配列あるいはその両方で取得する
	finalize	public bool finalize ( void )	結果セットを閉じる
	numColumns	public int numColumns ( void )	結果セットのカラム数を返す
	reset	public bool reset ( void )	結果セットを最初の行に戻す
SQLite3Stmt	bindParam	public bool bindParam ( string $sql_param , mixed &$param [, int $type ] )	パラメータを変数にバインドする
	bindValue	public bool bindValue ( string $sql_param , mixed $value [, int $type ] )	パラメータの値を変数にバインドする
	clear	public bool clear ( void )	現在バインドされているすべてのパラメータをクリアする
	close	public bool close ( void )	プリペアドステートメントを閉じる
	execute	public SQLite3Result execute ( void )	プリペアドステートメントを実行し、結果セットオブジェクトを返す
	paramCount	public int paramCount ( void )	プリペアドステートメント内のパラメータの数を返す
	reset	public bool reset ( void )	プリペアドステートメントをリセットする
Stackable	chunk	final public boolean chunk ( long $size , boolean $preserve )	Manipulation
	isRunning	final public boolean isRunning ( void )	状態を検出する
	isTerminated	final public boolean isTerminated ( void )	State Detection
	isWaiting	final public boolean isWaiting ( void )	状態を検出する
	lock	final public boolean lock ( void )	同期処理
	merge	final public boolean merge ( mixed $from [, mixed $overwrite ] )	Manipulation
	notify	final public boolean notify ( void )	同期処理
	pop	final public boolean pop ( void )	Manipulation
	run	abstract public void run ( void )	実行する
	shift	final public boolean shift ( void )	Manipulation
	synchronized	final public mixed synchronized ( Closure $block [, mixed $... ] )	同期処理
	unlock	final public boolean unlock ( void )	同期処理
	wait	final public boolean wait ([ string $timeout ] )	同期処理
Stomp	abort	public bool abort ( string $transaction_id [, array $headers ] )	Rolls back a transaction in progress
	ack	public bool ack ( mixed $msg [, array $headers ] )	Acknowledges consumption of a message
	begin	public bool begin ( string $transaction_id [, array $headers ] )	Starts a transaction
	commit	public bool commit ( string $transaction_id [, array $headers ] )	Commits a transaction in progress
	__construct	public __construct ([ string $broker = ini_get("stomp.default_broker_uri") [, string $username [, string $password [, array $headers ]]]] )	Opens a connection
	__destruct	public bool __destruct ( void )	Closes stomp connection
	error	public string error ( void )	Gets the last stomp error
	getReadTimeout	public array getReadTimeout ( void )	Gets read timeout
	getSessionId	public string getSessionId ( void )	Gets the current stomp session ID
	hasFrame	public bool hasFrame ( void )	Indicates whether or not there is a frame ready to read
	readFrame	public stompframe readFrame ([ string $class_name = "stompFrame" ] )	Reads the next frame
	send	public bool send ( string $destination , mixed $msg [, array $headers ] )	Sends a message
	setReadTimeout	public void setReadTimeout ( int $seconds [, int $microseconds ] )	Sets read timeout
	subscribe	public bool subscribe ( string $destination [, array $headers ] )	Registers to listen to a given destination
	unsubscribe	public bool unsubscribe ( string $destination [, array $headers ] )	Removes an existing subscription
StompException	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
	getDetails	public string getDetails ( void )
StompFrame	$command	 public $command ;
	$headers	 public $headers ;
	$body	 public $body ;
	__construct	__construct ([ string $command [, array $headers [, string $body ]]] )	Constructor
SVM	C_SVC	 const integer C_SVC = 0 ;
	NU_SVC	 const integer NU_SVC = 1 ;
	ONE_CLASS	 const integer ONE_CLASS = 2 ;
	EPSILON_SVR	 const integer EPSILON_SVR = 3 ;
	NU_SVR	 const integer NU_SVR = 4 ;
	KERNEL_LINEAR	 const integer KERNEL_LINEAR = 0 ;
	KERNEL_POLY	 const integer KERNEL_POLY = 1 ;
	KERNEL_RBF	 const integer KERNEL_RBF = 2 ;
	KERNEL_SIGMOID	 const integer KERNEL_SIGMOID = 3 ;
	KERNEL_PRECOMPUTED	 const integer KERNEL_PRECOMPUTED = 4 ;
	OPT_TYPE	 const integer OPT_TYPE = 101 ;
	OPT_KERNEL_TYPE	 const integer OPT_KERNEL_TYPE = 102 ;
	OPT_DEGREE	 const integer OPT_DEGREE = 103 ;
	OPT_SHRINKING	 const integer OPT_SHRINKING = 104 ;
	OPT_PROPABILITY	 const integer OPT_PROPABILITY = 105 ;
	OPT_GAMMA	 const integer OPT_GAMMA = 201 ;
	OPT_NU	 const integer OPT_NU = 202 ;
	OPT_EPS	 const integer OPT_EPS = 203 ;
	OPT_P	 const integer OPT_P = 204 ;
	OPT_COEF_ZERO	 const integer OPT_COEF_ZERO = 205 ;
	OPT_C	 const integer OPT_C = 206 ;
	OPT_CACHE_SIZE	 const integer OPT_CACHE_SIZE = 207 ;
	__construct	public __construct ( void )	SVM オブジェクトを新規構築
	svm::crossvalidate	public float svm::crossvalidate ( array $problem , int $number_of_folds )
	getOptions	public array getOptions ( void )	Return the current training parameters
	setOptions	public bool setOptions ( array $params )	Set training parameters
	svm::train	public SVMModel svm::train ( array $problem [, array $weights ] )
SVMModel	checkProbabilityModel	public bool checkProbabilityModel ( void )	Returns true if the model has probability information
	__construct	public __construct ([ string $filename ] )	SVMModel を新規構築
	getLabels	public array getLabels ( void )	Get the labels the model was trained on
	getNrClass	public int getNrClass ( void )	Returns the number of classes the model was trained with
	getSvmType	public int getSvmType ( void )	Get the SVM type the model was trained with
	getSvrProbability	public float getSvrProbability ( void )	Get the sigma value for regression types
	load	public bool load ( string $filename )	保管された SVM モデルを読み込み
	predict_probability	public float predict_probability ( array $data )	Return class probabilities for previous unseen data
	predict	public float predict ( array $data )	Predict a value for previously unseen data
	save	public bool save ( string $filename )	モデルをファイルに保管
SWFAction	__construct	__construct ( string $script )	新しい SWFAction を作成する
SWFBitmap	__construct	__construct ( mixed $file [, mixed $alphafile ] )	ビットマップオブジェクトを読み込む
	getHeight	float getHeight ( void )	ビットマップの高さを返す
	getWidth	float getWidth ( void )	ビットマップの幅を返す
SWFButton	addAction	void addAction ( SWFAction $action , int $flags )	アクションを追加する
	addASound	SWFSoundInstance addASound ( SWFSound $sound , int $flags )	ボタンに音を関連付ける
	addShape	void addShape ( SWFShape $shape , int $flags )	ボタンに図形を追加する
	__construct	__construct ( void )	新しいボタンを作成する
	setAction	void setAction ( SWFAction $action )	アクションを設定する
	setDown	void setDown ( SWFShape $shape )	addShape(shape, SWFBUTTON_DOWN) のエイリアス
	setHit	void setHit ( SWFShape $shape )	addShape(shape, SWFBUTTON_HIT) のエイリアス
	setMenu	void setMenu ( int $flag )	メニューボタンとしての挙動を有効にする
	setOver	void setOver ( SWFShape $shape )	addShape(shape, SWFBUTTON_OVER) のエイリアス
	setUp	void setUp ( SWFShape $shape )	addShape(shape, SWFBUTTON_UP) のエイリアス
SWFDisplayItem	addAction	void addAction ( SWFAction $action , int $flags )	この SWFAction を、指定した SWFSprite インスタンスに追加する
	addColor	void addColor ( int $red , int $green , int $blue [, int $a ] )	指定した色を、このアイテムの色変換に追加する
	endMask	void endMask ( void )	MASK レイヤを定義するもうひとつの方法
	getRot	float getRot ( void )	説明
	getX	float getX ( void )	説明
	getXScale	float getXScale ( void )	説明
	getXSkew	float getXSkew ( void )	説明
	getY	float getY ( void )	説明
	getYScale	float getYScale ( void )	説明
	getYSkew	float getYSkew ( void )	説明
	move	void move ( float $dx , float $dy )	オブジェクトを相対座標系で移動する
	moveTo	void moveTo ( float $x , float $y )	グローバル座標系でオブジェクトを移動する
	multColor	void multColor ( float $red , float $green , float $blue [, float $a ] )	アイテムの色変換を乗算する
	remove	void remove ( void )	オブジェクトをムービーから削除する
	rotate	void rotate ( float $angle )	相対座標で回転させる
	rotateTo	void rotateTo ( float $angle )	グローバル座標で回転させる
	scale	void scale ( float $dx , float $dy )	相対座標系でオブジェクトを拡大縮小する
	scaleTo	void scaleTo ( float $x [, float $y ] )	グローバル座標系でオブジェクトを拡大縮小する
	setDepth	void setDepth ( int $depth )	z オーダーを設定する
	setMaskLevel	void setMaskLevel ( int $level )	指定したレベルに MASK レイヤを設定する
	setMatrix	void setMatrix ( float $a , float $b , float $c , float $d , float $x , float $y )	アイテムの変換行列を設定する
	setName	void setName ( string $name )	オブジェクトの名前を設定する
	setRatio	void setRatio ( float $ratio )	オブジェクトの比を設定する
	skewX	void skewX ( float $ddegrees )	X-skew を設定する
	skewXTo	void skewXTo ( float $degrees )	X-skew を設定する
	skewY	void skewY ( float $ddegrees )	Y-skew を設定する
	skewYTo	void skewYTo ( float $degrees )	Y-skew を設定する
SWFFill	moveTo	void moveTo ( float $x , float $y )	塗りつぶしの原点を移動する
	rotateTo	void rotateTo ( float $angle )	塗りつぶしの回転を設定する
	scaleTo	void scaleTo ( float $x [, float $y ] )	塗りつぶしの倍率を設定する
	skewXTo	void skewXTo ( float $x )	塗りつぶしの x-skew を設定する
	skewYTo	void skewYTo ( float $y )	塗りつぶしの y-skew を設定する
SWFFont	__construct	__construct ( string $filename )	フォント定義を読み込む
	getAscent	float getAscent ( void )	フォントの ascent (ベースライン上部の高さ)    あるいは取得できない場合は 0 を返す
	getDescent	float getDescent ( void )	フォントの descent (ベースライン下部の深さ)    あるいは取得できない場合は 0 を返す
	getLeading	float getLeading ( void )	フォントの leading (行間)    あるいは取得できない場合は 0 を返す
	getShape	string getShape ( int $code )	指定した文字のグリフを文字列で返す
	getUTF8Width	float getUTF8Width ( string $string )	このフォントにおける指定した文字列の幅を計算する
	getWidth	float getWidth ( string $string )	文字列の幅を返す
SWFFontChar	addChars	void addChars ( string $char )	フォントをエクスポートするために、フォントに文字を追加する
	addUTF8Chars	void addUTF8Chars ( string $char )	フォントをエクスポートするために、フォントに文字を追加する
SWFGradient	addEntry	void addEntry ( float $ratio , int $red , int $green , int $blue [, int $alpha = 255 ] )	傾きリストにエントリを追加する
	__construct	__construct ( void )	傾きオブジェクトを作成する
SWFMorph	__construct	__construct ( void )	新規に SWFMorph オブジェクトを作成する
	getShape1	SWFShape getShape1 ( void )	最初の図形へのハンドルを取得する
	getShape2	SWFShape getShape2 ( void )	最後の図形へのハンドルを取得する
SWFMovie	add	mixed add ( object $instance )	任意の型のデータをムービーに追加する
	addExport	void addExport ( SWFCharacter $char , string $name )	説明
	addFont	mixed addFont ( SWFFont $font )	説明
	__construct	__construct ([ int $version ] )	SWF バージョン 4 のムービーを表すムービーオブジェクトを作成する
	importChar	SWFSprite importChar ( string $libswf , string $name )	説明
	importFont	SWFFontChar importFont ( string $libswf , string $name )	説明
	labelFrame	void labelFrame ( string $label )	フレームにラベルをつける
	nextFrame	void nextFrame ( void )	動画の次のフレームに移動する
	output	int output ([ int $compression ] )	作成したムービーを出力する
	remove	void remove ( object $instance )	表示リストからオブジェクトのインスタンスを削除する
	save	int save ( string $filename [, int $compression = -1 ] )	SWF ムービーをファイルに保存する
	saveToFile	int saveToFile ( resource $x [, int $compression = -1 ] )	説明
	setbackground	void setbackground ( int $red , int $green , int $blue )	背景色を設定する
	setDimension	void setDimension ( float $width , float $height )	ムービーの幅と高さを設定する
	setFrames	void setFrames ( int $number )	動画の総フレーム数を設定する
	setRate	void setRate ( float $rate )	動画のフレームレートを設定する
	startSound	SWFSoundInstance startSound ( SWFSound $sound )	説明
	stopSound	void stopSound ( SWFSound $sound )	説明
	streamMP3	int streamMP3 ( mixed $mp3file [, float $skip = 0 ] )	MP3 ファイルをストリーム再生する
	writeExports	void writeExports ( void )	説明
SWFPrebuiltClip	__construct	__construct ( mixed $file )	SWFPrebuiltClip オブジェクトを返す
SWFShape	addFill	SWFFill addFill ( int $red , int $green , int $blue [, int $alpha = 255 ] )	塗りつぶし色を図形に追加する
	__construct	__construct ( void )	新しい図形オブジェクトを作成する
	drawArc	void drawArc ( float $r , float $startAngle , float $endAngle )	現在の位置を中心とした半径 r の円弧を、12 時の方向から時計回りに    数えた角度 startAngle から endAngle まで描く
	drawCircle	void drawCircle ( float $r )	現在の位置を中心とした半径 r の円を、反時計回りに描く
	drawCubic	int drawCubic ( float $bx , float $by , float $cx , float $cy , float $dx , float $dy )	現在の位置および指定した三つの制御点を使用して    三次ベジエ曲線を描く
	drawCubicTo	int drawCubicTo ( float $bx , float $by , float $cx , float $cy , float $dx , float $dy )	現在の位置および指定した三つの制御点を使用して    三次ベジエ曲線を描く
	drawCurve	int drawCurve ( float $controldx , float $controldy , float $anchordx , float $anchordy [, float $targetdx ], float $targetdy )	曲線を描く (相対座標)
	drawCurveTo	int drawCurveTo ( float $controlx , float $controly , float $anchorx , float $anchory [, float $targetx ], float $targety )	曲線を描く
	drawGlyph	void drawGlyph ( SWFFont $font , string $character [, int $size ] )	指定したフォントのグリフ定義を使用して、    指定した文字列の最初の文字を図形の中に描く
	drawLine	void drawLine ( float $dx , float $dy )	線を描く (相対座標)
	drawLineTo	void drawLineTo ( float $x , float $y )	線を描く
	movePen	void movePen ( float $dx , float $dy )	図形のペンを移動する(相対座標)
	movePenTo	void movePenTo ( float $x , float $y )	図形のペンを移動する
	setLeftFill	void setLeftFill ( SWFGradient $fill )	左ラスタ色を設定する
	setLine	void setLine ( SWFShape $shape )	図形の線種を設定する
	setRightFill	void setRightFill ( SWFGradient $fill )	右ラスタ色を設定する
SWFSound	__construct	__construct ( string $filename [, int $flags = 0 ] )	指定したファイルから、新しい SWFSound オブジェクトを返す
SWFSoundInstance	loopCount	void loopCount ( int $point )	説明
	loopInPoint	void loopInPoint ( int $point )	説明
	loopOutPoint	void loopOutPoint ( int $point )	説明
	noMultiple	void noMultiple ( void )	説明
SWFSprite	add	void add ( object $object )	オブジェクトをスプライトに追加する
	__construct	__construct ( void )	ムービークリップ (スプライト) を作成する
	labelFrame	void labelFrame ( string $label )	フレームにラベルをつける
	nextFrame	void nextFrame ( void )	動画の次のフレームに移動する
	remove	void remove ( object $object )	オブジェクトをスプライトから削除する
	setFrames	void setFrames ( int $number )	動画の総フレーム数を設定する
	startSound	SWFSoundInstance startSound ( SWFSound $sount )	説明
	stopSound	void stopSound ( SWFSound $sount )	説明
SWFText	addString	void addString ( string $string )	文字列を描画する
	addUTF8String	void addUTF8String ( string $text )	現在のペンの位置に、現在のフォント・高さ・行間および色設定を使用して    指定したテキストで SWFText オブジェクトを作成する
	__construct	__construct ( void )	新しい SWFText オブジェクトを作成する
	getAscent	float getAscent ( void )	現在のサイズにおけるフォントの ascent (ベースライン上部の高さ)    あるいは取得できない場合は 0 を返す
	getDescent	float getDescent ( void )	現在のサイズにおけるフォントの descent (ベースライン下部の深さ)    あるいは取得できない場合は 0 を返す
	getLeading	float getLeading ( void )	現在のサイズにおけるフォントの leading (行間)    あるいは取得できない場合は 0 を返す
	getUTF8Width	float getUTF8Width ( string $string )	現在のフォントおよびサイズにおける指定した文字列の幅を計算する
	getWidth	float getWidth ( string $string )	文字列の幅を計算する
	moveTo	void moveTo ( float $x , float $y )	ペンを移動する
	setColor	void setColor ( int $red , int $green , int $blue [, int $a = 255 ] )	現在のテキスト色を設定する
	setFont	void setFont ( SWFFont $font )	現在のフォントを設定する
	setHeight	void setHeight ( float $height )	現在のフォントの高さを設定する
	setSpacing	void setSpacing ( float $spacing )	現在のフォントの間隔を設定する
SWFTextField	addChars	void addChars ( string $chars )	テキストフィールド内で使用可能なフォントに文字を追加する
	addString	void addString ( string $string )	指定した文字列をテキストフィールドに結合する
	align	void align ( int $alignement )	テキストフィールドの配置を設定する
	__construct	__construct ([ int $flags ] )	テキストフィールドのオブジェクトを作成する
	setBounds	void setBounds ( float $width , float $height )	テキストフィールドの幅と高さを設定する
	setColor	void setColor ( int $red , int $green , int $blue [, int $a = 255 ] )	テキストフィールドの色を設定する
	setFont	void setFont ( SWFFont $font )	テキストフィールドのフォントを設定する
	setHeight	void setHeight ( float $height )	このテキストフィールドのフォントの高さを設定する
	setIndentation	void setIndentation ( float $width )	最初の行の字下げを設定する
	setLeftMargin	void setLeftMargin ( float $width )	テキストフィールドの左マージンの幅を設定する
	setLineSpacing	void setLineSpacing ( float $height )	テキストフィールドの行間を設定する
	setMargins	void setMargins ( float $left , float $right )	テキストフィールドのマージン幅を設定する
	setName	void setName ( string $name )	変数名を設定する
	setPadding	void setPadding ( float $padding )	テキストフィールドのパディングを設定する
	setRightMargin	void setRightMargin ( float $width )	テキストフィールドの右マージンの幅を設定する
SWFVideoStream	__construct	__construct ([ string $file ] )	SWFVideoStream オブジェクトを返す
	getNumFrames	int getNumFrames ( void )	ビデオ内のフレーム数を返す
	setDimension	void setDimension ( int $x , int $y )	ビデオの大きさを設定する
Thread	chunk	final public boolean chunk ( long $size , boolean $preserve )	Manipulation
	getCreatorId	final public long getCreatorId ( void )	識別
	getThreadId	final public long getThreadId ( void )	識別
	isJoined	final public boolean isJoined ( void )	状態を検出する
	isRunning	final public boolean isRunning ( void )	状態を検出する
	isStarted	final public boolean isStarted ( void )	状態を検出する
	isTerminated	final public boolean isTerminated ( void )	State Detection
	isWaiting	final public boolean isWaiting ( void )	状態を検出する
	join	final public boolean join ( void )	同期処理
	lock	final public boolean lock ( void )	同期処理
	merge	final public boolean merge ( mixed $from [, mixed $overwrite ] )	Manipulation
	notify	final public boolean notify ( void )	同期処理
	pop	final public boolean pop ( void )	Manipulation
	run	abstract public void run ( void )	実行する
	shift	final public boolean shift ( void )	Manipulation
	start	final public boolean start ([ long $options ] )	実行する
	synchronized	final public mixed synchronized ( Closure $block [, mixed $... ] )	同期処理
	unlock	final public boolean unlock ( void )	同期処理
	wait	final public boolean wait ([ long $timeout ] )	同期処理
tidy	$errorBuffer	string $errorBuffer;
	body	tidyNode body ( void )	Tidy パースツリーの <body> タグから始まる tidyNode オブジェクトを返す
	cleanRepair	bool cleanRepair ( void )	パースされたマークアップに設定に基く誤りの修正を行う
	__construct	__construct ([ string $filename [, mixed $config [, string $encoding [, bool $use_include_path ]]]] )	新しい tidy オブジェクトを作成する
	diagnose	bool diagnose ( void )	パース、修正されたマークアップの診断を行う
	getConfig	array getConfig ( void )	現在の Tidy の設定を取得する
	getHtmlVer	int getHtmlVer ( void )	指定したドキュメントで検出された HTML バージョンを取得する
	getOpt	mixed getOpt ( string $option )	Tidy ドキュメントについて指定した設定オプションの値を返す
	getOptDoc	string getOptDoc ( string $optname )	与えられたオプション名に対するドキュメントを返す
	getRelease	string getRelease ( void )	Tidy ライブラリのリリース日 (バージョン) を取得する
	getStatus	int getStatus ( void )	指定したドキュメントのステータスを取得する
	head	tidyNode head ( void )	Tidy パースツリーの <head> タグから始まる tidyNode オブジェクトを返す
	html	tidyNode html ( void )	Tidy パースツリーの <html> タグから始まる tidyNode オブジェクトを返す
	isXhtml	bool isXhtml ( void )	ドキュメントが XHTML ドキュメントかどうかを示す
	isXml	bool isXml ( void )	ドキュメントが一般的な XML ドキュメント (非 HTML/XHTML) かどうかを示す
	parseFile	bool parseFile ( string $filename [, mixed $config [, string $encoding [, bool $use_include_path = false ]]] )	ファイルまたは URI にあるマークアップをパースする
	parseString	bool parseString ( string $input [, mixed $config [, string $encoding ]] )	文字列にストアされたドキュメントをパースする
	repairFile	string repairFile ( string $filename [, mixed $config [, string $encoding [, bool $use_include_path = false ]]] )	ファイルを修正し、それを文字列として返す
	repairString	string repairString ( string $data [, mixed $config [, string $encoding ]] )	別途提供される設定ファイルを使用して文字列を修正する
	root	tidyNode root ( void )	Tidy パースツリーのルートを表す tidyNode を返す
tidyNode	$value	string $value;
	$name	string $name;
	$type	int $type;
	$line	int $line;
	$column	int $column;
	$proprietary	bool $proprietary;
	$id	int $id;
	$attribute	array $attribute;
	$child	array $child;
	getParent	tidyNode getParent ( void )	カレントノードの親ノードを返す
	hasChildren	bool hasChildren ( void )	ノードが子を持つかどうかを調べる
	hasSiblings	bool hasSiblings ( void )	このノードが兄弟ノードを持つかどうかを調べる
	isAsp	bool isAsp ( void )	このノードが ASP かどうかを調べる
	isComment	bool isComment ( void )	このノードがコメントを表すものかどうかを調べる
	isHtml	bool isHtml ( void )	このノードが HTML ドキュメントであるかどうかを調べる
	isJste	bool isJste ( void )	このノードが JSTE であるかどうかを調べる
	isPhp	bool isPhp ( void )	このノードが PHP であるかどうかを調べる
	isText	bool isText ( void )	このノードが (マークアップでない) テキストであるかどうかを調べる
TokyoTyrant	RDBDEF_PORT	 const integer RDBDEF_PORT = 1978 ;
	RDBQC_STREQ	 const integer RDBQC_STREQ = 0 ;
	RDBQC_STRINC	 const integer RDBQC_STRINC = 1 ;
	RDBQC_STRBW	 const integer RDBQC_STRBW = 2 ;
	RDBQC_STREW	 const integer RDBQC_STREW = 3 ;
	RDBQC_STRAND	 const integer RDBQC_STRAND = 4 ;
	RDBQC_STROR	 const integer RDBQC_STROR = 5 ;
	RDBQC_STROREQ	 const integer RDBQC_STROREQ = 6 ;
	RDBQC_STRRX	 const integer RDBQC_STRRX = 7 ;
	RDBQC_NUMEQ	 const integer RDBQC_NUMEQ = 8 ;
	RDBQC_NUMGT	 const integer RDBQC_NUMGT = 9 ;
	RDBQC_NUMGE	 const integer RDBQC_NUMGE = 10 ;
	RDBQC_NUMLT	 const integer RDBQC_NUMLT = 11 ;
	RDBQC_NUMLE	 const integer RDBQC_NUMLE = 12 ;
	RDBQC_NUMBT	 const integer RDBQC_NUMBT = 13 ;
	RDBQC_NUMOREQ	 const integer RDBQC_NUMOREQ = 14 ;
	RDBQC_NEGATE	 const integer RDBQC_NEGATE = 16777216 ;
	RDBQC_NOIDX	 const integer RDBQC_NOIDX = 33554432 ;
	RDBQO_STRASC	 const integer RDBQO_STRASC = 0 ;
	RDBQO_STRDESC	 const integer RDBQO_STRDESC = 1 ;
	RDBQO_NUMASC	 const integer RDBQO_NUMASC = 2 ;
	RDBQO_NUMDESC	 const integer RDBQO_NUMDESC = 3 ;
	RDBIT_LEXICAL	 const integer RDBIT_LEXICAL = 0 ;
	RDBIT_DECIMAL	 const integer RDBIT_DECIMAL = 1 ;
	RDBIT_TOKEN	 const integer RDBIT_TOKEN = 2 ;
	RDBIT_QGRAM	 const integer RDBIT_QGRAM = 3 ;
	RDBIT_OPT	 const integer RDBIT_OPT = 9998 ;
	RDBIT_VOID	 const integer RDBIT_VOID = 9999 ;
	RDBIT_KEEP	 const integer RDBIT_KEEP = 16777216 ;
	RDBQCFTS_PH	 const integer RDBQCFTS_PH = 15 ;
	RDBQCFTS_AND	 const integer RDBQCFTS_AND = 16 ;
	RDBQCFTS_OR	 const integer RDBQCFTS_OR = 17 ;
	RDBQCFTS_EX	 const integer RDBQCFTS_EX = 18 ;
	RDBXO_LCKREC	 const integer RDBXO_LCKREC = 1 ;
	RDBXOLCK_GLB	 const integer RDBXOLCK_GLB = 2 ;
	RDBREC_INT	 const integer RDBREC_INT = 1 ;
	RDBREC_DBL	 const integer RDBREC_DBL = 2 ;
	RDBMS_UNION	 const integer RDBMS_UNION = 0 ;
	RDBMS_ISECT	 const integer RDBMS_ISECT = 1 ;
	RDBMS_DIFF	 const integer RDBMS_DIFF = 2 ;
	RDBT_RECON	 const integer RDBT_RECON = 1 ;
	add	public number add ( string $key , number $increment [, int $type = 0 ] )	数値キーを加算する
	connect	public TokyoTyrant connect ( string $host [, int $port = TokyoTyrant::RDBDEF_PORT [, array $options ]] )	データベースに接続する
	connectUri	public TokyoTyrant connectUri ( string $uri )	データベースに接続する
	__construct	public __construct ([ string $host [, int $port = TokyoTyrant::RDBDEF_PORT [, array $options ]]] )	新しい TokyoTyrant オブジェクトを作成する
	copy	public TokyoTyrant copy ( string $path )	データベースをコピーする
	ext	public string ext ( string $name , int $options , string $key , string $value )	リモートスクリプトを実行する
	fwmKeys	public array fwmKeys ( string $prefix , int $max_recs )	前方一致でマッチするキーを返す
	get	public mixed get ( mixed $keys )	値を取得する
	getIterator	public TokyoTyrantIterator getIterator ( void )	イテレータを取得する
	num	public int num ( void )	データベース内のレコードの数を取得する
	out	public TokyoTyrant out ( mixed $keys )	レコードを削除する
	put	public TokyoTyrant put ( mixed $keys [, string $value = NULL ] )	値を格納する
	putCat	public TokyoTyrant putCat ( mixed $keys [, string $value ] )	レコードを連結する
	putKeep	public TokyoTyrant putKeep ( mixed $keys [, string $value ] )	レコードを書き込む
	putNr	public TokyoTyrant putNr ( mixed $keys [, string $value = NULL ] )	値を格納する
	putShl	public mixed putShl ( string $key , string $value , int $width )	レコードを連結する
	restore	public mixed restore ( string $log_dir , int $timestamp [, bool $check_consistency = true ] )	データベースをリストアする
	setMaster	public mixed setMaster ( string $host , int $port , int $timestamp [, bool $check_consistency = true ] )	レプリケーションのマスタを設定する
	size	public int size ( string $key )	値のサイズを返す
	stat	public array stat ( void )	統計情報を取得する
	sync	public mixed sync ( void )	データベースを同期させる
	tune	public TokyoTyrant tune ( float $timeout [, int $options = TokyoTyrant::RDBT_RECON ] )	接続の値を調節する
	vanish	public mixed vanish ( void )	データベースを空にする
tokyotyrantexception	$code	 protected int $code ;
	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
TokyoTyrantIterator	__construct	public __construct ( mixed $object )	イテレータを作成する
	current	public mixed current ( void )	現在の値を取得する
	key	public mixed key ( void )	現在のキーを返す
	next	public mixed next ( void )	次のキーに移動する
	rewind	public void rewind ( void )	イテレータを巻き戻す
	valid	public bool valid ( void )	イテレータが有効かどうかを調べる
	TokyoTyrant::add	public number TokyoTyrant::add ( string $key , number $increment [, int $type = 0 ] )
	TokyoTyrant::connect	public TokyoTyrant TokyoTyrant::connect ( string $host [, int $port = TokyoTyrant::RDBDEF_PORT [, array $options ]] )
	TokyoTyrant::connectUri	public TokyoTyrant TokyoTyrant::connectUri ( string $uri )
	TokyoTyrant::__construct	public TokyoTyrant::__construct ([ string $host [, int $port = TokyoTyrant::RDBDEF_PORT [, array $options ]]] )
	TokyoTyrant::copy	public TokyoTyrant TokyoTyrant::copy ( string $path )
	TokyoTyrant::ext	public string TokyoTyrant::ext ( string $name , int $options , string $key , string $value )
	TokyoTyrant::fwmKeys	public array TokyoTyrant::fwmKeys ( string $prefix , int $max_recs )
	TokyoTyrant::get	public mixed TokyoTyrant::get ( mixed $keys )
	TokyoTyrant::getIterator	public TokyoTyrantIterator TokyoTyrant::getIterator ( void )
	TokyoTyrant::num	public int TokyoTyrant::num ( void )
	TokyoTyrant::out	public TokyoTyrant TokyoTyrant::out ( mixed $keys )
	TokyoTyrant::put	public TokyoTyrant TokyoTyrant::put ( mixed $keys [, string $value = NULL ] )
	TokyoTyrant::putCat	public TokyoTyrant TokyoTyrant::putCat ( mixed $keys [, string $value ] )
	TokyoTyrant::putKeep	public TokyoTyrant TokyoTyrant::putKeep ( mixed $keys [, string $value ] )
	TokyoTyrant::putNr	public TokyoTyrant TokyoTyrant::putNr ( mixed $keys [, string $value = NULL ] )
	TokyoTyrant::putShl	public mixed TokyoTyrant::putShl ( string $key , string $value , int $width )
	TokyoTyrant::restore	public mixed TokyoTyrant::restore ( string $log_dir , int $timestamp [, bool $check_consistency = true ] )
	TokyoTyrant::setMaster	public mixed TokyoTyrant::setMaster ( string $host , int $port , int $timestamp [, bool $check_consistency = true ] )
	TokyoTyrant::size	public int TokyoTyrant::size ( string $key )
	TokyoTyrant::stat	public array TokyoTyrant::stat ( void )
	TokyoTyrant::sync	public mixed TokyoTyrant::sync ( void )
	TokyoTyrant::tune	public TokyoTyrant TokyoTyrant::tune ( float $timeout [, int $options = TokyoTyrant::RDBT_RECON ] )
	TokyoTyrant::vanish	public mixed TokyoTyrant::vanish ( void )
TokyoTyrantQuery	addCond	public mixed addCond ( string $name , int $op , string $expr )	条件をクエリに追加する
	__construct	public __construct ( TokyoTyrantTable $table )	新しいクエリを作成する
	count	public int count ( void )	レコードを数える
	current	public array current ( void )	現在の要素を返す
	hint	public string hint ( void )	クエリのヒント文字列を取得する
	key	public string key ( void )	現在のキーを返す
	metaSearch	public array metaSearch ( array $queries , int $type )	複数のクエリからレコードを取得する
	next	public array next ( void )	イテレータを次のエントリに移動する
	out	public TokyoTyrantQuery out ( void )	クエリに基づいてレコードを削除する
	rewind	public bool rewind ( void )	イテレータを巻き戻す
	search	public array search ( void )	レコードを検索する
	setLimit	public mixed setLimit ([ int $max [, int $skip ]] )	結果を制限する
	setOrder	public mixed setOrder ( string $name , int $type )	結果を並べ替える
	valid	public bool valid ( void )	現在のアイテムの有効性をチェックする
TokyoTyrantTable	add	public void add ( string $key , mixed $increment [, string $type ] )	レコードを追加する
	genUid	public int genUid ( void )	一意な id を生成する
	get	public void get ( mixed $keys )	行を取得する
	getIterator	public TokyoTyrantIterator getIterator ( void )	イテレータを取得する
	getQuery	public TokyoTyrantQuery getQuery ( void )	クエリオブジェクトを取得する
	out	public void out ( mixed $keys )	レコードを削除する
	put	public int put ( string $key , array $columns )	行を格納する
	putCat	public void putCat ( string $key , array $columns )	行を連結する
	putKeep	public void putKeep ( string $key , array $columns )	新しいレコードを書き込む
	putNr	public void putNr ( mixed $keys [, string $value ] )	値を格納する
	putShl	public void putShl ( string $key , string $value , int $width )	レコードを連結する
	setIndex	public mixed setIndex ( string $column , int $type )	インデックスを設定する
	TokyoTyrant::add	public number TokyoTyrant::add ( string $key , number $increment [, int $type = 0 ] )
	TokyoTyrant::connect	public TokyoTyrant TokyoTyrant::connect ( string $host [, int $port = TokyoTyrant::RDBDEF_PORT [, array $options ]] )
	TokyoTyrant::connectUri	public TokyoTyrant TokyoTyrant::connectUri ( string $uri )
	TokyoTyrant::__construct	public TokyoTyrant::__construct ([ string $host [, int $port = TokyoTyrant::RDBDEF_PORT [, array $options ]]] )
	TokyoTyrant::copy	public TokyoTyrant TokyoTyrant::copy ( string $path )
	TokyoTyrant::ext	public string TokyoTyrant::ext ( string $name , int $options , string $key , string $value )
	TokyoTyrant::fwmKeys	public array TokyoTyrant::fwmKeys ( string $prefix , int $max_recs )
	TokyoTyrant::get	public mixed TokyoTyrant::get ( mixed $keys )
	TokyoTyrant::getIterator	public TokyoTyrantIterator TokyoTyrant::getIterator ( void )
	TokyoTyrant::num	public int TokyoTyrant::num ( void )
	TokyoTyrant::out	public TokyoTyrant TokyoTyrant::out ( mixed $keys )
	TokyoTyrant::put	public TokyoTyrant TokyoTyrant::put ( mixed $keys [, string $value = NULL ] )
	TokyoTyrant::putCat	public TokyoTyrant TokyoTyrant::putCat ( mixed $keys [, string $value ] )
	TokyoTyrant::putKeep	public TokyoTyrant TokyoTyrant::putKeep ( mixed $keys [, string $value ] )
	TokyoTyrant::putNr	public TokyoTyrant TokyoTyrant::putNr ( mixed $keys [, string $value = NULL ] )
	TokyoTyrant::putShl	public mixed TokyoTyrant::putShl ( string $key , string $value , int $width )
	TokyoTyrant::restore	public mixed TokyoTyrant::restore ( string $log_dir , int $timestamp [, bool $check_consistency = true ] )
	TokyoTyrant::setMaster	public mixed TokyoTyrant::setMaster ( string $host , int $port , int $timestamp [, bool $check_consistency = true ] )
	TokyoTyrant::size	public int TokyoTyrant::size ( string $key )
	TokyoTyrant::stat	public array TokyoTyrant::stat ( void )
	TokyoTyrant::sync	public mixed TokyoTyrant::sync ( void )
	TokyoTyrant::tune	public TokyoTyrant TokyoTyrant::tune ( float $timeout [, int $options = TokyoTyrant::RDBT_RECON ] )
	TokyoTyrant::vanish	public mixed TokyoTyrant::vanish ( void )
Transliterator	FORWARD	 const integer FORWARD = 0 ;
	REVERSE	 const integer REVERSE = 1 ;
	$id	 public $id ;
	__construct	__construct ( void )	インスタンス化を拒否するために private にしたコンストラクタ
	create	public static Transliterator create ( string $id [, int $direction ] )	Transliterator を作成する
	createFromRules	public static Transliterator createFromRules ( string $rules [, string $direction ] )	規則に基づいた Transliterator を作成する
	createInverse	public Transliterator createInverse ( void )	逆方向の Transliterator を作成する
	getErrorCode	public int getErrorCode ( void )	直近のエラーコードを取得する
	getErrorMessage	public string getErrorMessage ( void )	直近のエラーメッセージを取得する
	listIDs	public static array listIDs ( void )	Transliterator の ID を取得する
	transliterate	public string transliterate ( string $subject [, int $start [, int $end ]] )	文字列を音訳する
UConverter	REASON_UNASSIGNED	 const integer REASON_UNASSIGNED = 0 ;
	REASON_ILLEGAL	 const integer REASON_ILLEGAL = 1 ;
	REASON_IRREGULAR	 const integer REASON_IRREGULAR = 2 ;
	REASON_RESET	 const integer REASON_RESET = 3 ;
	REASON_CLOSE	 const integer REASON_CLOSE = 4 ;
	REASON_CLONE	 const integer REASON_CLONE = 5 ;
	UNSUPPORTED_CONVERTER	 const integer UNSUPPORTED_CONVERTER = -1 ;
	SBCS	 const integer SBCS = 0 ;
	DBCS	 const integer DBCS = 1 ;
	MBCS	 const integer MBCS = 2 ;
	LATIN_1	 const integer LATIN_1 = 3 ;
	UTF8	 const integer UTF8 = 4 ;
	UTF16_BigEndian	 const integer UTF16_BigEndian = 5 ;
	UTF16_LittleEndian	 const integer UTF16_LittleEndian = 6 ;
	UTF32_BigEndian	 const integer UTF32_BigEndian = 7 ;
	UTF32_LittleEndian	 const integer UTF32_LittleEndian = 8 ;
	EBCDIC_STATEFUL	 const integer EBCDIC_STATEFUL = 9 ;
	ISO_2022	 const integer ISO_2022 = 10 ;
	LMBCS_1	 const integer LMBCS_1 = 11 ;
	LMBCS_2	 const integer LMBCS_2 = 12 ;
	LMBCS_3	 const integer LMBCS_3 = 13 ;
	LMBCS_4	 const integer LMBCS_4 = 14 ;
	LMBCS_5	 const integer LMBCS_5 = 15 ;
	LMBCS_6	 const integer LMBCS_6 = 16 ;
	LMBCS_8	 const integer LMBCS_8 = 17 ;
	LMBCS_11	 const integer LMBCS_11 = 18 ;
	LMBCS_16	 const integer LMBCS_16 = 19 ;
	LMBCS_17	 const integer LMBCS_17 = 20 ;
	LMBCS_18	 const integer LMBCS_18 = 21 ;
	LMBCS_19	 const integer LMBCS_19 = 22 ;
	LMBCS_LAST	 const integer LMBCS_LAST = 22 ;
	HZ	 const integer HZ = 23 ;
	SCSU	 const integer SCSU = 24 ;
	ISCII	 const integer ISCII = 25 ;
	US_ASCII	 const integer US_ASCII = 26 ;
	UTF7	 const integer UTF7 = 27 ;
	BOCU1	 const integer BOCU1 = 28 ;
	UTF16	 const integer UTF16 = 29 ;
	UTF32	 const integer UTF32 = 30 ;
	CESU8	 const integer CESU8 = 31 ;
	IMAP_MAILBOX	 const integer IMAP_MAILBOX = 32 ;
	__construct	public __construct ([ string $destination_encoding [, string $source_encoding ]] )	UConverter オブジェクトを作る
	convert	public string convert ( string $str [, bool $reverse ] )	ある文字セットから別の文字セットに文字列を変換する
	fromUCallback	public mixed fromUCallback ( integer $reason , string $source , string $codePoint , integer &$error )	デフォルトの "from" コールバック関数
	getAliases	public static array getAliases ([ string $name ] )	指定した名前のエイリアスを取得する
	getAvailable	public static array getAvailable ( void )	利用可能なコンバーター名を取得する
	getDestinationEncoding	public string getDestinationEncoding ( void )	変換先エンコーディングを取得する
	getDestinationType	public integer getDestinationType ( void )	変換先のコンバーターの型を取得する
	getErrorCode	public integer getErrorCode ( void )	直近のエラーコードを取得する
	getErrorMessage	public string getErrorMessage ( void )	直近のエラーメッセージを取得する
	getSourceEncoding	public string getSourceEncoding ( void )	変換元エンコーディングを取得する
	getSourceType	public integer getSourceType ( void )	変換元のコンバーターの型を取得する
	getStandards	public static array getStandards ( void )	コンバーター名に対応する標準を取得する
	getSubstChars	public string getSubstChars ( void )	置換文字を取得する
	reasonText	public static string reasonText ([ integer $reason ] )	コールバックの理由を表す文字列を取得する
	setDestinationEncoding	public void setDestinationEncoding ( string $encoding )	変換先エンコーディングを設定する
	setSourceEncoding	public void setSourceEncoding ( string $encoding )	変換元エンコーディングを設定する
	setSubstChars	public void setSubstChars ( string $chars )	置換文字を設定する
	toUCallback	public mixed toUCallback ( integer $reason , string $source , string $codeUnits , integer &$error )	デフォルトの "to" コールバック関数
	transcode	public static string transcode ( string $str , string $toEncoding , string $fromEncoding [, array $options ] )	ある文字セットから別の文字セットに文字列を変換する
UnderflowException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
UnexpectedValueException	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
V8Js	V8_VERSION	 const string V8_VERSION ;
	FLAG_NONE	 const integer FLAG_NONE = 1 ;
	FLAG_FORCE_ARRAY	 const integer FLAG_FORCE_ARRAY = 2 ;
	__construct	public __construct ([ string $object_name = "PHP" [, array $variables = array() [, array $extensions = array() [, bool $report_uncaught_exceptions = TRUE ]]]] )	新しい V8Js オブジェクトを作成する
	executeString	public mixed executeString ( string $script [, string $identifier = "V8Js::executeString()" [, int $flags = V8Js::FLAG_NONE ]] )	文字列を Javascript のコードとして実行する
	getExtensions	public static array getExtensions ( void )	登録された拡張の配列を返す
	getPendingException	public V8JsException getPendingException ( void )	キャッチされなかった Javascript 例外の中で未処理のものを返す
	registerExtension	public static bool registerExtension ( string $extension_name , string $script [, array $dependencies = array() [, bool $auto_enable = FALSE ]] )	V8Js で使う Javascript の拡張を登録する
V8JsException	$JsFileName	 protected $JsFileName ;
	$JsLineNumber	 protected $JsLineNumber ;
	$JsSourceLine	 protected $JsSourceLine ;
	$JsTrace	 protected $JsTrace ;
	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	getJsFileName	final public string getJsFileName ( void )	getJsFileName
	getJsLineNumber	final public int getJsLineNumber ( void )	getJsLineNumber
	getJsSourceLine	final public int getJsSourceLine ( void )	getJsSourceLine
	getJsTrace	final public string getJsTrace ( void )	getJsTrace
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
VarnishAdmin	auth	public bool auth ( void )	varnish インスタンス上で認証する
	ban	public int ban ( string $vcl_regex )	VCL の式を使って URL を禁止する
	banUrl	public int banUrl ( string $vcl_regex )	VCL の式を使って URL を禁止する
	clearPanic	public int clearPanic ( void )	varnish インスタンスのパニックメッセージをクリアする
	connect	public bool connect ( void )	varnish インスタンスの管理インターフェイスに接続する
	__construct	public __construct ([ array $args ] )	VarnishAdmin のコンストラクタ
	disconnect	public bool disconnect ( void )	varnish インスタンスの管理インターフェイスとの接続を切断する
	getPanic	public string getPanic ( void )	varnish インスタンスの直近のパニックメッセージを取得する
	getParams	public array getParams ( void )	現在の varnish インスタンスの設定パラメータを取得する
	isRunning	public bool isRunning ( void )	varnish のスレーブプロセスが現在実行中かどうかを調べる
	setCompat	public void setCompat ( int $compat )	クラスのオプション compat を設定する
	setHost	public void setHost ( string $host )	クラスのオプション host を設定する
	setIdent	public void setIdent ( string $ident )	クラスのオプション ident を設定する
	setParam	public int setParam ( string $name , string|integer $value )	現在の varnish インスタンスの構成パラメータを設定する
	setPort	public void setPort ( int $port )	クラスのオプション port を設定する
	setSecret	public void setSecret ( string $secret )	クラスのオプション secret を設定する
	setTimeout	public void setTimeout ( int $timeout )	クラスのオプション timeout を設定する
	start	public int start ( void )	varnish ワーカープロセスを開始する
	stop	public int stop ( void )	varnish ワーカープロセスを停止する
VarnishLog	TAG_Debug	 const integer TAG_Debug = 0 ;
	TAG_Error	 const integer TAG_Error = 1 ;
	TAG_CLI	 const integer TAG_CLI = 2 ;
	TAG_StatSess	 const integer TAG_StatSess = 3 ;
	TAG_ReqEnd	 const integer TAG_ReqEnd = 4 ;
	TAG_SessionOpen	 const integer TAG_SessionOpen = 5 ;
	TAG_SessionClose	 const integer TAG_SessionClose = 6 ;
	TAG_BackendOpen	 const integer TAG_BackendOpen = 7 ;
	TAG_BackendXID	 const integer TAG_BackendXID = 8 ;
	TAG_BackendReuse	 const integer TAG_BackendReuse = 9 ;
	TAG_BackendClose	 const integer TAG_BackendClose = 10 ;
	TAG_HttpGarbage	 const integer TAG_HttpGarbage = 11 ;
	TAG_Backend	 const integer TAG_Backend = 12 ;
	TAG_Length	 const integer TAG_Length = 13 ;
	TAG_FetchError	 const integer TAG_FetchError = 14 ;
	TAG_RxRequest	 const integer TAG_RxRequest = 15 ;
	TAG_RxResponse	 const integer TAG_RxResponse = 16 ;
	TAG_RxStatus	 const integer TAG_RxStatus = 17 ;
	TAG_RxURL	 const integer TAG_RxURL = 18 ;
	TAG_RxProtocol	 const integer TAG_RxProtocol = 19 ;
	TAG_RxHeader	 const integer TAG_RxHeader = 20 ;
	TAG_TxRequest	 const integer TAG_TxRequest = 21 ;
	TAG_TxResponse	 const integer TAG_TxResponse = 22 ;
	TAG_TxStatus	 const integer TAG_TxStatus = 23 ;
	TAG_TxURL	 const integer TAG_TxURL = 24 ;
	TAG_TxProtocol	 const integer TAG_TxProtocol = 25 ;
	TAG_TxHeader	 const integer TAG_TxHeader = 26 ;
	TAG_ObjRequest	 const integer TAG_ObjRequest = 27 ;
	TAG_ObjResponse	 const integer TAG_ObjResponse = 28 ;
	TAG_ObjStatus	 const integer TAG_ObjStatus = 29 ;
	TAG_ObjURL	 const integer TAG_ObjURL = 30 ;
	TAG_ObjProtocol	 const integer TAG_ObjProtocol = 31 ;
	TAG_ObjHeader	 const integer TAG_ObjHeader = 32 ;
	TAG_LostHeader	 const integer TAG_LostHeader = 33 ;
	TAG_TTL	 const integer TAG_TTL = 34 ;
	TAG_Fetch_Body	 const integer TAG_Fetch_Body = 35 ;
	TAG_VCL_acl	 const integer TAG_VCL_acl = 36 ;
	TAG_VCL_call	 const integer TAG_VCL_call = 37 ;
	TAG_VCL_trace	 const integer TAG_VCL_trace = 38 ;
	TAG_VCL_return	 const integer TAG_VCL_return = 39 ;
	TAG_VCL_error	 const integer TAG_VCL_error = 40 ;
	TAG_ReqStart	 const integer TAG_ReqStart = 41 ;
	TAG_Hit	 const integer TAG_Hit = 42 ;
	TAG_HitPass	 const integer TAG_HitPass = 43 ;
	TAG_ExpBan	 const integer TAG_ExpBan = 44 ;
	TAG_ExpKill	 const integer TAG_ExpKill = 45 ;
	TAG_WorkThread	 const integer TAG_WorkThread = 46 ;
	TAG_ESI_xmlerror	 const integer TAG_ESI_xmlerror = 47 ;
	TAG_Hash	 const integer TAG_Hash = 48 ;
	TAG_Backend_health	 const integer TAG_Backend_health = 49 ;
	TAG_VCL_Log	 const integer TAG_VCL_Log = 50 ;
	TAG_Gzip	 const integer TAG_Gzip = 51 ;
	__construct	public __construct ([ array $args ] )	Varnishlog のコンストラクタ
	getLine	public array getLine ( void )	ログの次の行を取得する
	getTagName	public static string getTagName ( int $index )	ログのタグ文字列を、インデックスから取得する
VarnishStat	__construct	public __construct ([ array $args ] )	VarnishStat のコンストラクタ
	getSnapshot	public array getSnapshot ( void )	現在の varnish インスタンスの統計スナップショットを取得する
WeakMap	__construct	public __construct ( void )	新しいマップを作る
	count	public int count ( void )	マップ内の生きたエントリを数える
	current	public mixed current ( void )	反復処理中の現在の値を返す
	key	public object key ( void )	反復処理中の現在のキーを返す
	next	public void next ( void )	マップの次の要素に進む
	offsetExists	public bool offsetExists ( object $object )	オブジェクトがマップ内にあるかどうかを調べる
	offsetGet	public mixed offsetGet ( object $object )	オブジェクトを指定して、それが指す値を返す
	offsetSet	public void offsetSet ( object $object , mixed $value )	新しいキー/値のペアでマップを更新する
	offsetUnset	public void offsetUnset ( object $object )	エントリをマップから削除する
	rewind	public void rewind ( void )	イテレータをマップの先頭まで巻き戻す
	valid	public bool valid ( void )	イテレータが有効なマップ要素を指しているかどうかを返す
WeakRef	Weakref::__construct	public Weakref::__construct ([ object $object ] )
	Weakref::acquire	public bool Weakref::acquire ( void )
	Weakref::get	public object Weakref::get ( void )
	Weakref::release	public bool Weakref::release ( void )
	Weakref::valid	public bool Weakref::valid ( void )
Worker	chunk	final public boolean chunk ( long $size , boolean $preserve )	Manipulation
	getCreatorId	final public long getCreatorId ( void )	識別
	getStacked	final public int getStacked ( void )	スタックの状態を調べる
	getThreadId	final public long getThreadId ( void )	識別
	isShutdown	final public boolean isShutdown ( void )	状態を検出する
	isWorking	final public boolean isWorking ( void )	状態を検出する
	merge	final public boolean merge ( mixed $from [, mixed $overwrite ] )	Manipulation
	pop	final public boolean pop ( void )	Manipulation
	run	abstract public void run ( void )	実行する
	shift	final public boolean shift ( void )	Manipulation
	shutdown	final public boolean shutdown ( void )	同期処理
	stack	final public int stack ( Stackable $work )	スタック処理
	start	final public boolean start ([ long $options ] )	実行する
	unstack	final public int unstack ([ Stackable $work ] )	スタック処理
XMLReader	NONE	 const int NONE = 0 ;
	ELEMENT	 const int ELEMENT = 1 ;
	ATTRIBUTE	 const int ATTRIBUTE = 2 ;
	TEXT	 const int TEXT = 3 ;
	CDATA	 const int CDATA = 4 ;
	ENTITY_REF	 const int ENTITY_REF = 5 ;
	ENTITY	 const int ENTITY = 6 ;
	PI	 const int PI = 7 ;
	COMMENT	 const int COMMENT = 8 ;
	DOC	 const int DOC = 9 ;
	DOC_TYPE	 const int DOC_TYPE = 10 ;
	DOC_FRAGMENT	 const int DOC_FRAGMENT = 11 ;
	NOTATION	 const int NOTATION = 12 ;
	WHITESPACE	 const int WHITESPACE = 13 ;
	SIGNIFICANT_WHITESPACE	 const int SIGNIFICANT_WHITESPACE = 14 ;
	END_ELEMENT	 const int END_ELEMENT = 15 ;
	END_ENTITY	 const int END_ENTITY = 16 ;
	XML_DECLARATION	 const int XML_DECLARATION = 17 ;
	LOADDTD	 const int LOADDTD = 1 ;
	DEFAULTATTRS	 const int DEFAULTATTRS = 2 ;
	VALIDATE	 const int VALIDATE = 3 ;
	SUBST_ENTITIES	 const int SUBST_ENTITIES = 4 ;
	$attributeCount	 public readonly int $attributeCount ;
	$baseURI	 public readonly string $baseURI ;
	$depth	 public readonly int $depth ;
	$hasAttributes	 public readonly bool $hasAttributes ;
	$hasValue	 public readonly bool $hasValue ;
	$isDefault	 public readonly bool $isDefault ;
	$isEmptyElement	 public readonly bool $isEmptyElement ;
	$localName	 public readonly string $localName ;
	$name	 public readonly string $name ;
	$namespaceURI	 public readonly string $namespaceURI ;
	$nodeType	 public readonly int $nodeType ;
	$prefix	 public readonly string $prefix ;
	$value	 public readonly string $value ;
	$xmlLang	 public readonly string $xmlLang ;
	close	public bool close ( void )	XMLReader の入力を閉じる
	expand	public DOMNode expand ([ DOMNode $basenode ] )	現在のノードのコピーを DOM オブジェクトとして返す
	getAttribute	public string getAttribute ( string $name )	名前をもとに、属性の値を取得する
	getAttributeNo	public string getAttributeNo ( int $index )	インデックスをもとに、属性の値を取得する
	getAttributeNs	public string getAttributeNs ( string $localName , string $namespaceURI )	名前および URI をもとに、属性の値を取得する
	getParserProperty	public bool getParserProperty ( int $property )	指定したプロパティが設定されているかどうかを示す
	isValid	public bool isValid ( void )	パースしているドキュメントの妥当性を示す
	lookupNamespace	public bool lookupNamespace ( string $prefix )	プレフィックスから、名前空間を検索する
	moveToAttribute	public bool moveToAttribute ( string $name )	指定した名前の属性にカーソルを移動する
	moveToAttributeNo	public bool moveToAttributeNo ( int $index )	指定したインデックスの属性にカーソルを移動する
	moveToAttributeNs	public bool moveToAttributeNs ( string $localName , string $namespaceURI )	指定した名前の属性にカーソルを移動する
	moveToElement	public bool moveToElement ( void )	現在の属性の親要素にカーソルを移動する
	moveToFirstAttribute	public bool moveToFirstAttribute ( void )	最初の属性にカーソルを移動する
	moveToNextAttribute	public bool moveToNextAttribute ( void )	次の属性にカーソルを移動する
	next	public bool next ([ string $localname ] )	すべてのサブツリーを飛ばして、次のノードにカーソルを移動する
	open	public bool open ( string $URI [, string $encoding [, int $options = 0 ]] )	パースする XML を含む URI を設定する
	read	public bool read ( void )	ドキュメント内の次のノードに移動する
	readInnerXML	public string readInnerXML ( void )	現在のノードから XML を取得する
	readOuterXML	public string readOuterXML ( void )	現在のノードから自分自身も含めた XML を取得する
	readString	public string readString ( void )	現在のノードの内容を文字列で読み込む
	setParserProperty	public bool setParserProperty ( int $property , bool $value )	パーサのオプションを設定する
	setRelaxNGSchema	public bool setRelaxNGSchema ( string $filename )	RelaxNG スキーマのファイル名あるいは URI を設定する
	setRelaxNGSchemaSource	public bool setRelaxNGSchemaSource ( string $source )	RelaxNG スキーマを含むデータを設定する
	setSchema	public bool setSchema ( string $filename )	ドキュメントを XSD で検証する
	xml	public bool xml ( string $source [, string $encoding [, int $options = 0 ]] )	パースする XML を含むデータを設定する
XSLTProcessor	getParameter	string getParameter ( string $namespaceURI , string $localName )	パラメータの値を取得する
	XsltProcessor::getSecurityPrefs	public int XsltProcessor::getSecurityPrefs ( void )
	hasExsltSupport	bool hasExsltSupport ( void )	PHP が EXSLT をサポートしているかどうかを判定する
	importStylesheet	void importStylesheet ( object $stylesheet )	スタイルシートを取り込む
	registerPHPFunctions	void registerPHPFunctions ([ mixed $restrict ] )	PHP 関数を XSLT 関数として利用できるようにする
	removeParameter	bool removeParameter ( string $namespaceURI , string $localName )	パラメータを削除する
	setParameter	bool setParameter ( string $namespace , string $name , string $value )	パラメータの値を設定する
	setProfiling	bool setProfiling ( string $filename )	プロファイル情報の出力ファイルを設定する
	XsltProcessor::setSecurityPrefs	public int XsltProcessor::setSecurityPrefs ( int $securityPrefs )
	transformToDoc	DOMDocument transformToDoc ( DOMNode $doc )	DOMDocument に変換する
	transformToURI	int transformToURI ( DOMDocument $doc , string $uri )	URI に変換する
	transformToXML	string transformToXML ( DOMDocument $doc )	XML に変換する
Yaf_Action_Abstract	$_controller	 protected $_controller ;
	execute	abstract public mixed execute ([ mixed $arg [, mixed $... ]] )
	getController	public Yaf_Controller_Abstract getController ( void )
	Yaf_Controller_Abstract::__clone	final private void Yaf_Controller_Abstract::__clone ( void )
	Yaf_Controller_Abstract::__construct	final private Yaf_Controller_Abstract::__construct ( void )
	Yaf_Controller_Abstract::display	protected bool Yaf_Controller_Abstract::display ( string $tpl [, array $parameters ] )
	Yaf_Controller_Abstract::forward	public void Yaf_Controller_Abstract::forward ( string $action [, array $paramters ] )
	Yaf_Controller_Abstract::getInvokeArg	public void Yaf_Controller_Abstract::getInvokeArg ( string $name )
	Yaf_Controller_Abstract::getInvokeArgs	public void Yaf_Controller_Abstract::getInvokeArgs ( void )
	Yaf_Controller_Abstract::getModuleName	public string Yaf_Controller_Abstract::getModuleName ( void )
	Yaf_Controller_Abstract::getRequest	public Yaf_Request_Abstract Yaf_Controller_Abstract::getRequest ( void )
	Yaf_Controller_Abstract::getResponse	public Yaf_Response_Abstract Yaf_Controller_Abstract::getResponse ( void )
	Yaf_Controller_Abstract::getView	public Yaf_View_Interface Yaf_Controller_Abstract::getView ( void )
	Yaf_Controller_Abstract::getViewpath	public void Yaf_Controller_Abstract::getViewpath ( void )
	Yaf_Controller_Abstract::init	public void Yaf_Controller_Abstract::init ( void )
	Yaf_Controller_Abstract::initView	public void Yaf_Controller_Abstract::initView ([ array $options ] )
	Yaf_Controller_Abstract::redirect	public bool Yaf_Controller_Abstract::redirect ( string $url )
	Yaf_Controller_Abstract::render	protected string Yaf_Controller_Abstract::render ( string $tpl [, array $parameters ] )
	Yaf_Controller_Abstract::setViewpath	public void Yaf_Controller_Abstract::setViewpath ( string $view_directory )
Yaf_Config_Abstract	$_config	 protected $_config ;
	$_readonly	 protected $_readonly ;
	get	abstract public mixed get ( string $name , mixed $value )
	readonly	abstract public bool readonly ( void )
	set	abstract public Yaf_Config_Abstract set ( void )
	toArray	abstract public array toArray ( void )
Yaf_Config_Ini	__construct	public __construct ( string $config_file [, string $section ] )
	count	public void count ( void )
	current	public void current ( void )
	__get	public void __get ([ string $name ] )
	__isset	public void __isset ( string $name )
	key	public void key ( void )
	next	public void next ( void )
	offsetExists	public void offsetExists ( string $name )
	offsetGet	public void offsetGet ( string $name )
	offsetSet	public void offsetSet ( string $name , string $value )
	offsetUnset	public void offsetUnset ( string $name )
	readonly	public void readonly ( void )
	rewind	public void rewind ( void )
	__set	public void __set ( string $name , mixed $value )
	toArray	public array toArray ( void )
	valid	public void valid ( void )
	Yaf_Config_Abstract::get	abstract public mixed Yaf_Config_Abstract::get ( string $name , mixed $value )
	Yaf_Config_Abstract::readonly	abstract public bool Yaf_Config_Abstract::readonly ( void )
	Yaf_Config_Abstract::set	abstract public Yaf_Config_Abstract Yaf_Config_Abstract::set ( void )
	Yaf_Config_Abstract::toArray	abstract public array Yaf_Config_Abstract::toArray ( void )
Yaf_Config_Simple	$_readonly	 protected $_readonly ;
	__construct	public __construct ( string $config_file [, string $section ] )
	count	public void count ( void )
	current	public void current ( void )
	__get	public void __get ([ string $name ] )
	__isset	public void __isset ( string $name )
	key	public void key ( void )
	next	public void next ( void )
	offsetExists	public void offsetExists ( string $name )
	offsetGet	public void offsetGet ( string $name )
	offsetSet	public void offsetSet ( string $name , string $value )
	offsetUnset	public void offsetUnset ( string $name )
	readonly	public void readonly ( void )
	rewind	public void rewind ( void )
	__set	public void __set ( string $name , string $value )
	toArray	public array toArray ( void )
	valid	public void valid ( void )
	Yaf_Config_Abstract::get	abstract public mixed Yaf_Config_Abstract::get ( string $name , mixed $value )
	Yaf_Config_Abstract::readonly	abstract public bool Yaf_Config_Abstract::readonly ( void )
	Yaf_Config_Abstract::set	abstract public Yaf_Config_Abstract Yaf_Config_Abstract::set ( void )
	Yaf_Config_Abstract::toArray	abstract public array Yaf_Config_Abstract::toArray ( void )
Yaf_Controller_Abstract	$actions	 public $actions ;
	$_module	 protected $_module ;
	$_name	 protected $_name ;
	$_request	 protected $_request ;
	$_response	 protected $_response ;
	$_invoke_args	 protected $_invoke_args ;
	$_view	 protected $_view ;
	__clone	final private void __clone ( void )
	__construct	final private __construct ( void )
	display	protected bool display ( string $tpl [, array $parameters ] )
	forward	public void forward ( string $action [, array $paramters ] )
	getInvokeArg	public void getInvokeArg ( string $name )
	getInvokeArgs	public void getInvokeArgs ( void )
	getModuleName	public string getModuleName ( void )
	getRequest	public Yaf_Request_Abstract getRequest ( void )
	getResponse	public Yaf_Response_Abstract getResponse ( void )
	getView	public Yaf_View_Interface getView ( void )
	getViewpath	public void getViewpath ( void )
	init	public void init ( void )
	initView	public void initView ([ array $options ] )
	redirect	public bool redirect ( string $url )
	render	protected string render ( string $tpl [, array $parameters ] )
	setViewpath	public void setViewpath ( string $view_directory )
Yaf_Dispatcher	$_router	 protected $_router ;
	$_view	 protected $_view ;
	$_request	 protected $_request ;
	$_plugins	 protected $_plugins ;
	$_instance	 protected static $_instance ;
	$_auto_render	 protected $_auto_render ;
	$_return_response	 protected $_return_response ;
	$_instantly_flush	 protected $_instantly_flush ;
	$_default_module	 protected $_default_module ;
	$_default_controller	 protected $_default_controller ;
	$_default_action	 protected $_default_action ;
	autoRender	public Yaf_Dispatcher autoRender ([ bool $flag ] )
	catchException	public Yaf_Dispatcher catchException ([ bool $flag ] )
	__clone	private void __clone ( void )
	__construct	public __construct ( void )
	disableView	public bool disableView ( void )
	dispatch	public Yaf_Response_Abstract dispatch ( Yaf_Request_Abstract $request )
	enableView	public Yaf_Dispatcher enableView ( void )
	flushInstantly	public Yaf_Dispatcher flushInstantly ([ bool $flag ] )
	getApplication	public Yaf_Application getApplication ( void )
	getInstance	public static Yaf_Dispatcher getInstance ( void )
	getRequest	public Yaf_Request_Abstract getRequest ( void )
	getRouter	public Yaf_Router getRouter ( void )
	initView	public Yaf_View_Interface initView ( string $templates_dir [, array $options ] )
	registerPlugin	public Yaf_Dispatcher registerPlugin ( Yaf_Plugin_Abstract $plugin )
	returnResponse	public Yaf_Dispatcher returnResponse ( bool $flag )
	setDefaultAction	public Yaf_Dispatcher setDefaultAction ( string $action )
	setDefaultController	public Yaf_Dispatcher setDefaultController ( string $controller )
	setDefaultModule	public Yaf_Dispatcher setDefaultModule ( string $module )
	setErrorHandler	public Yaf_Dispatcher setErrorHandler ( call $callback , int $error_types )
	setRequest	public Yaf_Dispatcher setRequest ( Yaf_Request_Abstract $request )
	setView	public Yaf_Dispatcher setView ( Yaf_View_Interface $view )
	__sleep	private void __sleep ( void )
	throwException	public Yaf_Dispatcher throwException ([ bool $flag ] )
	__wakeup	private void __wakeup ( void )
Yaf_Exception_DispatchFailed	Yaf_Exception::__construct	public Yaf_Exception::__construct ( void )
	Yaf_Exception::getPrevious	public void Yaf_Exception::getPrevious ( void )
Yaf_Exception_LoadFailed_Action	Yaf_Exception::__construct	public Yaf_Exception::__construct ( void )
	Yaf_Exception::getPrevious	public void Yaf_Exception::getPrevious ( void )
Yaf_Exception_LoadFailed_Controller	Yaf_Exception::__construct	public Yaf_Exception::__construct ( void )
	Yaf_Exception::getPrevious	public void Yaf_Exception::getPrevious ( void )
Yaf_Exception_LoadFailed_Module	Yaf_Exception::__construct	public Yaf_Exception::__construct ( void )
	Yaf_Exception::getPrevious	public void Yaf_Exception::getPrevious ( void )
Yaf_Exception_LoadFailed_View	Yaf_Exception::__construct	public Yaf_Exception::__construct ( void )
	Yaf_Exception::getPrevious	public void Yaf_Exception::getPrevious ( void )
Yaf_Exception_LoadFailed	Yaf_Exception::__construct	public Yaf_Exception::__construct ( void )
	Yaf_Exception::getPrevious	public void Yaf_Exception::getPrevious ( void )
Yaf_Exception_RouterFailed	Yaf_Exception::__construct	public Yaf_Exception::__construct ( void )
	Yaf_Exception::getPrevious	public void Yaf_Exception::getPrevious ( void )
Yaf_Exception_StartupError	Yaf_Exception::__construct	public Yaf_Exception::__construct ( void )
	Yaf_Exception::getPrevious	public void Yaf_Exception::getPrevious ( void )
Yaf_Exception_TypeError	Yaf_Exception::__construct	public Yaf_Exception::__construct ( void )
	Yaf_Exception::getPrevious	public void Yaf_Exception::getPrevious ( void )
Yaf_Exception	$message	 protected string $message ;
	$code	 protected int $code ;
	$file	 protected string $file ;
	$line	 protected int $line ;
	__construct	public __construct ( void )
	getPrevious	public void getPrevious ( void )
	Exception::getMessage	final public string Exception::getMessage ( void )
	Exception::getPrevious	final public Exception Exception::getPrevious ( void )
	Exception::getCode	final public mixed Exception::getCode ( void )
	Exception::getFile	final public string Exception::getFile ( void )
	Exception::getLine	final public int Exception::getLine ( void )
	Exception::getTrace	final public array Exception::getTrace ( void )
	Exception::getTraceAsString	final public string Exception::getTraceAsString ( void )
	Exception::__toString	public string Exception::__toString ( void )
	Exception::__clone	final private void Exception::__clone ( void )
Yaf_Loader	$_local_ns	 protected $_local_ns ;
	$_library	 protected $_library ;
	$_global_library	 protected $_global_library ;
	$_instance	 static $_instance ;
	autoload	public void autoload ( void )
	clearLocalNamespace	public void clearLocalNamespace ( void )
	__clone	private void __clone ( void )
	__construct	public __construct ( void )
	getInstance	public static void getInstance ( void )
	getLibraryPath	public Yaf_Loader getLibraryPath ([ bool $is_global = false ] )
	getLocalNamespace	public void getLocalNamespace ( void )
	import	public static void import ( void )
	isLocalName	public void isLocalName ( void )
	registerLocalNamespace	public void registerLocalNamespace ( mixed $prefix )
	setLibraryPath	public Yaf_Loader setLibraryPath ( string $directory [, bool $is_global = false ] )
	__sleep	private void __sleep ( void )
	__wakeup	private void __wakeup ( void )
Yaf_Plugin_Abstract	dispatchLoopShutdown	public void dispatchLoopShutdown ( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )
	dispatchLoopStartup	public void dispatchLoopStartup ( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )
	postDispatch	public void postDispatch ( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )
	preDispatch	public void preDispatch ( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )
	preResponse	public void preResponse ( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )
	routerShutdown	public void routerShutdown ( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )
	routerStartup	public void routerStartup ( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )
Yaf_Registry	$_instance	 static $_instance ;
	$_entries	 protected $_entries ;
	__clone	private void __clone ( void )
	__construct	__construct ( void )
	del	public static void del ( string $name )
	get	public static mixed get ( string $name )
	has	public static bool has ( string $name )
	set	public static bool set ( string $name , string $value )
Yaf_Request_Abstract	SCHEME_HTTP	 const string SCHEME_HTTP = http ;
	SCHEME_HTTPS	 const string SCHEME_HTTPS = https ;
	$module	 public $module ;
	$controller	 public $controller ;
	$action	 public $action ;
	$method	 public $method ;
	$params	 protected $params ;
	$language	 protected $language ;
	$_exception	 protected $_exception ;
	$_base_uri	 protected $_base_uri ;
	$uri	 protected $uri ;
	$dispatched	 protected $dispatched ;
	$routed	 protected $routed ;
	getActionName	public void getActionName ( void )
	getBaseUri	public void getBaseUri ( void )
	getControllerName	public void getControllerName ( void )
	getEnv	public void getEnv ( string $name [, string $default ] )
	getException	public void getException ( void )
	getLanguage	public void getLanguage ( void )
	getMethod	public void getMethod ( void )
	getModuleName	public void getModuleName ( void )
	getParam	public void getParam ( string $name [, string $default ] )
	getParams	public void getParams ( void )
	getRequestUri	public void getRequestUri ( void )
	getServer	public void getServer ( string $name [, string $default ] )
	isCli	public void isCli ( void )
	isDispatched	public void isDispatched ( void )
	isGet	public void isGet ( void )
	isHead	public void isHead ( void )
	isOptions	public void isOptions ( void )
	isPost	public void isPost ( void )
	isPut	public void isPut ( void )
	isRouted	public void isRouted ( void )
	isXmlHttpRequest	public void isXmlHttpRequest ( void )
	setActionName	public void setActionName ( string $action )
	setBaseUri	public bool setBaseUri ( string $uir )
	setControllerName	public void setControllerName ( string $controller )
	setDispatched	public void setDispatched ( void )
	setModuleName	public void setModuleName ( string $module )
	setParam	public void setParam ( string $name [, string $value ] )
	setRequestUri	public void setRequestUri ( string $uir )
	setRouted	public void setRouted ([ string $flag ] )
Yaf_Request_Http	__clone	private void __clone ( void )
	__construct	__construct ( void )
	get	public mixed get ( string $name [, string $default ] )
	getCookie	public mixed getCookie ( string $name [, string $default ] )
	getFiles	public void getFiles ( void )
	getPost	public mixed getPost ( string $name [, string $default ] )
	getQuery	public mixed getQuery ( string $name [, string $default ] )
	getRequest	public void getRequest ( void )
	isXmlHttpRequest	public bool isXmlHttpRequest ( void )
	Yaf_Request_Abstract::getActionName	public void Yaf_Request_Abstract::getActionName ( void )
	Yaf_Request_Abstract::getBaseUri	public void Yaf_Request_Abstract::getBaseUri ( void )
	Yaf_Request_Abstract::getControllerName	public void Yaf_Request_Abstract::getControllerName ( void )
	Yaf_Request_Abstract::getEnv	public void Yaf_Request_Abstract::getEnv ( string $name [, string $default ] )
	Yaf_Request_Abstract::getException	public void Yaf_Request_Abstract::getException ( void )
	Yaf_Request_Abstract::getLanguage	public void Yaf_Request_Abstract::getLanguage ( void )
	Yaf_Request_Abstract::getMethod	public void Yaf_Request_Abstract::getMethod ( void )
	Yaf_Request_Abstract::getModuleName	public void Yaf_Request_Abstract::getModuleName ( void )
	Yaf_Request_Abstract::getParam	public void Yaf_Request_Abstract::getParam ( string $name [, string $default ] )
	Yaf_Request_Abstract::getParams	public void Yaf_Request_Abstract::getParams ( void )
	Yaf_Request_Abstract::getRequestUri	public void Yaf_Request_Abstract::getRequestUri ( void )
	Yaf_Request_Abstract::getServer	public void Yaf_Request_Abstract::getServer ( string $name [, string $default ] )
	Yaf_Request_Abstract::isCli	public void Yaf_Request_Abstract::isCli ( void )
	Yaf_Request_Abstract::isDispatched	public void Yaf_Request_Abstract::isDispatched ( void )
	Yaf_Request_Abstract::isGet	public void Yaf_Request_Abstract::isGet ( void )
	Yaf_Request_Abstract::isHead	public void Yaf_Request_Abstract::isHead ( void )
	Yaf_Request_Abstract::isOptions	public void Yaf_Request_Abstract::isOptions ( void )
	Yaf_Request_Abstract::isPost	public void Yaf_Request_Abstract::isPost ( void )
	Yaf_Request_Abstract::isPut	public void Yaf_Request_Abstract::isPut ( void )
	Yaf_Request_Abstract::isRouted	public void Yaf_Request_Abstract::isRouted ( void )
	Yaf_Request_Abstract::isXmlHttpRequest	public void Yaf_Request_Abstract::isXmlHttpRequest ( void )
	Yaf_Request_Abstract::setActionName	public void Yaf_Request_Abstract::setActionName ( string $action )
	Yaf_Request_Abstract::setBaseUri	public bool Yaf_Request_Abstract::setBaseUri ( string $uir )
	Yaf_Request_Abstract::setControllerName	public void Yaf_Request_Abstract::setControllerName ( string $controller )
	Yaf_Request_Abstract::setDispatched	public void Yaf_Request_Abstract::setDispatched ( void )
	Yaf_Request_Abstract::setModuleName	public void Yaf_Request_Abstract::setModuleName ( string $module )
	Yaf_Request_Abstract::setParam	public void Yaf_Request_Abstract::setParam ( string $name [, string $value ] )
	Yaf_Request_Abstract::setRequestUri	public void Yaf_Request_Abstract::setRequestUri ( string $uir )
	Yaf_Request_Abstract::setRouted	public void Yaf_Request_Abstract::setRouted ([ string $flag ] )
Yaf_Request_Simple	SCHEME_HTTP	 const string SCHEME_HTTP = http ;
	SCHEME_HTTPS	 const string SCHEME_HTTPS = https ;
	__clone	private void __clone ( void )
	__construct	__construct ( void )
	get	public void get ( void )
	getCookie	public void getCookie ( void )
	getFiles	public void getFiles ( void )
	getPost	public void getPost ( void )
	getQuery	public void getQuery ( void )
	getRequest	public void getRequest ( void )
	isXmlHttpRequest	public void isXmlHttpRequest ( void )
	Yaf_Request_Abstract::getActionName	public void Yaf_Request_Abstract::getActionName ( void )
	Yaf_Request_Abstract::getBaseUri	public void Yaf_Request_Abstract::getBaseUri ( void )
	Yaf_Request_Abstract::getControllerName	public void Yaf_Request_Abstract::getControllerName ( void )
	Yaf_Request_Abstract::getEnv	public void Yaf_Request_Abstract::getEnv ( string $name [, string $default ] )
	Yaf_Request_Abstract::getException	public void Yaf_Request_Abstract::getException ( void )
	Yaf_Request_Abstract::getLanguage	public void Yaf_Request_Abstract::getLanguage ( void )
	Yaf_Request_Abstract::getMethod	public void Yaf_Request_Abstract::getMethod ( void )
	Yaf_Request_Abstract::getModuleName	public void Yaf_Request_Abstract::getModuleName ( void )
	Yaf_Request_Abstract::getParam	public void Yaf_Request_Abstract::getParam ( string $name [, string $default ] )
	Yaf_Request_Abstract::getParams	public void Yaf_Request_Abstract::getParams ( void )
	Yaf_Request_Abstract::getRequestUri	public void Yaf_Request_Abstract::getRequestUri ( void )
	Yaf_Request_Abstract::getServer	public void Yaf_Request_Abstract::getServer ( string $name [, string $default ] )
	Yaf_Request_Abstract::isCli	public void Yaf_Request_Abstract::isCli ( void )
	Yaf_Request_Abstract::isDispatched	public void Yaf_Request_Abstract::isDispatched ( void )
	Yaf_Request_Abstract::isGet	public void Yaf_Request_Abstract::isGet ( void )
	Yaf_Request_Abstract::isHead	public void Yaf_Request_Abstract::isHead ( void )
	Yaf_Request_Abstract::isOptions	public void Yaf_Request_Abstract::isOptions ( void )
	Yaf_Request_Abstract::isPost	public void Yaf_Request_Abstract::isPost ( void )
	Yaf_Request_Abstract::isPut	public void Yaf_Request_Abstract::isPut ( void )
	Yaf_Request_Abstract::isRouted	public void Yaf_Request_Abstract::isRouted ( void )
	Yaf_Request_Abstract::isXmlHttpRequest	public void Yaf_Request_Abstract::isXmlHttpRequest ( void )
	Yaf_Request_Abstract::setActionName	public void Yaf_Request_Abstract::setActionName ( string $action )
	Yaf_Request_Abstract::setBaseUri	public bool Yaf_Request_Abstract::setBaseUri ( string $uir )
	Yaf_Request_Abstract::setControllerName	public void Yaf_Request_Abstract::setControllerName ( string $controller )
	Yaf_Request_Abstract::setDispatched	public void Yaf_Request_Abstract::setDispatched ( void )
	Yaf_Request_Abstract::setModuleName	public void Yaf_Request_Abstract::setModuleName ( string $module )
	Yaf_Request_Abstract::setParam	public void Yaf_Request_Abstract::setParam ( string $name [, string $value ] )
	Yaf_Request_Abstract::setRequestUri	public void Yaf_Request_Abstract::setRequestUri ( string $uir )
	Yaf_Request_Abstract::setRouted	public void Yaf_Request_Abstract::setRouted ([ string $flag ] )
Yaf_Response_Abstract	DEFAULT_BODY	 const string DEFAULT_BODY = "content" ;
	$_header	 protected $_header ;
	$_body	 protected $_body ;
	$_sendheader	 protected $_sendheader ;
	appendBody	public bool appendBody ( string $content [, string $key ] )
	clearBody	public bool clearBody ([ string $key ] )
	clearHeaders	public void clearHeaders ( void )
	__clone	private void __clone ( void )
	__construct	public __construct ( void )
	__destruct	public void __destruct ( void )
	getBody	public mixed getBody ([ string $key ] )
	getHeader	public void getHeader ( void )
	prependBody	public bool prependBody ( string $content [, string $key ] )
	response	public void response ( void )
	setAllHeaders	protected void setAllHeaders ( void )
	setBody	public bool setBody ( string $content [, string $key ] )
	setHeader	public void setHeader ( void )
	setRedirect	public void setRedirect ( void )
	__toString	private void __toString ( void )
Yaf_Route_Interface	route	abstract public bool route ( Yaf_Request_Abstract $request )
Yaf_Route_Map	$_ctl_router	 protected $_ctl_router ;
	$_delimeter	 protected $_delimeter ;
	__construct	public __construct ([ string $controller_prefer = false [, string $delimiter = '' ]] )
	route	public bool route ( Yaf_Request_Abstract $request )
Yaf_Route_Regex	$_route	 protected $_route ;
	$_default	 protected $_default ;
	$_maps	 protected $_maps ;
	$_verify	 protected $_verify ;
	__construct	public __construct ( string $match , array $route [, array $map [, array $verify ]] )
	route	public bool route ( Yaf_Request_Abstract $request )
	Yaf_Route_Interface::route	abstract public bool Yaf_Route_Interface::route ( Yaf_Request_Abstract $request )
Yaf_Route_Rewrite	$_route	 protected $_route ;
	$_default	 protected $_default ;
	$_verify	 protected $_verify ;
	__construct	public __construct ( string $match , array $route [, array $verify ] )
	route	public bool route ( Yaf_Request_Abstract $request )
	Yaf_Route_Interface::route	abstract public bool Yaf_Route_Interface::route ( Yaf_Request_Abstract $request )
Yaf_Route_Simple	$controller	 protected $controller ;
	$module	 protected $module ;
	$action	 protected $action ;
	__construct	public __construct ( string $module_name , string $controller_name , string $action_name )
	route	public bool route ( Yaf_Request_Abstract $request )
Yaf_Route_Static	match	public void match ( string $uri )
	route	public bool route ( Yaf_Request_Abstract $request )
Yaf_Route_Supervar	$_var_name	 protected $_var_name ;
	__construct	public __construct ( string $supervar_name )
	route	public bool route ( Yaf_Request_Abstract $request )
Yaf_Router	$_routes	 protected $_routes ;
	$_current	 protected $_current ;
	addConfig	public bool addConfig ( Yaf_Config_Abstract $config )
	addRoute	public bool addRoute ( string $name , Yaf_Route_Abstract $route )
	__construct	public __construct ( void )
	getCurrentRoute	public string getCurrentRoute ( void )
	getRoute	public Yaf_Route_Interface getRoute ( string $name )
	getRoutes	public mixed getRoutes ( void )
	route	public bool route ( Yaf_Request_Abstract $request )
Yaf_Session	$_instance	 protected static $_instance ;
	$_session	 protected $_session ;
	$_started	 protected $_started ;
	__clone	private void __clone ( void )
	__construct	__construct ( void )
	count	public void count ( void )
	current	public void current ( void )
	del	public void del ( string $name )
	__get	public void __get ( string $name )
	getInstance	public static void getInstance ( void )
	has	public void has ( string $name )
	__isset	public void __isset ( string $name )
	key	public void key ( void )
	next	public void next ( void )
	offsetExists	public void offsetExists ( string $name )
	offsetGet	public void offsetGet ( string $name )
	offsetSet	public void offsetSet ( string $name , string $value )
	offsetUnset	public void offsetUnset ( string $name )
	rewind	public void rewind ( void )
	__set	public void __set ( string $name , string $value )
	__sleep	private void __sleep ( void )
	start	public void start ( void )
	__unset	public void __unset ( string $name )
	valid	public void valid ( void )
	__wakeup	private void __wakeup ( void )
Yaf_View_Interface	assign	abstract public bool assign ( string $name [, string $value ] )
	display	abstract public bool display ( string $tpl [, array $tpl_vars ] )
	getScriptPath	abstract public void getScriptPath ( void )
	render	abstract public string render ( string $tpl [, array $tpl_vars ] )
	setScriptPath	abstract public void setScriptPath ( string $template_dir )
Yaf_View_Simple	$_tpl_vars	 protected $_tpl_vars ;
	$_tpl_dir	 protected $_tpl_dir ;
	assign	public bool assign ( string $name [, mixed $value ] )
	assignRef	public bool assignRef ( string $name , mixed &$value )
	clear	public bool clear ([ string $name ] )
	__construct	final public __construct ( string $tempalte_dir [, array $options ] )
	display	public bool display ( string $tpl [, array $tpl_vars ] )
	eval	public string eval ( string $tpl_content [, array $tpl_vars ] )
	__get	public void __get ([ string $name ] )
	getScriptPath	public string getScriptPath ( void )
	__isset	public void __isset ( string $name )
	render	public string render ( string $tpl [, array $tpl_vars ] )
	__set	public void __set ( string $name , mixed $value )
	setScriptPath	public bool setScriptPath ( string $template_dir )
ZipArchive	$status	int $status;
	$statusSys	int $statusSys;
	$numFiles	int $numFiles;
	$filename	string $filename;
	$comment	string $comment;
	addEmptyDir	bool addEmptyDir ( string $dirname )	新しいディレクトリを追加する
	addFile	bool addFile ( string $filename [, string $localname = NULL [, int $start = 0 [, int $length = 0 ]]] )	指定したパスからファイルを ZIP アーカイブに追加する
	addFromString	bool addFromString ( string $localname , string $contents )	内容を指定して、ファイルを ZIP アーカイブに追加する
	addGlob	bool addGlob ( string $pattern [, int $flags = 0 [, array $options = array() ]] )	ディレクトリから、glob パターンを使ってファイルを追加する
	addPattern	bool addPattern ( string $pattern [, string $path = '.' [, array $options = array() ]] )	ディレクトリから、PCRE パターンを使ってファイルを追加する
	close	bool close ( void )	アクティブな (オープンされた、あるいは新しく作成された) アーカイブを閉じる
	deleteIndex	bool deleteIndex ( int $index )	インデックスを使用して、アーカイブ内のエントリを削除する
	deleteName	bool deleteName ( string $name )	名前を使用して、アーカイブからエントリを削除する
	extractTo	bool extractTo ( string $destination [, mixed $entries ] )	アーカイブの内容を展開する
	getArchiveComment	string getArchiveComment ([ int $flags ] )	ZIP アーカイブのコメントを返す
	getCommentIndex	string getCommentIndex ( int $index [, int $flags ] )	エントリのインデックスを使用して、エントリのコメントを返す
	getCommentName	string getCommentName ( string $name [, int $flags ] )	エントリ名を使用して、エントリのコメントを返す
	getFromIndex	string getFromIndex ( int $index [, int $length = 0 [, int $flags ]] )	インデックスを使用して、エントリの内容を返す
	getFromName	string getFromName ( string $name [, int $length = 0 [, int $flags ]] )	名前を使用して、エントリの内容を返す
	getNameIndex	string getNameIndex ( int $index [, int $flags ] )	インデックスを使用して、エントリの名前を返す
	getStatusString	string getStatusString ( void )	システムエラー、または ZIP メッセージに関するエラー情報を返す
	getStream	resource getStream ( string $name )	名前を使用して、エントリのファイルハンドラ (読み込み専用) を取得する
	locateName	int locateName ( string $name [, int $flags ] )	アーカイブ内のエントリのインデックスを返す
	open	mixed open ( string $filename [, int $flags ] )	ZIP ファイルアーカイブをオープンする
	renameIndex	bool renameIndex ( int $index , string $newname )	インデックスを使用してエントリ名を変更する
	renameName	bool renameName ( string $name , string $newname )	名前を使用してエントリ名を変更する
	setArchiveComment	bool setArchiveComment ( string $comment )	ZIP アーカイブのコメントを設定する
	setCommentIndex	bool setCommentIndex ( int $index , string $comment )	インデックスを使用してエントリのコメントを設定する
	setCommentName	bool setCommentName ( string $name , string $comment )	名前を使用してエントリのコメントを設定する
	statIndex	array statIndex ( int $index [, int $flags ] )	インデックスを使用してエントリの詳細を取得する
	statName	array statName ( string $name [, int $flags ] )	名前を使用してエントリの詳細を取得する
	unchangeAll	bool unchangeAll ( void )	アーカイブに対するすべての変更を取り消す
	unchangeArchive	bool unchangeArchive ( void )	アーカイブ全体に対して行われたすべての変更を取り消す
	unchangeIndex	bool unchangeIndex ( int $index )	指定したインデックスのエントリに対するすべての変更を取り消す
	unchangeName	bool unchangeName ( string $name )	指定した名前のエントリに対するすべての変更を取り消す
